{"version":3,"sources":["../node_modules/date-fns/esm/_lib/requiredArgs/index.js","../node_modules/date-fns/esm/toDate/index.js","../node_modules/date-fns/esm/_lib/toInteger/index.js","../node_modules/date-fns/esm/isValid/index.js","../node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","../node_modules/date-fns/esm/compareAsc/index.js","../node_modules/date-fns/esm/isSameDay/index.js","../node_modules/date-fns/esm/addMilliseconds/index.js","../node_modules/date-fns/esm/startOfDay/index.js","../node_modules/date-fns/esm/subMilliseconds/index.js","../node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","../node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","../node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","../node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","../node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","../node_modules/date-fns/esm/locale/en-US/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","../node_modules/moment/moment.js","../node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","../node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/format/formatters/index.js","../node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","../node_modules/date-fns/esm/format/index.js","../node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","../node_modules/date-fns/esm/isBefore/index.js","../../../../src/v2/legacyParse/index.ts","../node_modules/date-fns/esm/_lib/format/longFormatters/index.js","../node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","../node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","../node_modules/date-fns/esm/_lib/protectedTokens/index.js","../node_modules/date-fns/esm/_lib/assign/index.js","../node_modules/date-fns/esm/addDays/index.js","../node_modules/date-fns/esm/getDaysInMonth/index.js","../node_modules/date-fns/esm/addMonths/index.js","../node_modules/date-fns/esm/add/index.js","../node_modules/date-fns/esm/isWeekend/index.js","../node_modules/date-fns/esm/addBusinessDays/index.js","../node_modules/date-fns/esm/addHours/index.js","../node_modules/date-fns/esm/startOfWeek/index.js","../node_modules/date-fns/esm/startOfISOWeek/index.js","../node_modules/date-fns/esm/getISOWeekYear/index.js","../node_modules/date-fns/esm/startOfISOWeekYear/index.js","../node_modules/date-fns/esm/differenceInCalendarDays/index.js","../node_modules/date-fns/esm/setISOWeekYear/index.js","../node_modules/date-fns/esm/addISOWeekYears/index.js","../node_modules/date-fns/esm/addMinutes/index.js","../node_modules/date-fns/esm/addQuarters/index.js","../node_modules/date-fns/esm/addSeconds/index.js","../node_modules/date-fns/esm/addWeeks/index.js","../node_modules/date-fns/esm/addYears/index.js","../node_modules/date-fns/esm/areIntervalsOverlapping/index.js","../node_modules/date-fns/esm/closestIndexTo/index.js","../node_modules/date-fns/esm/closestTo/index.js","../node_modules/date-fns/esm/compareDesc/index.js","../node_modules/date-fns/esm/differenceInBusinessDays/index.js","../node_modules/date-fns/esm/differenceInCalendarISOWeekYears/index.js","../node_modules/date-fns/esm/differenceInCalendarISOWeeks/index.js","../node_modules/date-fns/esm/differenceInCalendarMonths/index.js","../node_modules/date-fns/esm/getQuarter/index.js","../node_modules/date-fns/esm/differenceInCalendarQuarters/index.js","../node_modules/date-fns/esm/differenceInCalendarWeeks/index.js","../node_modules/date-fns/esm/differenceInCalendarYears/index.js","../node_modules/date-fns/esm/differenceInDays/index.js","../node_modules/date-fns/esm/differenceInMilliseconds/index.js","../node_modules/date-fns/esm/differenceInHours/index.js","../node_modules/date-fns/esm/subISOWeekYears/index.js","../node_modules/date-fns/esm/differenceInISOWeekYears/index.js","../node_modules/date-fns/esm/differenceInMinutes/index.js","../node_modules/date-fns/esm/differenceInMonths/index.js","../node_modules/date-fns/esm/differenceInQuarters/index.js","../node_modules/date-fns/esm/differenceInSeconds/index.js","../node_modules/date-fns/esm/differenceInWeeks/index.js","../node_modules/date-fns/esm/differenceInYears/index.js","../node_modules/date-fns/esm/eachDayOfInterval/index.js","../node_modules/date-fns/esm/eachMonthOfInterval/index.js","../node_modules/date-fns/esm/eachWeekOfInterval/index.js","../node_modules/date-fns/esm/isSunday/index.js","../node_modules/date-fns/esm/eachWeekendOfInterval/index.js","../node_modules/date-fns/esm/startOfMonth/index.js","../node_modules/date-fns/esm/endOfMonth/index.js","../node_modules/date-fns/esm/eachWeekendOfMonth/index.js","../node_modules/date-fns/esm/startOfYear/index.js","../node_modules/date-fns/esm/endOfYear/index.js","../node_modules/date-fns/esm/eachWeekendOfYear/index.js","../node_modules/date-fns/esm/eachYearOfInterval/index.js","../node_modules/date-fns/esm/endOfDay/index.js","../node_modules/date-fns/esm/endOfDecade/index.js","../node_modules/date-fns/esm/endOfHour/index.js","../node_modules/date-fns/esm/endOfWeek/index.js","../node_modules/date-fns/esm/endOfISOWeek/index.js","../node_modules/date-fns/esm/endOfISOWeekYear/index.js","../node_modules/date-fns/esm/endOfMinute/index.js","../node_modules/date-fns/esm/endOfQuarter/index.js","../node_modules/date-fns/esm/endOfSecond/index.js","../node_modules/date-fns/esm/endOfToday/index.js","../node_modules/date-fns/esm/endOfTomorrow/index.js","../node_modules/date-fns/esm/endOfYesterday/index.js","../node_modules/date-fns/esm/_lib/cloneObject/index.js","../node_modules/date-fns/esm/formatDistance/index.js","../node_modules/date-fns/esm/formatDistanceStrict/index.js","../node_modules/date-fns/esm/formatDistanceToNow/index.js","../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js","../node_modules/date-fns/esm/formatISO/index.js","../node_modules/date-fns/esm/formatISO9075/index.js","../node_modules/date-fns/esm/formatISODuration/index.js","../node_modules/date-fns/esm/formatRFC3339/index.js","../node_modules/date-fns/esm/formatRFC7231/index.js","../node_modules/date-fns/esm/formatRelative/index.js","../node_modules/date-fns/esm/fromUnixTime/index.js","../node_modules/date-fns/esm/getDate/index.js","../node_modules/date-fns/esm/getDay/index.js","../node_modules/date-fns/esm/getDayOfYear/index.js","../node_modules/date-fns/esm/isLeapYear/index.js","../node_modules/date-fns/esm/getDaysInYear/index.js","../node_modules/date-fns/esm/getDecade/index.js","../node_modules/date-fns/esm/getHours/index.js","../node_modules/date-fns/esm/getISODay/index.js","../node_modules/date-fns/esm/getISOWeek/index.js","../node_modules/date-fns/esm/getISOWeeksInYear/index.js","../node_modules/date-fns/esm/getMilliseconds/index.js","../node_modules/date-fns/esm/getMinutes/index.js","../node_modules/date-fns/esm/getMonth/index.js","../node_modules/date-fns/esm/getOverlappingDaysInIntervals/index.js","../node_modules/date-fns/esm/getSeconds/index.js","../node_modules/date-fns/esm/getTime/index.js","../node_modules/date-fns/esm/getUnixTime/index.js","../node_modules/date-fns/esm/getWeekYear/index.js","../node_modules/date-fns/esm/startOfWeekYear/index.js","../node_modules/date-fns/esm/getWeek/index.js","../node_modules/date-fns/esm/getWeekOfMonth/index.js","../node_modules/date-fns/esm/lastDayOfMonth/index.js","../node_modules/date-fns/esm/getWeeksInMonth/index.js","../node_modules/date-fns/esm/getYear/index.js","../node_modules/date-fns/esm/subDays/index.js","../node_modules/date-fns/esm/subMonths/index.js","../node_modules/date-fns/esm/sub/index.js","../node_modules/date-fns/esm/intervalToDuration/index.js","../node_modules/date-fns/esm/isAfter/index.js","../node_modules/date-fns/esm/isDate/index.js","../node_modules/date-fns/esm/isEqual/index.js","../node_modules/date-fns/esm/isExists/index.js","../node_modules/date-fns/esm/isFirstDayOfMonth/index.js","../node_modules/date-fns/esm/isFriday/index.js","../node_modules/date-fns/esm/isFuture/index.js","../node_modules/date-fns/esm/isLastDayOfMonth/index.js","../node_modules/date-fns/esm/isMonday/index.js","../node_modules/date-fns/esm/isPast/index.js","../node_modules/date-fns/esm/startOfHour/index.js","../node_modules/date-fns/esm/isSameHour/index.js","../node_modules/date-fns/esm/isSameWeek/index.js","../node_modules/date-fns/esm/isSameISOWeek/index.js","../node_modules/date-fns/esm/isSameISOWeekYear/index.js","../node_modules/date-fns/esm/startOfMinute/index.js","../node_modules/date-fns/esm/isSameMinute/index.js","../node_modules/date-fns/esm/isSameMonth/index.js","../node_modules/date-fns/esm/startOfQuarter/index.js","../node_modules/date-fns/esm/isSameQuarter/index.js","../node_modules/date-fns/esm/startOfSecond/index.js","../node_modules/date-fns/esm/isSameSecond/index.js","../node_modules/date-fns/esm/isSameYear/index.js","../node_modules/date-fns/esm/isSaturday/index.js","../node_modules/date-fns/esm/isThisHour/index.js","../node_modules/date-fns/esm/isThisISOWeek/index.js","../node_modules/date-fns/esm/isThisMinute/index.js","../node_modules/date-fns/esm/isThisMonth/index.js","../node_modules/date-fns/esm/isThisQuarter/index.js","../node_modules/date-fns/esm/isThisSecond/index.js","../node_modules/date-fns/esm/isThisWeek/index.js","../node_modules/date-fns/esm/isThisYear/index.js","../node_modules/date-fns/esm/isThursday/index.js","../node_modules/date-fns/esm/isToday/index.js","../node_modules/date-fns/esm/isTomorrow/index.js","../node_modules/date-fns/esm/isTuesday/index.js","../node_modules/date-fns/esm/isWednesday/index.js","../node_modules/date-fns/esm/isWithinInterval/index.js","../node_modules/date-fns/esm/isYesterday/index.js","../node_modules/date-fns/esm/lastDayOfDecade/index.js","../node_modules/date-fns/esm/lastDayOfWeek/index.js","../node_modules/date-fns/esm/lastDayOfISOWeek/index.js","../node_modules/date-fns/esm/lastDayOfISOWeekYear/index.js","../node_modules/date-fns/esm/lastDayOfQuarter/index.js","../node_modules/date-fns/esm/lastDayOfYear/index.js","../node_modules/date-fns/esm/lightFormat/index.js","../node_modules/date-fns/esm/max/index.js","../node_modules/date-fns/esm/min/index.js","../node_modules/date-fns/esm/parseISO/index.js","../node_modules/date-fns/esm/parseJSON/index.js","../node_modules/date-fns/esm/roundToNearestMinutes/index.js","../node_modules/date-fns/esm/setMonth/index.js","../node_modules/date-fns/esm/set/index.js","../node_modules/date-fns/esm/setDate/index.js","../node_modules/date-fns/esm/setDay/index.js","../node_modules/date-fns/esm/setDayOfYear/index.js","../node_modules/date-fns/esm/setHours/index.js","../node_modules/date-fns/esm/setISODay/index.js","../node_modules/date-fns/esm/setISOWeek/index.js","../node_modules/date-fns/esm/setMilliseconds/index.js","../node_modules/date-fns/esm/setMinutes/index.js","../node_modules/date-fns/esm/setQuarter/index.js","../node_modules/date-fns/esm/setSeconds/index.js","../node_modules/date-fns/esm/setWeek/index.js","../node_modules/date-fns/esm/setWeekYear/index.js","../node_modules/date-fns/esm/setYear/index.js","../node_modules/date-fns/esm/startOfDecade/index.js","../node_modules/date-fns/esm/startOfToday/index.js","../node_modules/date-fns/esm/startOfTomorrow/index.js","../node_modules/date-fns/esm/startOfYesterday/index.js","../node_modules/date-fns/esm/subBusinessDays/index.js","../node_modules/date-fns/esm/subHours/index.js","../node_modules/date-fns/esm/subMinutes/index.js","../node_modules/date-fns/esm/subQuarters/index.js","../node_modules/date-fns/esm/subSeconds/index.js","../node_modules/date-fns/esm/subWeeks/index.js","../node_modules/date-fns/esm/subYears/index.js","../node_modules/date-fns/esm/constants/index.js","../node_modules/date-fns/esm/_lib/setUTCDay/index.js","../node_modules/date-fns/esm/parse/_lib/parsers/index.js","../node_modules/date-fns/esm/_lib/setUTCWeek/index.js","../node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/setUTCISODay/index.js","../node_modules/date-fns/esm/parse/index.js","../node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","../node_modules/date-fns/esm/_lib/getUTCWeek/index.js","../node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","../node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","../node_modules/lodash/startCase.js","../node_modules/lodash/_createCompounder.js","../node_modules/lodash/words.js","../node_modules/lodash/_asciiWords.js","../node_modules/lodash/_hasUnicodeWord.js","../node_modules/lodash/_unicodeWords.js","../node_modules/lodash/upperFirst.js","../node_modules/lodash/_createCaseFirst.js","../node_modules/lodash/_castSlice.js","../node_modules/lodash/_stringToArray.js","../node_modules/lodash/_asciiToArray.js","../node_modules/lodash/_unicodeToArray.js","../node_modules/react-fast-compare/index.js","../../../src/v2/index.ts","../../../../src/v2/convertTokens/index.ts","../../../../src/v2/legacyParseMap/index.ts","../node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/semantic-ui-react/dist/es/collections/Menu/MenuHeader.js","../node_modules/semantic-ui-react/dist/es/collections/Menu/MenuItem.js","../node_modules/semantic-ui-react/dist/es/collections/Menu/MenuMenu.js","../node_modules/semantic-ui-react/dist/es/collections/Menu/Menu.js","../../src/index.ts","../node_modules/dayzed/dist/dayzed.esm.js","../../src/utils.ts","../../src/pickers/utils.ts","../../src/pickers/base.tsx","../../src/pickers/basic.tsx","../../src/pickers/range.tsx","../../src/components/button.tsx","../../node_modules/style-inject/dist/style-inject.es.js","../../src/components/cell/cell.tsx","../../src/components/today-button.tsx","../../src/components/calendar/calendar.tsx","../../src/components/input.tsx","../../src/index.tsx","../node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentGroup.js","../node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentInline.js","../node_modules/semantic-ui-react/dist/es/elements/Segment/Segment.js","../node_modules/semantic-ui-react/dist/es/elements/List/ListDescription.js","../node_modules/semantic-ui-react/dist/es/elements/List/ListHeader.js","../node_modules/semantic-ui-react/dist/es/elements/List/ListContent.js","../node_modules/semantic-ui-react/dist/es/elements/List/ListIcon.js","../node_modules/semantic-ui-react/dist/es/elements/List/ListItem.js","../node_modules/semantic-ui-react/dist/es/elements/List/ListList.js","../node_modules/semantic-ui-react/dist/es/elements/List/List.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardDescription.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardHeader.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardMeta.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardContent.js","../node_modules/semantic-ui-react/dist/es/views/Card/CardGroup.js","../node_modules/semantic-ui-react/dist/es/views/Card/Card.js","../node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","../node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","../node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js","../node_modules/semantic-ui-react/dist/es/modules/Tab/TabPane.js","../node_modules/semantic-ui-react/dist/es/modules/Tab/Tab.js"],"names":["requiredArgs","required","args","length","TypeError","toDate","argument","arguments","argStr","Object","prototype","toString","call","Date","getTime","console","warn","Error","stack","NaN","toInteger","dirtyNumber","number","Number","isNaN","Math","ceil","floor","isValid","dirtyDate","date","getDateMillisecondsPart","getTimezoneOffsetInMilliseconds","baseTimezoneOffset","getTimezoneOffset","setSeconds","compareAsc","dirtyDateLeft","dirtyDateRight","dateLeft","dateRight","diff","isSameDay","dateLeftStartOfDay","startOfDay","dateRightStartOfDay","addMilliseconds","dirtyAmount","timestamp","amount","setHours","subMilliseconds","addLeadingZeros","targetLength","sign","output","abs","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","dirtyOptions","options","width","String","defaultWidth","formats","formatLong","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","dirtyIndex","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","buildMatchFn","dirtyString","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","value","matchedString","parsePatterns","defaultParseWidth","array","predicate","key","findIndex","pattern","test","object","hasOwnProperty","findKey","valueCallback","rest","slice","locale","code","formatDistance","token","count","result","replace","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","_dirtyOptions","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","index","weekStartsOn","firstWeekContainsDate","module","exports","hookCallback","some","hooks","apply","isArray","input","Array","isObject","hasOwnProp","a","b","isObjectEmpty","obj","getOwnPropertyNames","k","isUndefined","isNumber","isDate","map","arr","fn","i","res","push","extend","valueOf","createUTC","format","strict","createLocalOrUTC","utc","getParsingFlags","m","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidEra","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","invalidWeekday","_strict","undefined","bigHour","isFrozen","createInvalid","fun","t","this","len","momentProperties","updateInProgress","copyConfig","to","from","prop","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","Moment","config","updateOffset","isMoment","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","arg","join","keys","deprecations","deprecateSimple","name","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","set","zeroFill","forceSign","absNumber","zerosToFill","pow","max","substr","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","padded","ordinal","callback","func","localeData","formatMoment","expandFormat","mom","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","aliases","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","isLeapYear","year","absFloor","toInt","argumentForCoercion","coercedNumber","isFinite","makeGetSet","keepTime","set$1","get","daysInMonth","regexes","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p1","p2","p3","p4","s","indexOf","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","x","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","defaultLocaleMonths","split","defaultLocaleMonthsShort","MONTHS_IN_FORMAT","defaultMonthsShortRegex","defaultMonthsRegex","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","setMonth","dayOfMonth","min","getSetMonth","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","sort","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","daysInYear","y","parseTwoDigitYear","getSetYear","createDate","d","h","M","ms","getFullYear","setFullYear","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","dayOfYear","weekOfYear","resWeek","weekOffset","weeksInYear","weekOffsetNext","shiftWeekdays","ws","n","concat","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","lastDay","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","w","ww","MM","yy","meridiemParse","locales","localeFamilies","commonPrefix","arr1","arr2","minl","normalizeLocale","loadLocale","oldLocale","_abbr","aliasedRequire","getSetGlobalLocale","e","data","getLocale","defineLocale","abbr","_config","parentLocale","forEach","names","j","next","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromISO","l","allowTime","dateFormat","timeFormat","tzFormat","exec","configFromStringAndFormat","untruncateYear","yearStr","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","getDay","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","setUTCMinutes","getUTCMinutes","defaults","c","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","now","_useUTC","getUTCMonth","getUTCDate","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","curWeek","GG","W","E","createLocal","_week","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","hour","isPm","meridiemHour","meridiemFixWrap","erasConvertYear","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","validFormatFound","bestFormatIsValid","score","configFromStringAndArray","createFromInputFallback","configFromString","dayOrDate","minute","second","millisecond","configFromObject","configFromInput","isUTC","add","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","duration","years","quarters","weeks","isoWeek","days","milliseconds","unitHasDecimal","parseFloat","isDurationValid","_milliseconds","_days","_months","_data","_bubble","isDuration","absRound","round","offset","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","matches","cloneWithOffset","model","clone","setTime","local","getDateOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","base","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","tmp","addSubtract","isAdding","invalid","subtract","isString","isMomentInput","arrayTest","dataTypeTest","filter","item","isNumberOrStringArray","property","objectTest","propertyTest","properties","isMomentInputObject","isCalendarSpec","monthDiff","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","matchEraAbbr","erasAbbrRegex","computeErasParse","abbrPieces","namePieces","narrowPieces","eras","_erasRegex","_erasNameRegex","_erasAbbrRegex","_erasNarrowRegex","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","setWeekAll","dayOfYearData","erasNameRegex","erasNarrowRegex","erasParse","_eraYearOrdinalRegex","eraYearOrdinalParse","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetMillisecond","getSetSecond","parseMs","proto","preParsePostFormat","sod","startOf","calendarFormat","asFloat","that","zoneDelta","endOf","startOfDate","isoWeekday","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toISOString","keepOffset","inspect","prefix","suffix","zone","isLocal","Symbol","for","toJSON","unix","creationData","eraName","since","until","eraNarrow","eraAbbr","eraYear","dir","isoWeeks","weekInfo","weeksInWeekYear","isoWeeksInYear","isoWeeksInISOWeekYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","array1","array2","dontConvert","lengthDiff","diffs","compareArrays","proto$1","get$1","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","_calendar","_longDateFormat","formatUpper","toUpperCase","tok","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","source","_eras","isFormat","_monthsShort","_monthsParseExact","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","_weekdaysParseExact","_fullWeekdaysParse","charAt","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","as","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","substituteTimeAgo","abs$1","toISOString$1","totalSign","ymSign","daysSign","hmsSign","total","toFixed","proto$2","monthsFromDays","argWithSuffix","argThresholds","withSuffix","th","assign","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","DATE","TIME","TIME_SECONDS","TIME_MS","WEEK","MONTH","factory","startOfUTCWeek","localeWeekStartsOn","defaultWeekStartsOn","RangeError","setUTCDate","setUTCHours","startOfUTCISOWeek","dayPeriodEnum","formatTimezoneShort","dirtyDelimiter","absOffset","delimiter","formatTimezoneWithOptionalMinutes","formatTimezone","formatters","G","signedYear","lightFormatters","Y","signedWeekYear","getUTCWeekYear","twoDigitYear","R","getUTCISOWeekYear","Q","q","getUTCWeek","I","getUTCISOWeek","D","setUTCMonth","startOfYearTimestamp","difference","getUTCDayOfYear","dayOfWeek","localDayOfWeek","isoDayOfWeek","dayPeriodEnumValue","getUTCHours","B","H","K","getUTCSeconds","S","X","_localize","timezoneOffset","_originalDate","O","z","originalDate","T","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","formatStr","defaultLocale","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","utcDate","formatterOptions","substring","firstCharacter","longFormatter","longFormatters","cleanEscapedString","formatter","useAdditionalWeekYearTokens","isProtectedWeekYearToken","throwProtectedError","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","firstWeekOfNextYear","startOfNextYear","firstWeekOfThisYear","startOfThisYear","dirtyDateToCompare","dateToCompare","dateLongFormatter","timeLongFormatter","p","P","dateTimeFormat","datePattern","timePattern","numberOfDigits","getUTCMilliseconds","fractionalSeconds","fourthOfJanuaryOfNextYear","fourthOfJanuaryOfThisYear","protectedDayOfYearTokens","protectedWeekYearTokens","target","dirtyObject","addDays","setDate","getDaysInMonth","monthIndex","lastDayOfMonth","addMonths","desiredMonth","dateWithDesiredMonth","dateWithMonths","dateWithDays","minutesToAdd","secondsToAdd","msToAdd","finalDate","isWeekend","addBusinessDays","getHours","fullWeeks","restDays","addHours","startOfWeek","startOfISOWeek","getISOWeekYear","startOfISOWeekYear","fourthOfJanuary","differenceInCalendarDays","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","setISOWeekYear","dirtyISOWeekYear","addISOWeekYears","addMinutes","addQuarters","addSeconds","addWeeks","addYears","areIntervalsOverlapping","dirtyIntervalLeft","dirtyIntervalRight","intervalLeft","intervalRight","leftStartTime","start","leftEndTime","end","rightStartTime","rightEndTime","inclusive","closestIndexTo","dirtyDatesArray","minDistance","timeToCompare","distance","closestTo","compareDesc","differenceInBusinessDays","calendarDifference","differenceInCalendarISOWeekYears","differenceInCalendarISOWeeks","startOfISOWeekLeft","startOfISOWeekRight","differenceInCalendarMonths","yearDiff","getQuarter","differenceInCalendarQuarters","quarterDiff","differenceInCalendarWeeks","startOfWeekLeft","startOfWeekRight","differenceInCalendarYears","compareLocalAsc","getMinutes","getSeconds","getMilliseconds","differenceInDays","isLastDayNotFull","differenceInMilliseconds","differenceInHours","subISOWeekYears","differenceInISOWeekYears","isLastISOWeekYearNotFull","differenceInMinutes","differenceInMonths","isLastMonthNotFull","differenceInQuarters","differenceInSeconds","differenceInWeeks","differenceInYears","isLastYearNotFull","eachDayOfInterval","dirtyInterval","interval","startDate","endDate","endTime","step","eachMonthOfInterval","eachWeekOfInterval","startDateWeek","endDateWeek","currentWeek","isSunday","eachWeekendOfInterval","dateInterval","weekends","startOfMonth","endOfMonth","eachWeekendOfMonth","startOfYear","cleanDate","endOfYear","eachWeekendOfYear","eachYearOfInterval","endOfDay","endOfDecade","decade","endOfHour","setMinutes","endOfWeek","endOfISOWeek","endOfISOWeekYear","setMilliseconds","endOfMinute","endOfQuarter","currentMonth","endOfSecond","endOfToday","endOfTomorrow","endOfYesterday","cloneObject","dirtyBaseDate","localizeOptions","Boolean","offsetInSeconds","includeSeconds","nearestMonth","monthsSinceStartOfYear","formatDistanceStrict","roundingMethodFn","roundingMethod","formatDistanceToNow","distanceInWords","formatDistanceToNowStrict","distanceInStrictWords","formatISO","representation","tzOffset","dateDelimiter","timeDelimiter","absoluteOffset","hourOffset","minuteOffset","formatISO9075","formatISODuration","_duration$years","_duration$months","_duration$days","_duration$hours","_duration$minutes","_duration$seconds","formatRFC3339","fractionDigits","fractionalSecond","formatRFC7231","dayName","baseDate","utcBaseDate","fromUnixTime","dirtyUnixTime","unixTime","getDayOfYear","getDaysInYear","getDecade","getISODay","getISOWeek","getISOWeeksInYear","thisYear","nextYear","getOverlappingDaysInIntervals","isOverlapping","overlapStartDate","overlapEndDate","differenceInMs","getUnixTime","getWeekYear","startOfWeekYear","firstWeek","getWeek","getWeekOfMonth","currentDayOfMonth","startWeekDay","lastDayOfFirstWeek","weekNumber","remainingDaysAfterFirstWeek","getWeeksInMonth","getYear","subDays","subMonths","sub","dateWithoutMonths","dateWithoutDays","minutestoSub","secondstoSub","mstoSub","intervalToDuration","_ref","remainingMonths","remainingDays","remainingHours","remainingMinutes","remainingSeconds","isEqual","dirtyLeftDate","dirtyRightDate","isExists","isFirstDayOfMonth","isFriday","isLastDayOfMonth","isMonday","isPast","startOfHour","isSameHour","dateLeftStartOfHour","dateRightStartOfHour","isSameWeek","dateLeftStartOfWeek","dateRightStartOfWeek","isSameISOWeek","isSameISOWeekYear","dateLeftStartOfYear","dateRightStartOfYear","startOfMinute","isSameMinute","dateLeftStartOfMinute","dateRightStartOfMinute","isSameMonth","startOfQuarter","isSameQuarter","dateLeftStartOfQuarter","dateRightStartOfQuarter","startOfSecond","isSameSecond","dateLeftStartOfSecond","dateRightStartOfSecond","isSameYear","isSaturday","isThisHour","isThisISOWeek","isThisMinute","isThisMonth","isThisQuarter","isThisSecond","isThisWeek","isThisYear","isThursday","isToday","isTomorrow","isTuesday","isWednesday","isWithinInterval","startTime","isYesterday","lastDayOfDecade","lastDayOfWeek","lastDayOfISOWeek","lastDayOfISOWeekYear","lastDayOfQuarter","lastDayOfYear","lightFormat","datesArray","patterns","dateTimeDelimiter","timeZoneDelimiter","timezone","dateRegex","timeRegex","timezoneRegex","parseISO","additionalDigits","dateStrings","splitDateString","parseYearResult","parseYear","parseDate","restDateString","parseTime","parseTimezone","dateString","timeString","captures","century","isWeekDate","parseDateUnit","_year","validateWeekDate","fourthOfJanuaryDay","dayOfISOWeekYear","daysInMonths","isLeapYearIndex","validateDate","validateDayOfYearDate","parseTimeUnit","validateTime","timezoneString","_hours","validateTimezone","parseJSON","roundToNearestMinutes","nearestTo","roundedMinutes","remainderMinutes","addedMinutes","dirtyMonth","dirtyDayOfMonth","setDay","dirtyDay","currentDay","remainder","dayIndex","delta","setDayOfYear","dirtyDayOfYear","dirtyHours","setISODay","setISOWeek","dirtyISOWeek","dirtyMilliseconds","dirtyMinutes","setQuarter","dirtyQuarter","oldQuarter","dirtySeconds","setWeek","dirtyWeek","setWeekYear","dirtyWeekYear","setYear","dirtyYear","startOfDecade","startOfToday","startOfTomorrow","startOfYesterday","subBusinessDays","subHours","subMinutes","subQuarters","subSeconds","subWeeks","subYears","maxTime","minTime","setUTCDay","numericPatterns","timezonePatterns","parseNumericPattern","parseTimezonePattern","parseAnyDigitsSigned","parseNDigits","parseNDigitsSigned","dayPeriodEnumToHours","enumValue","normalizeTwoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","parsers","parse","incompatibleTokens","isTwoDigitYear","validate","normalizedTwoDigitYear","_match","_flags","firstWeekOfYear","setUTCWeek","setUTCISOWeek","wholeWeekDays","setUTCISODay","setUTCSeconds","setUTCMilliseconds","timestampIsSet","_token","notWhitespaceRegExp","dirtyDateString","dirtyFormatString","dirtyReferenceDate","formatString","subFnOptions","setters","dateToSystemTimezone","usedTokens","parser","incompatibleToken","usedToken","fullToken","uniquePrioritySetters","reverse","setterArray","convertedDate","startOfUTCWeekYear","startOfUTCISOWeekYear","createCompounder","require","upperFirst","startCase","word","arrayReduce","deburr","words","reApos","asciiWords","hasUnicodeWord","unicodeWords","guard","reAsciiWord","reHasUnicodeWord","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsDingbat","rsLower","rsMisc","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","reOptMod","rsModifier","rsSeq","rsEmoji","reUnicodeWord","createCaseFirst","castSlice","hasUnicode","stringToArray","methodName","strSymbols","chr","trailing","baseSlice","asciiToArray","unicodeToArray","rsAstral","rsCombo","rsFitz","rsNonAstral","rsSymbol","reUnicode","hasElementType","Element","hasMap","Map","hasSet","Set","hasArrayBuffer","ArrayBuffer","isView","equal","constructor","it","size","entries","done","has","$$typeof","error","message","DDD","objectWithoutPropertiesLoose","excluded","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","sourceKeys","MenuHeader","props","children","className","content","classes","cx","getUnhandledProps","ElementType","getElementType","React","createElement","_extends","childrenUtils","isNil","handledProps","propTypes","MenuItem","_Component","_getPrototypeOf2","_this","_classCallCheck","_len","_key","_possibleConstructorReturn","_getPrototypeOf","_defineProperty","_assertThisInitialized","disabled","_invoke","_inherits","_createClass","_this$props","active","color","fitted","header","icon","link","onClick","position","useKeyOnly","useKeyOrValueAndKey","handleClick","Icon","create","autoGenerateKey","_startCase","Component","MenuMenu","createShorthandFactory","Menu","predefinedProps","itemProps","trySetState","activeIndex","_this2","items","state","_map","defaultProps","overrideProps","handleItemOverrides","attached","borderless","compact","fixed","floated","fluid","inverted","pagination","pointing","secondary","stackable","tabular","text","vertical","widths","useValueAndKey","useWidthProp","renderItems","shouldAppendLastSeparator","current","lastSeparator","endsWith","getFormattedString","cleanValue","blockSizes","separators","firstSeparator","startsWith","res_1","reduce","acc","cur","curBlockSize","beforeSlice","afterSlice","curSeparator","curSlice","prevSlice","prevSeparator","curRegex","curriedValue","_objectWithoutPropertiesLoose","composeEventHandlers","fns","event","_len2","_key2","defaultPrevented","requiredProp","fnName","propName","noop","isBackDisabled","_ref3","calendars","minDate","firstDayOfMonth","isForwardDisabled","_ref4","maxDate","getCalendars","_ref5","selected","monthsToDisplay","showOutsideDays","minDateNormalized","maxDateNormalized","getStartDate","calendarDates","getMonths","selectedDates","_ref6","daysMonthYear","normalizedMonthYear","getNumDaysMonthYear","dateObj","isSelected","selectable","isSelectable","prevMonth","nextMonth","frontWeekBuffer","_ref7","firstDay","lastDayOfPrevMonth","prevDate","prevDateMonth","prevDateYear","counter","unshift","fillFrontWeek","backWeekBuffer","_ref8","firstDayOfNextMonth","nextDateMonth","nextDateYear","fillBackWeek","weeksLength","getWeeks","selectedDate","isOffsetControlled","propOffset","getDateProps","onDateSelected","_temp","_ref$dateObj","toDateString","role","getBackProps","_ref2","_temp2","offsetMonth","handleOffsetChanged","_ref3$offset","_ref3$calendars","diffInMonths","subtractMonth","getForwardProps","_temp3","_ref5$offset","_ref5$calendars","addMonth","useDayzed","_ref6$date","_ref6$monthsToDisplay","_ref6$firstDayOfWeek","_ref6$showOutsideDays","_ref6$onOffsetChanged","onOffsetChanged","_useState","useState","stateOffset","setStateOffset","newOffset","bind","Dayzed","dayzedCalendar","render","PropTypes","instanceOf","bool","isRequired","oneOfType","arrayOf","getToday","formatDate","convertTokens","formatSelectedDate","parseFormatString","parseOnBlur","typedValue","parseRangeOnBlur","parsedFormatString","onlyNumbers","getArrowKeyHandlers","keyCode","37","39","38","40","down","isInRange","range","BaseDatePicker","rootNode","handleArrowKeys","left","right","up","setRootNode","getRootProps","refKey","_handleOffsetChanged","getKeyOffset","document","buttons","querySelectorAll","newNodeKey","el","componentDidUpdate","prevProps","DatePicker","_handleOnDateSelected","onChange","newDate","RangeDatePicker","hoveredDate","setHoveredDate","onMouseLeave","newDates","getEnhancedDateProps","onMouseEnter","onFocus","restProps","inRange","dateBounds","hovered","getEnhancedRootProps","onHoverFocusDate","renderProps","CustomButton","otherProps","basic","styleInject","css","ref","insertAt","head","getElementsByTagName","style","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","CalendarCell","cn","marginTop","TodayButton","styles","leftBtn","textAlign","rightBtn","pointings","Calendar","filterDate","previousMonth","previousYear","showToday","todayButton","calendarIdx","title","marginRight","shortDate","getShortDate","CustomInput","isClearIconVisible","label","onClear","Form","display","semanticInputProps","SemanticDatepicker","inputRef","resetState","keepOpenOnClear","newState","isVisible","selectedDateFormatted","clearInput","mousedownCb","mousedownEvent","keydownCb","keydownEvent","close","window","focusOnInput","showCalendar","handleRangeInput","fromBlur","keepOpenOnSelect","handleBasicInput","clearOnSameDateClick","handleBlur","onBlur","parsedValue","handleChange","allowOnlyNumbers","formatStringByPattern","handleKeyDown","evt","clearable","readOnly","datePickerOnly","inputProps","onKeyDown","dayzedProps","isRangeInput","initialSelectedDate","keysToOmit","newObj","omit","keysToPick","pick","placeholder","localeJson","id","SegmentGroup","horizontal","piled","raised","stacked","SegmentInline","Segment","circular","clearing","loading","tertiary","useTextAlignProp","Group","Inline","ListDescription","ListHeader","ListContent","description","verticalAlign","useVerticalAlignProp","ListIcon","ListItem","image","valueProp","iconElement","imageElement","Image","isValidElement","_isPlainObject","headerElement","descriptionElement","ListList","List","animated","bulleted","celled","divided","ordered","relaxed","selection","CardDescription","CardHeader","CardMeta","CardContent","extra","meta","createShorthand","CardGroup","centered","doubling","itemsPerRow","itemsJSX","Card","href","ui","wrapped","GridColumn","computer","largeScreen","mobile","only","stretched","tablet","widescreen","useMultipleProp","GridRow","columns","reversed","Grid","container","Column","Row","TabPane","calculatedDefaultProps","Tab","_objectSpread","panes","renderActiveOnly","_get","pane","_this$props2","menu","menuPosition","onItemClick","handleItemClick","_this$props3","grid","paneWidth","tabWidth","gridProps","_objectWithoutProperties","renderMenu","renderVertical"],"mappings":"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","file":"static/js/6.b439396f.chunk.js","sourcesContent":["export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return !isNaN(date);\n}","var MILLISECONDS_IN_MINUTE = 60000;\n\nfunction getDateMillisecondsPart(date) {\n  return date.getTime() % MILLISECONDS_IN_MINUTE;\n}\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\n\nexport default function getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = Math.ceil(date.getTimezoneOffset());\n  date.setSeconds(0, 0);\n  var hasNegativeUTCOffset = baseTimezoneOffset > 0;\n  var millisecondsPartOfTimezoneOffset = hasNegativeUTCOffset ? (MILLISECONDS_IN_MINUTE + getDateMillisecondsPart(date)) % MILLISECONDS_IN_MINUTE : getDateMillisecondsPart(date);\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * var result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import startOfDay from '../startOfDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day?\n *\n * @description\n * Are the given dates in the same day?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n */\n\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","export default function buildFormatLongFn(args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from '../../../_lib/buildFormatLongFn/index.js';\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}","export default function buildMatchFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var value;\n\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = findIndex(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n}","import buildMatchPatternFn from '../../../_lib/buildMatchPatternFn/index.js';\nimport buildMatchFn from '../../../_lib/buildMatchFn/index.js';\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","export default function buildMatchPatternFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var matchResult = string.match(args.matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n\n    if (!parseResult) {\n      return null;\n    }\n\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}","import formatDistance from './_lib/formatDistance/index.js';\nimport formatLong from './_lib/formatLong/index.js';\nimport formatRelative from './_lib/formatRelative/index.js';\nimport localize from './_lib/localize/index.js';\nimport match from './_lib/match/index.js';\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js';\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","//! moment.js\n//! version : 2.25.3\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks() {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback(callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return (\n            input instanceof Array ||\n            Object.prototype.toString.call(input) === '[object Array]'\n        );\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return (\n            input != null &&\n            Object.prototype.toString.call(input) === '[object Object]'\n        );\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return Object.getOwnPropertyNames(obj).length === 0;\n        } else {\n            var k;\n            for (k in obj) {\n                if (hasOwnProp(obj, k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return (\n            typeof input === 'number' ||\n            Object.prototype.toString.call(input) === '[object Number]'\n        );\n    }\n\n    function isDate(input) {\n        return (\n            input instanceof Date ||\n            Object.prototype.toString.call(input) === '[object Date]'\n        );\n    }\n\n    function map(arr, fn) {\n        var res = [],\n            i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty: false,\n            unusedTokens: [],\n            unusedInput: [],\n            overflow: -2,\n            charsLeftOver: 0,\n            nullInput: false,\n            invalidEra: null,\n            invalidMonth: null,\n            invalidFormat: false,\n            userInvalidated: false,\n            iso: false,\n            parsedDateParts: [],\n            era: null,\n            meridiem: null,\n            rfc2822: false,\n            weekdayMismatch: false,\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this),\n                len = t.length >>> 0,\n                i;\n\n            for (i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m),\n                parsedParts = some.call(flags.parsedDateParts, function (i) {\n                    return i != null;\n                }),\n                isNowValid =\n                    !isNaN(m._d.getTime()) &&\n                    flags.overflow < 0 &&\n                    !flags.empty &&\n                    !flags.invalidEra &&\n                    !flags.invalidMonth &&\n                    !flags.invalidWeekday &&\n                    !flags.weekdayMismatch &&\n                    !flags.nullInput &&\n                    !flags.invalidFormat &&\n                    !flags.userInvalidated &&\n                    (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid =\n                    isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            } else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid(flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        } else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = (hooks.momentProperties = []),\n        updateInProgress = false;\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment(obj) {\n        return (\n            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)\n        );\n    }\n\n    function warn(msg) {\n        if (\n            hooks.suppressDeprecationWarnings === false &&\n            typeof console !== 'undefined' &&\n            console.warn\n        ) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [],\n                    arg,\n                    i,\n                    key;\n                for (i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (key in arguments[0]) {\n                            if (hasOwnProp(arguments[0], key)) {\n                                arg += key + ': ' + arguments[0][key] + ', ';\n                            }\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(\n                    msg +\n                        '\\nArguments: ' +\n                        Array.prototype.slice.call(args).join('') +\n                        '\\n' +\n                        new Error().stack\n                );\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return (\n            (typeof Function !== 'undefined' && input instanceof Function) ||\n            Object.prototype.toString.call(input) === '[object Function]'\n        );\n    }\n\n    function set(config) {\n        var prop, i;\n        for (i in config) {\n            if (hasOwnProp(config, i)) {\n                prop = config[i];\n                if (isFunction(prop)) {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' +\n                /\\d{1,2}/.source\n        );\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig),\n            prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (\n                hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])\n            ) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i,\n                res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L',\n    };\n\n    function calendar(key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (\n            (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +\n            absNumber\n        );\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n        formatFunctions = {},\n        formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken(token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(\n                    func.apply(this, arguments),\n                    token\n                );\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens),\n            i,\n            length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '',\n                i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i])\n                    ? array[i].call(mom, format)\n                    : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] =\n            formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(\n                localFormattingTokens,\n                replaceLongDateFormatTokens\n            );\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var defaultLongDateFormat = {\n        LTS: 'h:mm:ss A',\n        LT: 'h:mm A',\n        L: 'MM/DD/YYYY',\n        LL: 'MMMM D, YYYY',\n        LLL: 'MMMM D, YYYY h:mm A',\n        LLLL: 'dddd, MMMM D, YYYY h:mm A',\n    };\n\n    function longDateFormat(key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper\n            .match(formattingTokens)\n            .map(function (tok) {\n                if (\n                    tok === 'MMMM' ||\n                    tok === 'MM' ||\n                    tok === 'DD' ||\n                    tok === 'dddd'\n                ) {\n                    return tok.slice(1);\n                }\n                return tok;\n            })\n            .join('');\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate() {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d',\n        defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal(number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        ss: '%d seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        w: 'a week',\n        ww: '%d weeks',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years',\n    };\n\n    function relativeTime(number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return isFunction(output)\n            ? output(number, withoutSuffix, string, isFuture)\n            : output.replace(/%d/i, number);\n    }\n\n    function pastFuture(diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias(unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string'\n            ? aliases[units] || aliases[units.toLowerCase()]\n            : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [],\n            u;\n        for (u in unitsObj) {\n            if (hasOwnProp(unitsObj, u)) {\n                units.push({ unit: u, priority: priorities[u] });\n            }\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    function absFloor(number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    function makeGetSet(unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get(mom, unit) {\n        return mom.isValid()\n            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()\n            : NaN;\n    }\n\n    function set$1(mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (\n                unit === 'FullYear' &&\n                isLeapYear(mom.year()) &&\n                mom.month() === 1 &&\n                mom.date() === 29\n            ) {\n                value = toInt(value);\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](\n                    value,\n                    mom.month(),\n                    daysInMonth(value, mom.month())\n                );\n            } else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet(units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n    function stringSet(units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units),\n                i;\n            for (i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    var match1 = /\\d/, //       0 - 9\n        match2 = /\\d\\d/, //      00 - 99\n        match3 = /\\d{3}/, //     000 - 999\n        match4 = /\\d{4}/, //    0000 - 9999\n        match6 = /[+-]?\\d{6}/, // -999999 - 999999\n        match1to2 = /\\d\\d?/, //       0 - 99\n        match3to4 = /\\d\\d\\d\\d?/, //     999 - 9999\n        match5to6 = /\\d\\d\\d\\d\\d\\d?/, //   99999 - 999999\n        match1to3 = /\\d{1,3}/, //       0 - 999\n        match1to4 = /\\d{1,4}/, //       0 - 9999\n        match1to6 = /[+-]?\\d{1,6}/, // -999999 - 999999\n        matchUnsigned = /\\d+/, //       0 - inf\n        matchSigned = /[+-]?\\d+/, //    -inf - inf\n        matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n        matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n        matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n        // any word (or two) characters or numbers including two/three word month in arabic.\n        // includes scottish gaelic two word and hyphenated months\n        matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n        regexes;\n\n    regexes = {};\n\n    function addRegexToken(token, regex, strictRegex) {\n        regexes[token] = isFunction(regex)\n            ? regex\n            : function (isStrict, localeData) {\n                  return isStrict && strictRegex ? strictRegex : regex;\n              };\n    }\n\n    function getParseRegexForToken(token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(\n            s\n                .replace('\\\\', '')\n                .replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (\n                    matched,\n                    p1,\n                    p2,\n                    p3,\n                    p4\n                ) {\n                    return p1 || p2 || p3 || p4;\n                })\n        );\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken(token, callback) {\n        var i,\n            func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken(token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n        WEEK = 7,\n        WEEKDAY = 8;\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1\n            ? isLeapYear(year)\n                ? 29\n                : 28\n            : 31 - ((modMonth % 7) % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M', match1to2);\n    addRegexToken('MM', match1to2, match2);\n    addRegexToken('MMM', function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(\n            '_'\n        ),\n        MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n        defaultMonthsShortRegex = matchWord,\n        defaultMonthsRegex = matchWord;\n\n    function localeMonths(m, format) {\n        if (!m) {\n            return isArray(this._months)\n                ? this._months\n                : this._months['standalone'];\n        }\n        return isArray(this._months)\n            ? this._months[m.month()]\n            : this._months[\n                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n                      ? 'format'\n                      : 'standalone'\n              ][m.month()];\n    }\n\n    function localeMonthsShort(m, format) {\n        if (!m) {\n            return isArray(this._monthsShort)\n                ? this._monthsShort\n                : this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort)\n            ? this._monthsShort[m.month()]\n            : this._monthsShort[\n                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'\n              ][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse(monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp(\n                    '^' + this.months(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n                this._shortMonthsParse[i] = new RegExp(\n                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex =\n                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'MMMM' &&\n                this._longMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'MMM' &&\n                this._shortMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth(mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth(value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth() {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    function monthsShortRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict\n                ? this._monthsShortStrictRegex\n                : this._monthsShortRegex;\n        }\n    }\n\n    function monthsRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict\n                ? this._monthsStrictRegex\n                : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._monthsShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? zeroFill(y, 4) : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY', 4], 0, 'year');\n    addFormatToken(0, ['YYYYY', 5], 0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y', matchSigned);\n    addRegexToken('YY', match1to2, match2);\n    addRegexToken('YYYY', match1to4, match4);\n    addRegexToken('YYYYY', match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] =\n            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear() {\n        return isLeapYear(this.year());\n    }\n\n    function createDate(y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate(y) {\n        var date, args;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear,\n            resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear,\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek,\n            resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear,\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w', match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W', match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (\n        input,\n        week,\n        config,\n        token\n    ) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek(mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow: 0, // Sunday is the first day of the week.\n        doy: 6, // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek() {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear() {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek(input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek(input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d', match1to2);\n    addRegexToken('e', match1to2);\n    addRegexToken('E', match1to2);\n    addRegexToken('dd', function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd', function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd', function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays(ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        defaultWeekdaysRegex = matchWord,\n        defaultWeekdaysShortRegex = matchWord,\n        defaultWeekdaysMinRegex = matchWord;\n\n    function localeWeekdays(m, format) {\n        var weekdays = isArray(this._weekdays)\n            ? this._weekdays\n            : this._weekdays[\n                  m && m !== true && this._weekdays.isFormat.test(format)\n                      ? 'format'\n                      : 'standalone'\n              ];\n        return m === true\n            ? shiftWeekdays(weekdays, this._week.dow)\n            : m\n            ? weekdays[m.day()]\n            : weekdays;\n    }\n\n    function localeWeekdaysShort(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : m\n            ? this._weekdaysShort[m.day()]\n            : this._weekdaysShort;\n    }\n\n    function localeWeekdaysMin(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : m\n            ? this._weekdaysMin[m.day()]\n            : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse(weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._shortWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._minWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n            }\n            if (!this._weekdaysParse[i]) {\n                regex =\n                    '^' +\n                    this.weekdays(mom, '') +\n                    '|^' +\n                    this.weekdaysShort(mom, '') +\n                    '|^' +\n                    this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'dddd' &&\n                this._fullWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'ddd' &&\n                this._shortWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'dd' &&\n                this._minWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    function weekdaysRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict\n                ? this._weekdaysStrictRegex\n                : this._weekdaysRegex;\n        }\n    }\n\n    function weekdaysShortRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict\n                ? this._weekdaysShortStrictRegex\n                : this._weekdaysShortRegex;\n        }\n    }\n\n    function weekdaysMinRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict\n                ? this._weekdaysMinStrictRegex\n                : this._weekdaysMinRegex;\n        }\n    }\n\n    function computeWeekdaysParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [],\n            shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom,\n            minp,\n            shortp,\n            longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = regexEscape(this.weekdaysMin(mom, ''));\n            shortp = regexEscape(this.weekdaysShort(mom, ''));\n            longp = regexEscape(this.weekdays(mom, ''));\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysMinStrictRegex = new RegExp(\n            '^(' + minPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return (\n            '' +\n            hFormat.apply(this) +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return (\n            '' +\n            this.hours() +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    function meridiem(token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(\n                this.hours(),\n                this.minutes(),\n                lowercase\n            );\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem(isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a', matchMeridiem);\n    addRegexToken('A', matchMeridiem);\n    addRegexToken('H', match1to2);\n    addRegexToken('h', match1to2);\n    addRegexToken('k', match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM(input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return (input + '').toLowerCase().charAt(0) === 'p';\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n        // Setting the hour should keep the time, because the user explicitly\n        // specified which hour they want. So trying to maintain the same hour (in\n        // a new timezone) makes sense. Adding/subtracting hours does not follow\n        // this rule.\n        getSetHour = makeGetSet('Hours', true);\n\n    function localeMeridiem(hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse,\n    };\n\n    // internal storage for locale config files\n    var locales = {},\n        localeFamilies = {},\n        globalLocale;\n\n    function commonPrefix(arr1, arr2) {\n        var i,\n            minl = Math.min(arr1.length, arr2.length);\n        for (i = 0; i < minl; i += 1) {\n            if (arr1[i] !== arr2[i]) {\n                return i;\n            }\n        }\n        return minl;\n    }\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0,\n            j,\n            next,\n            locale,\n            split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (\n                    next &&\n                    next.length >= j &&\n                    commonPrefix(split, next) >= j - 1\n                ) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null,\n            aliasedRequire;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (\n            locales[name] === undefined &&\n            typeof module !== 'undefined' &&\n            module &&\n            module.exports\n        ) {\n            try {\n                oldLocale = globalLocale._abbr;\n                aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {\n                // mark as not found to avoid repeating expensive file require call causing high CPU\n                // when trying to find en-US, en_US, en-us for every format call\n                locales[name] = null; // null means not found\n            }\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale(key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            } else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            } else {\n                if (typeof console !== 'undefined' && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn(\n                        'Locale ' + key + ' not found. Did you forget to load it?'\n                    );\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale(name, config) {\n        if (config !== null) {\n            var locale,\n                parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple(\n                    'defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'\n                );\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config,\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale,\n                tmpLocale,\n                parentConfig = baseConfig;\n\n            if (locales[name] != null && locales[name].parentLocale != null) {\n                // Update existing child locale in-place to avoid memory-leaks\n                locales[name].set(mergeConfigs(locales[name]._config, config));\n            } else {\n                // MERGE\n                tmpLocale = loadLocale(name);\n                if (tmpLocale != null) {\n                    parentConfig = tmpLocale._config;\n                }\n                config = mergeConfigs(parentConfig, config);\n                if (tmpLocale == null) {\n                    // updateLocale is called for creating a new locale\n                    // Set abbr so it will have a name (getters return\n                    // undefined otherwise).\n                    config.abbr = name;\n                }\n                locale = new Locale(config);\n                locale.parentLocale = locales[name];\n                locales[name] = locale;\n            }\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                    if (name === getSetGlobalLocale()) {\n                        getSetGlobalLocale(name);\n                    }\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale(key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow(m) {\n        var overflow,\n            a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH] < 0 || a[MONTH] > 11\n                    ? MONTH\n                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])\n                    ? DATE\n                    : a[HOUR] < 0 ||\n                      a[HOUR] > 24 ||\n                      (a[HOUR] === 24 &&\n                          (a[MINUTE] !== 0 ||\n                              a[SECOND] !== 0 ||\n                              a[MILLISECOND] !== 0))\n                    ? HOUR\n                    : a[MINUTE] < 0 || a[MINUTE] > 59\n                    ? MINUTE\n                    : a[SECOND] < 0 || a[SECOND] > 59\n                    ? SECOND\n                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999\n                    ? MILLISECOND\n                    : -1;\n\n            if (\n                getParsingFlags(m)._overflowDayOfYear &&\n                (overflow < YEAR || overflow > DATE)\n            ) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/,\n        isoDates = [\n            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n            ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n            ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n            ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n            ['YYYY-DDD', /\\d{4}-\\d{3}/],\n            ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n            ['YYYYYYMMDD', /[+-]\\d{10}/],\n            ['YYYYMMDD', /\\d{8}/],\n            ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n            ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n            ['YYYYDDD', /\\d{7}/],\n            ['YYYYMM', /\\d{6}/, false],\n            ['YYYY', /\\d{4}/, false],\n        ],\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n            ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n            ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /\\d\\d:\\d\\d/],\n            ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n            ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n            ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n            ['HHmm', /\\d\\d\\d\\d/],\n            ['HH', /\\d\\d/],\n        ],\n        aspNetJsonRegex = /^\\/?Date\\((-?\\d+)/i,\n        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n        rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,\n        obsOffsets = {\n            UT: 0,\n            GMT: 0,\n            EDT: -4 * 60,\n            EST: -5 * 60,\n            CDT: -5 * 60,\n            CST: -6 * 60,\n            MDT: -6 * 60,\n            MST: -7 * 60,\n            PDT: -7 * 60,\n            PST: -8 * 60,\n        };\n\n    // date from iso format\n    function configFromISO(config) {\n        var i,\n            l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime,\n            dateFormat,\n            timeFormat,\n            tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    function extractFromRFC2822Strings(\n        yearStr,\n        monthStr,\n        dayStr,\n        hourStr,\n        minuteStr,\n        secondStr\n    ) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10),\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s\n            .replace(/\\([^)]*\\)|[\\n\\t]/g, ' ')\n            .replace(/(\\s\\s+)/g, ' ')\n            .replace(/^\\s\\s*/, '')\n            .replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(\n                    parsedInput[0],\n                    parsedInput[1],\n                    parsedInput[2]\n                ).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10),\n                m = hm % 100,\n                h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i)),\n            parsedArray;\n        if (match) {\n            parsedArray = extractFromRFC2822Strings(\n                match[4],\n                match[3],\n                match[2],\n                match[5],\n                match[6],\n                match[7]\n            );\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        if (config._strict) {\n            config._isValid = false;\n        } else {\n            // Final attempt, use Input Fallback\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n            'discouraged and will be removed in an upcoming major release. Please refer to ' +\n            'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [\n                nowValue.getUTCFullYear(),\n                nowValue.getUTCMonth(),\n                nowValue.getUTCDate(),\n            ];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray(config) {\n        var i,\n            date,\n            input = [],\n            currentDate,\n            expectedWeekday,\n            yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (\n                config._dayOfYear > daysInYear(yearToUse) ||\n                config._dayOfYear === 0\n            ) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] =\n                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (\n            config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0\n        ) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(\n            null,\n            input\n        );\n        expectedWeekday = config._useUTC\n            ? config._d.getUTCDay()\n            : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (\n            config._w &&\n            typeof config._w.d !== 'undefined' &&\n            config._w.d !== expectedWeekday\n        ) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(\n                w.GG,\n                config._a[YEAR],\n                weekOfYear(createLocal(), 1, 4).year\n            );\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i,\n            parsedInput,\n            tokens,\n            token,\n            skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0,\n            era;\n\n        tokens =\n            expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) ||\n                [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(\n                    string.indexOf(parsedInput) + parsedInput.length\n                );\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                } else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            } else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver =\n            stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (\n            config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0\n        ) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(\n            config._locale,\n            config._a[HOUR],\n            config._meridiem\n        );\n\n        // handle era\n        era = getParsingFlags(config).era;\n        if (era !== null) {\n            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);\n        }\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n    function meridiemFixWrap(locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n            scoreToBeat,\n            i,\n            currentScore,\n            validFormatFound,\n            bestFormatIsValid = false;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            validFormatFound = false;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (isValid(tempConfig)) {\n                validFormatFound = true;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (!bestFormatIsValid) {\n                if (\n                    scoreToBeat == null ||\n                    currentScore < scoreToBeat ||\n                    validFormatFound\n                ) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                    if (validFormatFound) {\n                        bestFormatIsValid = true;\n                    }\n                }\n            } else {\n                if (currentScore < scoreToBeat) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                }\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i),\n            dayOrDate = i.day === undefined ? i.date : i.day;\n        config._a = map(\n            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],\n            function (obj) {\n                return obj && parseInt(obj, 10);\n            }\n        );\n\n        configFromArray(config);\n    }\n\n    function createFromConfig(config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig(config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({ nullInput: true });\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        } else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC(input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (format === true || format === false) {\n            strict = format;\n            format = undefined;\n        }\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if (\n            (isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)\n        ) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other < this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        ),\n        prototypeMax = deprecate(\n            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other > this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +new Date();\n    };\n\n    var ordering = [\n        'year',\n        'quarter',\n        'month',\n        'week',\n        'day',\n        'hour',\n        'minute',\n        'second',\n        'millisecond',\n    ];\n\n    function isDurationValid(m) {\n        var key,\n            unitHasDecimal = false,\n            i;\n        for (key in m) {\n            if (\n                hasOwnProp(m, key) &&\n                !(\n                    indexOf.call(ordering, key) !== -1 &&\n                    (m[key] == null || !isNaN(m[key]))\n                )\n            ) {\n                return false;\n            }\n        }\n\n        for (i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds =\n            +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days + weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months + quarters * 3 + years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration(obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if (\n                (dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))\n            ) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    // FORMATTING\n\n    function offset(token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset(),\n                sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return (\n                sign +\n                zeroFill(~~(offset / 60), 2) +\n                separator +\n                zeroFill(~~offset % 60, 2)\n            );\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z', matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher),\n            chunk,\n            parts,\n            minutes;\n\n        if (matches === null) {\n            return null;\n        }\n\n        chunk = matches[matches.length - 1] || [];\n        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff =\n                (isMoment(input) || isDate(input)\n                    ? input.valueOf()\n                    : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset(m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset());\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset(input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(\n                        this,\n                        createDuration(input - offset, 'm'),\n                        1,\n                        false\n                    );\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone(input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC(keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal(keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset() {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            } else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset(input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime() {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted() {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {},\n            other;\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted =\n                this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal() {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset() {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc() {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,\n        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n        // and further modified to allow for strings containing both week and day\n        isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration(input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms: input._milliseconds,\n                d: input._days,\n                M: input._months,\n            };\n        } else if (isNumber(input) || !isNaN(+input)) {\n            duration = {};\n            if (key) {\n                duration[key] = +input;\n            } else {\n                duration.milliseconds = +input;\n            }\n        } else if ((match = aspNetRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match\n            };\n        } else if ((match = isoRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: parseIso(match[2], sign),\n                M: parseIso(match[3], sign),\n                w: parseIso(match[4], sign),\n                d: parseIso(match[5], sign),\n                h: parseIso(match[6], sign),\n                m: parseIso(match[7], sign),\n                s: parseIso(match[8], sign),\n            };\n        } else if (duration == null) {\n            // checks for null or undefined\n            duration = {};\n        } else if (\n            typeof duration === 'object' &&\n            ('from' in duration || 'to' in duration)\n        ) {\n            diffRes = momentsDifference(\n                createLocal(duration.from),\n                createLocal(duration.to)\n            );\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        if (isDuration(input) && hasOwnProp(input, '_isValid')) {\n            ret._isValid = input._isValid;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso(inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months =\n            other.month() - base.month() + (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +base.clone().add(res.months, 'M');\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return { milliseconds: 0, months: 0 };\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(\n                    name,\n                    'moment().' +\n                        name +\n                        '(period, number) is deprecated. Please use moment().' +\n                        name +\n                        '(number, period). ' +\n                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'\n                );\n                tmp = val;\n                val = period;\n                period = tmp;\n            }\n\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add = createAdder(1, 'add'),\n        subtract = createAdder(-1, 'subtract');\n\n    function isString(input) {\n        return typeof input === 'string' || input instanceof String;\n    }\n\n    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined\n    function isMomentInput(input) {\n        return (\n            isMoment(input) ||\n            isDate(input) ||\n            isString(input) ||\n            isNumber(input) ||\n            isNumberOrStringArray(input) ||\n            isMomentInputObject(input) ||\n            input === null ||\n            input === undefined\n        );\n    }\n\n    function isMomentInputObject(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'years',\n                'year',\n                'y',\n                'months',\n                'month',\n                'M',\n                'days',\n                'day',\n                'd',\n                'dates',\n                'date',\n                'D',\n                'hours',\n                'hour',\n                'h',\n                'minutes',\n                'minute',\n                'm',\n                'seconds',\n                'second',\n                's',\n                'milliseconds',\n                'millisecond',\n                'ms',\n            ],\n            i,\n            property;\n\n        for (i = 0; i < properties.length; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function isNumberOrStringArray(input) {\n        var arrayTest = isArray(input),\n            dataTypeTest = false;\n        if (arrayTest) {\n            dataTypeTest =\n                input.filter(function (item) {\n                    return !isNumber(item) && isString(input);\n                }).length === 0;\n        }\n        return arrayTest && dataTypeTest;\n    }\n\n    function isCalendarSpec(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'sameDay',\n                'nextDay',\n                'lastDay',\n                'nextWeek',\n                'lastWeek',\n                'sameElse',\n            ],\n            i,\n            property;\n\n        for (i = 0; i < properties.length; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6\n            ? 'sameElse'\n            : diff < -1\n            ? 'lastWeek'\n            : diff < 0\n            ? 'lastDay'\n            : diff < 1\n            ? 'sameDay'\n            : diff < 2\n            ? 'nextDay'\n            : diff < 7\n            ? 'nextWeek'\n            : 'sameElse';\n    }\n\n    function calendar$1(time, formats) {\n        // Support for single parameter, formats only overload to the calendar function\n        if (arguments.length === 1) {\n            if (isMomentInput(arguments[0])) {\n                time = arguments[0];\n                formats = undefined;\n            } else if (isCalendarSpec(arguments[0])) {\n                formats = arguments[0];\n                time = undefined;\n            }\n        }\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse',\n            output =\n                formats &&\n                (isFunction(formats[format])\n                    ? formats[format].call(this, now)\n                    : formats[format]);\n\n        return this.format(\n            output || this.localeData().calendar(format, this, createLocal(now))\n        );\n    }\n\n    function clone() {\n        return new Moment(this);\n    }\n\n    function isAfter(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween(from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (\n            (inclusivity[0] === '('\n                ? this.isAfter(localFrom, units)\n                : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')'\n                ? this.isBefore(localTo, units)\n                : !this.isAfter(localTo, units))\n        );\n    }\n\n    function isSame(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return (\n                this.clone().startOf(units).valueOf() <= inputMs &&\n                inputMs <= this.clone().endOf(units).valueOf()\n            );\n        }\n    }\n\n    function isSameOrAfter(input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore(input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff(input, units, asFloat) {\n        var that, zoneDelta, output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year':\n                output = monthDiff(this, that) / 12;\n                break;\n            case 'month':\n                output = monthDiff(this, that);\n                break;\n            case 'quarter':\n                output = monthDiff(this, that) / 3;\n                break;\n            case 'second':\n                output = (this - that) / 1e3;\n                break; // 1000\n            case 'minute':\n                output = (this - that) / 6e4;\n                break; // 1000 * 60\n            case 'hour':\n                output = (this - that) / 36e5;\n                break; // 1000 * 60 * 60\n            case 'day':\n                output = (this - that - zoneDelta) / 864e5;\n                break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week':\n                output = (this - that - zoneDelta) / 6048e5;\n                break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default:\n                output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff(a, b) {\n        if (a.date() < b.date()) {\n            // end-of-month calculations work correct when the start month has more\n            // days than the end month.\n            return -monthDiff(b, a);\n        }\n        // difference in months\n        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2,\n            adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString() {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true,\n            m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(\n                m,\n                utc\n                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'\n                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'\n            );\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)\n                    .toISOString()\n                    .replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(\n            m,\n            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n        );\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect() {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment',\n            zone = '',\n            prefix,\n            year,\n            datetime,\n            suffix;\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        prefix = '[' + func + '(\"]';\n        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n        datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format(inputString) {\n        if (!inputString) {\n            inputString = this.isUtc()\n                ? hooks.defaultFormatUtc\n                : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ to: this, from: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow(withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ from: this, to: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow(withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale(key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData() {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000,\n        MS_PER_MINUTE = 60 * MS_PER_SECOND,\n        MS_PER_HOUR = 60 * MS_PER_MINUTE,\n        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return ((dividend % divisor) + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(\n                    this.year(),\n                    this.month() - (this.month() % 3),\n                    1\n                );\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - this.weekday()\n                );\n                break;\n            case 'isoWeek':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - (this.isoWeekday() - 1)\n                );\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(\n                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                    MS_PER_HOUR\n                );\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month() - (this.month() % 3) + 3,\n                        1\n                    ) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - this.weekday() + 7\n                    ) - 1;\n                break;\n            case 'isoWeek':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - (this.isoWeekday() - 1) + 7\n                    ) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time +=\n                    MS_PER_HOUR -\n                    mod$1(\n                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                        MS_PER_HOUR\n                    ) -\n                    1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf() {\n        return this._d.valueOf() - (this._offset || 0) * 60000;\n    }\n\n    function unix() {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate() {\n        return new Date(this.valueOf());\n    }\n\n    function toArray() {\n        var m = this;\n        return [\n            m.year(),\n            m.month(),\n            m.date(),\n            m.hour(),\n            m.minute(),\n            m.second(),\n            m.millisecond(),\n        ];\n    }\n\n    function toObject() {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds(),\n        };\n    }\n\n    function toJSON() {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2() {\n        return isValid(this);\n    }\n\n    function parsingFlags() {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt() {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict,\n        };\n    }\n\n    addFormatToken('N', 0, 0, 'eraAbbr');\n    addFormatToken('NN', 0, 0, 'eraAbbr');\n    addFormatToken('NNN', 0, 0, 'eraAbbr');\n    addFormatToken('NNNN', 0, 0, 'eraName');\n    addFormatToken('NNNNN', 0, 0, 'eraNarrow');\n\n    addFormatToken('y', ['y', 1], 'yo', 'eraYear');\n    addFormatToken('y', ['yy', 2], 0, 'eraYear');\n    addFormatToken('y', ['yyy', 3], 0, 'eraYear');\n    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');\n\n    addRegexToken('N', matchEraAbbr);\n    addRegexToken('NN', matchEraAbbr);\n    addRegexToken('NNN', matchEraAbbr);\n    addRegexToken('NNNN', matchEraName);\n    addRegexToken('NNNNN', matchEraNarrow);\n\n    addParseToken(['N', 'NN', 'NNN', 'NNNN', 'NNNNN'], function (\n        input,\n        array,\n        config,\n        token\n    ) {\n        var era = config._locale.erasParse(input, token, config._strict);\n        if (era) {\n            getParsingFlags(config).era = era;\n        } else {\n            getParsingFlags(config).invalidEra = input;\n        }\n    });\n\n    addRegexToken('y', matchUnsigned);\n    addRegexToken('yy', matchUnsigned);\n    addRegexToken('yyy', matchUnsigned);\n    addRegexToken('yyyy', matchUnsigned);\n    addRegexToken('yo', matchEraYearOrdinal);\n\n    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);\n    addParseToken(['yo'], function (input, array, config, token) {\n        var match;\n        if (config._locale._eraYearOrdinalRegex) {\n            match = input.match(config._locale._eraYearOrdinalRegex);\n        }\n\n        if (config._locale.eraYearOrdinalParse) {\n            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);\n        } else {\n            array[YEAR] = parseInt(input, 10);\n        }\n    });\n\n    function localeEras(m, format) {\n        var i,\n            l,\n            date,\n            eras = this._eras || getLocale('en')._eras;\n        for (i = 0, l = eras.length; i < l; ++i) {\n            switch (typeof eras[i].since) {\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].since).startOf('day');\n                    eras[i].since = date.valueOf();\n                    break;\n            }\n\n            switch (typeof eras[i].until) {\n                case 'undefined':\n                    eras[i].until = +Infinity;\n                    break;\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].until).startOf('day').valueOf();\n                    eras[i].until = date.valueOf();\n                    break;\n            }\n        }\n        return eras;\n    }\n\n    function localeErasParse(eraName, format, strict) {\n        var i,\n            l,\n            eras = this.eras(),\n            name,\n            abbr,\n            narrow;\n        eraName = eraName.toUpperCase();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            name = eras[i].name.toUpperCase();\n            abbr = eras[i].abbr.toUpperCase();\n            narrow = eras[i].narrow.toUpperCase();\n\n            if (strict) {\n                switch (format) {\n                    case 'N':\n                    case 'NN':\n                    case 'NNN':\n                        if (abbr === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNN':\n                        if (name === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNNN':\n                        if (narrow === eraName) {\n                            return eras[i];\n                        }\n                        break;\n                }\n            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {\n                return eras[i];\n            }\n        }\n    }\n\n    function localeErasConvertYear(era, year) {\n        var dir = era.since <= era.until ? +1 : -1;\n        if (year === undefined) {\n            return hooks(era.since).year();\n        } else {\n            return hooks(era.since).year() + (year - era.offset) * dir;\n        }\n    }\n\n    function getEraName() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].name;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].name;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraNarrow() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].narrow;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].narrow;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraAbbr() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].abbr;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].abbr;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraYear() {\n        var i,\n            l,\n            dir,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            dir = eras[i].since <= eras[i].until ? +1 : -1;\n\n            // truncate time\n            val = this.startOf('day').valueOf();\n\n            if (\n                (eras[i].since <= val && val <= eras[i].until) ||\n                (eras[i].until <= val && val <= eras[i].since)\n            ) {\n                return (\n                    (this.year() - hooks(eras[i].since).year()) * dir +\n                    eras[i].offset\n                );\n            }\n        }\n\n        return this.year();\n    }\n\n    function erasNameRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNameRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNameRegex : this._erasRegex;\n    }\n\n    function erasAbbrRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasAbbrRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasAbbrRegex : this._erasRegex;\n    }\n\n    function erasNarrowRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNarrowRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNarrowRegex : this._erasRegex;\n    }\n\n    function matchEraAbbr(isStrict, locale) {\n        return locale.erasAbbrRegex(isStrict);\n    }\n\n    function matchEraName(isStrict, locale) {\n        return locale.erasNameRegex(isStrict);\n    }\n\n    function matchEraNarrow(isStrict, locale) {\n        return locale.erasNarrowRegex(isStrict);\n    }\n\n    function matchEraYearOrdinal(isStrict, locale) {\n        return locale._eraYearOrdinalRegex || matchUnsigned;\n    }\n\n    function computeErasParse() {\n        var abbrPieces = [],\n            namePieces = [],\n            narrowPieces = [],\n            mixedPieces = [],\n            i,\n            l,\n            eras = this.eras();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            namePieces.push(regexEscape(eras[i].name));\n            abbrPieces.push(regexEscape(eras[i].abbr));\n            narrowPieces.push(regexEscape(eras[i].narrow));\n\n            mixedPieces.push(regexEscape(eras[i].name));\n            mixedPieces.push(regexEscape(eras[i].abbr));\n            mixedPieces.push(regexEscape(eras[i].narrow));\n        }\n\n        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');\n        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');\n        this._erasNarrowRegex = new RegExp(\n            '^(' + narrowPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken(token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg', 'weekYear');\n    addWeekYearFormatToken('ggggg', 'weekYear');\n    addWeekYearFormatToken('GGGG', 'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n    // PARSING\n\n    addRegexToken('G', matchSigned);\n    addRegexToken('g', matchSigned);\n    addRegexToken('GG', match1to2, match2);\n    addRegexToken('gg', match1to2, match2);\n    addRegexToken('GGGG', match1to4, match4);\n    addRegexToken('gggg', match1to4, match4);\n    addRegexToken('GGGGG', match1to6, match6);\n    addRegexToken('ggggg', match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (\n        input,\n        week,\n        config,\n        token\n    ) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy\n        );\n    }\n\n    function getSetISOWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.isoWeek(),\n            this.isoWeekday(),\n            1,\n            4\n        );\n    }\n\n    function getISOWeeksInYear() {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getISOWeeksInISOWeekYear() {\n        return weeksInYear(this.isoWeekYear(), 1, 4);\n    }\n\n    function getWeeksInYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getWeeksInWeekYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter(input) {\n        return input == null\n            ? Math.ceil((this.month() + 1) / 3)\n            : this.month((input - 1) * 3 + (this.month() % 3));\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D', match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict\n            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse\n            : locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD', match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear(input) {\n        var dayOfYear =\n            Math.round(\n                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5\n            ) + 1;\n        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m', match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s', match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S', match1to3, match1);\n    addRegexToken('SS', match1to3, match2);\n    addRegexToken('SSS', match1to3, match3);\n\n    var token, getSetMillisecond;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n\n    getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z', 0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr() {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName() {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add = add;\n    proto.calendar = calendar$1;\n    proto.clone = clone;\n    proto.diff = diff;\n    proto.endOf = endOf;\n    proto.format = format;\n    proto.from = from;\n    proto.fromNow = fromNow;\n    proto.to = to;\n    proto.toNow = toNow;\n    proto.get = stringGet;\n    proto.invalidAt = invalidAt;\n    proto.isAfter = isAfter;\n    proto.isBefore = isBefore;\n    proto.isBetween = isBetween;\n    proto.isSame = isSame;\n    proto.isSameOrAfter = isSameOrAfter;\n    proto.isSameOrBefore = isSameOrBefore;\n    proto.isValid = isValid$2;\n    proto.lang = lang;\n    proto.locale = locale;\n    proto.localeData = localeData;\n    proto.max = prototypeMax;\n    proto.min = prototypeMin;\n    proto.parsingFlags = parsingFlags;\n    proto.set = stringSet;\n    proto.startOf = startOf;\n    proto.subtract = subtract;\n    proto.toArray = toArray;\n    proto.toObject = toObject;\n    proto.toDate = toDate;\n    proto.toISOString = toISOString;\n    proto.inspect = inspect;\n    if (typeof Symbol !== 'undefined' && Symbol.for != null) {\n        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n            return 'Moment<' + this.format() + '>';\n        };\n    }\n    proto.toJSON = toJSON;\n    proto.toString = toString;\n    proto.unix = unix;\n    proto.valueOf = valueOf;\n    proto.creationData = creationData;\n    proto.eraName = getEraName;\n    proto.eraNarrow = getEraNarrow;\n    proto.eraAbbr = getEraAbbr;\n    proto.eraYear = getEraYear;\n    proto.year = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week = proto.weeks = getSetWeek;\n    proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n    proto.weeksInYear = getWeeksInYear;\n    proto.weeksInWeekYear = getWeeksInWeekYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n    proto.date = getSetDayOfMonth;\n    proto.day = proto.days = getSetDayOfWeek;\n    proto.weekday = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset = getSetOffset;\n    proto.utc = setOffsetToUTC;\n    proto.local = setOffsetToLocal;\n    proto.parseZone = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST = isDaylightSavingTime;\n    proto.isLocal = isLocal;\n    proto.isUtcOffset = isUtcOffset;\n    proto.isUtc = isUtc;\n    proto.isUTC = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates = deprecate(\n        'dates accessor is deprecated. Use date instead.',\n        getSetDayOfMonth\n    );\n    proto.months = deprecate(\n        'months accessor is deprecated. Use month instead',\n        getSetMonth\n    );\n    proto.years = deprecate(\n        'years accessor is deprecated. Use year instead',\n        getSetYear\n    );\n    proto.zone = deprecate(\n        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',\n        getSetZone\n    );\n    proto.isDSTShifted = deprecate(\n        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',\n        isDaylightSavingTimeShifted\n    );\n\n    function createUnix(input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone() {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat(string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar = calendar;\n    proto$1.longDateFormat = longDateFormat;\n    proto$1.invalidDate = invalidDate;\n    proto$1.ordinal = ordinal;\n    proto$1.preparse = preParsePostFormat;\n    proto$1.postformat = preParsePostFormat;\n    proto$1.relativeTime = relativeTime;\n    proto$1.pastFuture = pastFuture;\n    proto$1.set = set;\n    proto$1.eras = localeEras;\n    proto$1.erasParse = localeErasParse;\n    proto$1.erasConvertYear = localeErasConvertYear;\n    proto$1.erasAbbrRegex = erasAbbrRegex;\n    proto$1.erasNameRegex = erasNameRegex;\n    proto$1.erasNarrowRegex = erasNarrowRegex;\n\n    proto$1.months = localeMonths;\n    proto$1.monthsShort = localeMonthsShort;\n    proto$1.monthsParse = localeMonthsParse;\n    proto$1.monthsRegex = monthsRegex;\n    proto$1.monthsShortRegex = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays = localeWeekdays;\n    proto$1.weekdaysMin = localeWeekdaysMin;\n    proto$1.weekdaysShort = localeWeekdaysShort;\n    proto$1.weekdaysParse = localeWeekdaysParse;\n\n    proto$1.weekdaysRegex = weekdaysRegex;\n    proto$1.weekdaysShortRegex = weekdaysShortRegex;\n    proto$1.weekdaysMinRegex = weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1(format, index, field, setter) {\n        var locale = getLocale(),\n            utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl(format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i,\n            out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl(localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0,\n            i,\n            out = [];\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths(format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort(format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        eras: [\n            {\n                since: '0001-01-01',\n                until: +Infinity,\n                offset: 1,\n                name: 'Anno Domini',\n                narrow: 'AD',\n                abbr: 'AD',\n            },\n            {\n                since: '0000-12-31',\n                until: -Infinity,\n                offset: 1,\n                name: 'Before Christ',\n                narrow: 'BC',\n                abbr: 'BC',\n            },\n        ],\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    toInt((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate(\n        'moment.lang is deprecated. Use moment.locale instead.',\n        getSetGlobalLocale\n    );\n    hooks.langData = deprecate(\n        'moment.langData is deprecated. Use moment.localeData instead.',\n        getLocale\n    );\n\n    var mathAbs = Math.abs;\n\n    function abs() {\n        var data = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days = mathAbs(this._days);\n        this._months = mathAbs(this._months);\n\n        data.milliseconds = mathAbs(data.milliseconds);\n        data.seconds = mathAbs(data.seconds);\n        data.minutes = mathAbs(data.minutes);\n        data.hours = mathAbs(data.hours);\n        data.months = mathAbs(data.months);\n        data.years = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1(duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days += direction * other._days;\n        duration._months += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1(input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1(input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil(number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble() {\n        var milliseconds = this._milliseconds,\n            days = this._days,\n            months = this._months,\n            data = this._data,\n            seconds,\n            minutes,\n            hours,\n            years,\n            monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (\n            !(\n                (milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0)\n            )\n        ) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds = absFloor(milliseconds / 1000);\n        data.seconds = seconds % 60;\n\n        minutes = absFloor(seconds / 60);\n        data.minutes = minutes % 60;\n\n        hours = absFloor(minutes / 60);\n        data.hours = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days = days;\n        data.months = months;\n        data.years = years;\n\n        return this;\n    }\n\n    function daysToMonths(days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return (days * 4800) / 146097;\n    }\n\n    function monthsToDays(months) {\n        // the reverse of daysToMonths\n        return (months * 146097) / 4800;\n    }\n\n    function as(units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days,\n            months,\n            milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':\n                    return months;\n                case 'quarter':\n                    return months / 3;\n                case 'year':\n                    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week':\n                    return days / 7 + milliseconds / 6048e5;\n                case 'day':\n                    return days + milliseconds / 864e5;\n                case 'hour':\n                    return days * 24 + milliseconds / 36e5;\n                case 'minute':\n                    return days * 1440 + milliseconds / 6e4;\n                case 'second':\n                    return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond':\n                    return Math.floor(days * 864e5) + milliseconds;\n                default:\n                    throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1() {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs(alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms'),\n        asSeconds = makeAs('s'),\n        asMinutes = makeAs('m'),\n        asHours = makeAs('h'),\n        asDays = makeAs('d'),\n        asWeeks = makeAs('w'),\n        asMonths = makeAs('M'),\n        asQuarters = makeAs('Q'),\n        asYears = makeAs('y');\n\n    function clone$1() {\n        return createDuration(this);\n    }\n\n    function get$2(units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds'),\n        seconds = makeGetter('seconds'),\n        minutes = makeGetter('minutes'),\n        hours = makeGetter('hours'),\n        days = makeGetter('days'),\n        months = makeGetter('months'),\n        years = makeGetter('years');\n\n    function weeks() {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round,\n        thresholds = {\n            ss: 44, // a few seconds to seconds\n            s: 45, // seconds to minute\n            m: 45, // minutes to hour\n            h: 22, // hours to day\n            d: 26, // days to month/week\n            w: null, // weeks to month\n            M: 11, // months to year\n        };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {\n        var duration = createDuration(posNegDuration).abs(),\n            seconds = round(duration.as('s')),\n            minutes = round(duration.as('m')),\n            hours = round(duration.as('h')),\n            days = round(duration.as('d')),\n            months = round(duration.as('M')),\n            weeks = round(duration.as('w')),\n            years = round(duration.as('y')),\n            a =\n                (seconds <= thresholds.ss && ['s', seconds]) ||\n                (seconds < thresholds.s && ['ss', seconds]) ||\n                (minutes <= 1 && ['m']) ||\n                (minutes < thresholds.m && ['mm', minutes]) ||\n                (hours <= 1 && ['h']) ||\n                (hours < thresholds.h && ['hh', hours]) ||\n                (days <= 1 && ['d']) ||\n                (days < thresholds.d && ['dd', days]);\n\n        if (thresholds.w != null) {\n            a =\n                a ||\n                (weeks <= 1 && ['w']) ||\n                (weeks < thresholds.w && ['ww', weeks]);\n        }\n        a = a ||\n            (months <= 1 && ['M']) ||\n            (months < thresholds.M && ['MM', months]) ||\n            (years <= 1 && ['y']) || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding(roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof roundingFunction === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold(threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize(argWithSuffix, argThresholds) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var withSuffix = false,\n            th = thresholds,\n            locale,\n            output;\n\n        if (typeof argWithSuffix === 'object') {\n            argThresholds = argWithSuffix;\n            argWithSuffix = false;\n        }\n        if (typeof argWithSuffix === 'boolean') {\n            withSuffix = argWithSuffix;\n        }\n        if (typeof argThresholds === 'object') {\n            th = Object.assign({}, thresholds, argThresholds);\n            if (argThresholds.s != null && argThresholds.ss == null) {\n                th.ss = argThresholds.s - 1;\n            }\n        }\n\n        locale = this.localeData();\n        output = relativeTime$1(this, !withSuffix, th, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return (x > 0) - (x < 0) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000,\n            days = abs$1(this._days),\n            months = abs$1(this._months),\n            minutes,\n            hours,\n            years,\n            s,\n            total = this.asSeconds(),\n            totalSign,\n            ymSign,\n            daysSign,\n            hmsSign;\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes = absFloor(seconds / 60);\n        hours = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n\n        totalSign = total < 0 ? '-' : '';\n        ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return (\n            totalSign +\n            'P' +\n            (years ? ymSign + years + 'Y' : '') +\n            (months ? ymSign + months + 'M' : '') +\n            (days ? daysSign + days + 'D' : '') +\n            (hours || minutes || seconds ? 'T' : '') +\n            (hours ? hmsSign + hours + 'H' : '') +\n            (minutes ? hmsSign + minutes + 'M' : '') +\n            (seconds ? hmsSign + s + 'S' : '')\n        );\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid = isValid$1;\n    proto$2.abs = abs;\n    proto$2.add = add$1;\n    proto$2.subtract = subtract$1;\n    proto$2.as = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds = asSeconds;\n    proto$2.asMinutes = asMinutes;\n    proto$2.asHours = asHours;\n    proto$2.asDays = asDays;\n    proto$2.asWeeks = asWeeks;\n    proto$2.asMonths = asMonths;\n    proto$2.asQuarters = asQuarters;\n    proto$2.asYears = asYears;\n    proto$2.valueOf = valueOf$1;\n    proto$2._bubble = bubble;\n    proto$2.clone = clone$1;\n    proto$2.get = get$2;\n    proto$2.milliseconds = milliseconds;\n    proto$2.seconds = seconds;\n    proto$2.minutes = minutes;\n    proto$2.hours = hours;\n    proto$2.days = days;\n    proto$2.weeks = weeks;\n    proto$2.months = months;\n    proto$2.years = years;\n    proto$2.humanize = humanize;\n    proto$2.toISOString = toISOString$1;\n    proto$2.toString = toISOString$1;\n    proto$2.toJSON = toISOString$1;\n    proto$2.locale = locale;\n    proto$2.localeData = localeData;\n\n    proto$2.toIsoString = deprecate(\n        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',\n        toISOString$1\n    );\n    proto$2.lang = lang;\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    //! moment.js\n\n    hooks.version = '2.25.3';\n\n    setHookCallback(createLocal);\n\n    hooks.fn = proto;\n    hooks.min = min;\n    hooks.max = max;\n    hooks.now = now;\n    hooks.utc = createUTC;\n    hooks.unix = createUnix;\n    hooks.months = listMonths;\n    hooks.isDate = isDate;\n    hooks.locale = getSetGlobalLocale;\n    hooks.invalid = createInvalid;\n    hooks.duration = createDuration;\n    hooks.isMoment = isMoment;\n    hooks.weekdays = listWeekdays;\n    hooks.parseZone = createInZone;\n    hooks.localeData = getLocale;\n    hooks.isDuration = isDuration;\n    hooks.monthsShort = listMonthsShort;\n    hooks.weekdaysMin = listWeekdaysMin;\n    hooks.defineLocale = defineLocale;\n    hooks.updateLocale = updateLocale;\n    hooks.locales = listLocales;\n    hooks.weekdaysShort = listWeekdaysShort;\n    hooks.normalizeUnits = normalizeUnits;\n    hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat = getCalendarFormat;\n    hooks.prototype = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD', // <input type=\"date\" />\n        TIME: 'HH:mm', // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss', // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS', // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW', // <input type=\"week\" />\n        MONTH: 'YYYY-MM', // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import lightFormatters from '../lightFormatters/index.js';\nimport getUTCDayOfYear from '../../../_lib/getUTCDayOfYear/index.js';\nimport getUTCISOWeek from '../../../_lib/getUTCISOWeek/index.js';\nimport getUTCISOWeekYear from '../../../_lib/getUTCISOWeekYear/index.js';\nimport getUTCWeek from '../../../_lib/getUTCWeek/index.js';\nimport getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport addLeadingZeros from '../../addLeadingZeros/index.js';\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n  /*\n   * |     | Unit                           |     | Unit                           |\n   * |-----|--------------------------------|-----|--------------------------------|\n   * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n   * |  d  | Day of month                   |  D  | Day of year                    |\n   * |  e  | Local day of week              |  E  | Day of week                    |\n   * |  f  |                                |  F* | Day of week in month           |\n   * |  g* | Modified Julian day            |  G  | Era                            |\n   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n   * |  i! | ISO day of week                |  I! | ISO week of year               |\n   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n   * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n   * |  m  | Minute                         |  M  | Month                          |\n   * |  n  |                                |  N  |                                |\n   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n   * |  p! | Long localized time            |  P! | Long localized date            |\n   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n   * |  s  | Second                         |  S  | Fraction of second             |\n   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n   * |  u  | Extended year                  |  U* | Cyclic year                    |\n   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n   * |  w  | Local week of year             |  W* | Week of month                  |\n   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n   *\n   * Letters marked by * are not implemented but reserved by Unicode standard.\n   *\n   * Letters marked by ! are non-standard, but implemented by date-fns:\n   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n   *   i.e. 7 for Sunday, 1 for Monday, etc.\n   * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n   *   `R` is supposed to be used in conjunction with `I` and `i`\n   *   for universal ISO week-numbering date, whereas\n   *   `Y` is supposed to be used in conjunction with `w` and `e`\n   *   for week-numbering date specific to the locale.\n   * - `P` is long localized date format\n   * - `p` is long localized time format\n   */\n\n};\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","import toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import isValid from '../isValid/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport formatters from '../_lib/format/formatters/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js'; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aaa  | AM, PM                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 05/29/1453                        | 7     |\n * |                                 | PP      | May 29, 1453                      | 7     |\n * |                                 | PPP     | May 29th, 1453                    | 7     |\n * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isBefore\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date that should be before the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is before the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\n\nexport default function isBefore(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() < dateToCompare.getTime();\n}","'use strict'\nObject.defineProperty(exports, '__esModule', { value: true })\nvar date_fns_1 = require('date-fns')\nvar MILLISECONDS_IN_HOUR = 3600000\nvar MILLISECONDS_IN_MINUTE = 60000\nvar DEFAULT_ADDITIONAL_DIGITS = 2\nvar parseTokenDateTimeDelimeter = /[T ]/\nvar parseTokenPlainTime = /:/\n// year tokens\nvar parseTokenYY = /^(\\d{2})$/\nvar parseTokensYYY = [\n  /^([+-]\\d{2})$/,\n  /^([+-]\\d{3})$/,\n  /^([+-]\\d{4})$/ // 2 additional digits\n]\nvar parseTokenYYYY = /^(\\d{4})/\nvar parseTokensYYYYY = [\n  /^([+-]\\d{4})/,\n  /^([+-]\\d{5})/,\n  /^([+-]\\d{6})/ // 2 additional digits\n]\n// date tokens\nvar parseTokenMM = /^-(\\d{2})$/\nvar parseTokenDDD = /^-?(\\d{3})$/\nvar parseTokenMMDD = /^-?(\\d{2})-?(\\d{2})$/\nvar parseTokenWww = /^-?W(\\d{2})$/\nvar parseTokenWwwD = /^-?W(\\d{2})-?(\\d{1})$/\n// time tokens\nvar parseTokenHH = /^(\\d{2}([.,]\\d*)?)$/\nvar parseTokenHHMM = /^(\\d{2}):?(\\d{2}([.,]\\d*)?)$/\nvar parseTokenHHMMSS = /^(\\d{2}):?(\\d{2}):?(\\d{2}([.,]\\d*)?)$/\n// timezone tokens\nvar parseTokenTimezone = /([Z+-].*)$/\nvar parseTokenTimezoneZ = /^(Z)$/\nvar parseTokenTimezoneHH = /^([+-])(\\d{2})$/\nvar parseTokenTimezoneHHMM = /^([+-])(\\d{2}):?(\\d{2})$/\nfunction legacyParse(argument, options) {\n  if (options === void 0) {\n    options = {}\n  }\n  if (date_fns_1.isDate(argument)) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime())\n  } else if (typeof argument !== 'string') {\n    return new Date(argument)\n  }\n  var additionalDigits =\n    options.additionalDigits == null\n      ? DEFAULT_ADDITIONAL_DIGITS\n      : Number(options.additionalDigits)\n  var dateStrings = splitDateString(argument)\n  var parseYearResult = parseYear(dateStrings.date || '', additionalDigits)\n  var year = parseYearResult.year\n  var restDateString = parseYearResult.restDateString\n  var date = parseDate(restDateString || '', year)\n  if (date) {\n    var timestamp = date.getTime()\n    var time = 0\n    var offset = void 0\n    if (dateStrings.time) {\n      time = parseTime(dateStrings.time) || 0\n    }\n    if (dateStrings.timezone) {\n      offset = parseTimezone(dateStrings.timezone) * MILLISECONDS_IN_MINUTE\n    } else {\n      var fullTime = timestamp + time\n      var fullTimeDate = new Date(fullTime)\n      offset = getTimezoneOffsetInMilliseconds(fullTimeDate)\n      // Adjust time when it's coming from DST\n      var fullTimeDateNextDay = new Date(fullTime)\n      fullTimeDateNextDay.setDate(fullTimeDate.getDate() + 1)\n      var offsetDiff =\n        getTimezoneOffsetInMilliseconds(fullTimeDateNextDay) -\n        getTimezoneOffsetInMilliseconds(fullTimeDate)\n      if (offsetDiff > 0) {\n        offset += offsetDiff\n      }\n    }\n    return new Date(timestamp + time + offset)\n  } else {\n    return new Date(argument)\n  }\n}\nexports.default = legacyParse\nfunction splitDateString(dateString) {\n  var array = dateString.split(parseTokenDateTimeDelimeter)\n  var timeString, date, time, timezone\n  if (parseTokenPlainTime.test(array[0])) {\n    date = undefined\n    timeString = array[0]\n  } else {\n    date = array[0]\n    timeString = array[1]\n  }\n  if (timeString) {\n    var token = parseTokenTimezone.exec(timeString)\n    if (token) {\n      time = timeString.replace(token[1], '')\n      timezone = token[1]\n    } else {\n      time = timeString\n    }\n  }\n  return {\n    date: date,\n    time: time,\n    timezone: timezone\n  }\n}\nfunction parseYear(dateString, additionalDigits) {\n  var parseTokenYYY = parseTokensYYY[additionalDigits]\n  var parseTokenYYYYY = parseTokensYYYYY[additionalDigits]\n  var token\n  // YYYY or ±YYYYY\n  token = parseTokenYYYY.exec(dateString) || parseTokenYYYYY.exec(dateString)\n  if (token) {\n    var yearString = token[1]\n    return {\n      year: parseInt(yearString, 10),\n      restDateString: dateString.slice(yearString.length)\n    }\n  }\n  // YY or ±YYY\n  token = parseTokenYY.exec(dateString) || parseTokenYYY.exec(dateString)\n  if (token) {\n    var centuryString = token[1]\n    return {\n      year: parseInt(centuryString, 10) * 100,\n      restDateString: dateString.slice(centuryString.length)\n    }\n  }\n  // Invalid ISO-formatted year\n  return {\n    year: null\n  }\n}\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) {\n    return null\n  }\n  var token\n  var date\n  var month\n  var week\n  // YYYY\n  if (dateString.length === 0) {\n    date = new Date(0)\n    date.setUTCFullYear(year)\n    return date\n  }\n  // YYYY-MM\n  token = parseTokenMM.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    month = parseInt(token[1], 10) - 1\n    date.setUTCFullYear(year, month)\n    return date\n  }\n  // YYYY-DDD or YYYYDDD\n  token = parseTokenDDD.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    var dayOfYear = parseInt(token[1], 10)\n    date.setUTCFullYear(year, 0, dayOfYear)\n    return date\n  }\n  // YYYY-MM-DD or YYYYMMDD\n  token = parseTokenMMDD.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    month = parseInt(token[1], 10) - 1\n    var day = parseInt(token[2], 10)\n    date.setUTCFullYear(year, month, day)\n    return date\n  }\n  // YYYY-Www or YYYYWww\n  token = parseTokenWww.exec(dateString)\n  if (token) {\n    week = parseInt(token[1], 10) - 1\n    return dayOfISOYear(year, week)\n  }\n  // YYYY-Www-D or YYYYWwwD\n  token = parseTokenWwwD.exec(dateString)\n  if (token) {\n    week = parseInt(token[1], 10) - 1\n    var dayOfWeek = parseInt(token[2], 10) - 1\n    return dayOfISOYear(year, week, dayOfWeek)\n  }\n  // Invalid ISO-formatted date\n  return null\n}\nfunction parseTime(timeString) {\n  var token\n  var hours\n  var minutes\n  // hh\n  token = parseTokenHH.exec(timeString)\n  if (token) {\n    hours = parseFloat(token[1].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR\n  }\n  // hh:mm or hhmm\n  token = parseTokenHHMM.exec(timeString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n    minutes = parseFloat(token[2].replace(',', '.'))\n    return (\n      (hours % 24) * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE\n    )\n  }\n  // hh:mm:ss or hhmmss\n  token = parseTokenHHMMSS.exec(timeString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n    minutes = parseInt(token[2], 10)\n    var seconds = parseFloat(token[3].replace(',', '.'))\n    return (\n      (hours % 24) * MILLISECONDS_IN_HOUR +\n      minutes * MILLISECONDS_IN_MINUTE +\n      seconds * 1000\n    )\n  }\n  // Invalid ISO-formatted time\n  return null\n}\nfunction parseTimezone(timezoneString) {\n  var token\n  var absoluteOffset\n  // Z\n  token = parseTokenTimezoneZ.exec(timezoneString)\n  if (token) {\n    return 0\n  }\n  // ±hh\n  token = parseTokenTimezoneHH.exec(timezoneString)\n  if (token) {\n    absoluteOffset = parseInt(token[2], 10) * 60\n    return token[1] === '+' ? -absoluteOffset : absoluteOffset\n  }\n  // ±hh:mm or ±hhmm\n  token = parseTokenTimezoneHHMM.exec(timezoneString)\n  if (token) {\n    absoluteOffset = parseInt(token[2], 10) * 60 + parseInt(token[3], 10)\n    return token[1] === '+' ? -absoluteOffset : absoluteOffset\n  }\n  return 0\n}\nfunction dayOfISOYear(isoYear, week, day) {\n  if (week === void 0) {\n    week = 0\n  }\n  if (day === void 0) {\n    day = 0\n  }\n  var date = new Date(0)\n  date.setUTCFullYear(isoYear, 0, 4)\n  var fourthOfJanuaryDay = date.getUTCDay() || 7\n  var diff = week * 7 + day + 1 - fourthOfJanuaryDay\n  date.setUTCDate(date.getUTCDate() + diff)\n  return date\n}\nfunction getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime())\n  var baseTimezoneOffset = date.getTimezoneOffset()\n  date.setSeconds(0, 0)\n  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE\n  return (\n    baseTimezoneOffset * MILLISECONDS_IN_MINUTE +\n    millisecondsPartOfTimezoneOffset\n  )\n}\n//# sourceMappingURL=index.js.map\n","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","import addLeadingZeros from '../../addLeadingZeros/index.js';\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token) {\n  if (token === 'YYYY') {\n    throw new RangeError('Use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'YY') {\n    throw new RangeError('Use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'D') {\n    throw new RangeError('Use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr');\n  } else if (token === 'DD') {\n    throw new RangeError('Use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr');\n  }\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (dirtyObject.hasOwnProperty(property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * var result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDaysInMonth\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of days in a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many days are in February 2000?\n * var result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\n\nexport default function getDaysInMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var monthIndex = date.getMonth();\n  var lastDayOfMonth = new Date(0);\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);\n  lastDayOfMonth.setHours(0, 0, 0, 0);\n  return lastDayOfMonth.getDate();\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport getDaysInMonth from '../getDaysInMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * var result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\n\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  var desiredMonth = date.getMonth() + amount;\n  var dateWithDesiredMonth = new Date(0);\n  dateWithDesiredMonth.setFullYear(date.getFullYear(), desiredMonth, 1);\n  dateWithDesiredMonth.setHours(0, 0, 0, 0);\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth); // Set the last day of the new month\n  // if the original date was the last day of the longer month\n\n  date.setMonth(desiredMonth, Math.min(daysInMonth, date.getDate()));\n  return date;\n}","import addDays from '../addDays/index.js';\nimport addMonths from '../addMonths/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name add\n * @category Common Helpers\n * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @description\n * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n *\n * | Key            | Description                        |\n * |----------------|------------------------------------|\n * | years          | Amount of years to be added        |\n * | months         | Amount of months to be added       |\n * | weeks          | Amount of weeks to be added       |\n * | days           | Amount of days to be added         |\n * | hours          | Amount of hours to be added        |\n * | minutes        | Amount of minutes to be added      |\n * | seconds        | Amount of seconds to be added      |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add the following duration to 1 September 2014, 10:19:50\n * var result = add(new Date(2014, 8, 1, 10, 19, 50), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30,\n * })\n * //=> Thu Jun 15 2017 15:29:20\n */\n\nexport default function add(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = 'years' in duration ? toInteger(duration.years) : 0;\n  var months = 'months' in duration ? toInteger(duration.months) : 0;\n  var weeks = 'weeks' in duration ? toInteger(duration.weeks) : 0;\n  var days = 'days' in duration ? toInteger(duration.days) : 0;\n  var hours = 'hours' in duration ? toInteger(duration.hours) : 0;\n  var minutes = 'minutes' in duration ? toInteger(duration.minutes) : 0;\n  var seconds = 'seconds' in duration ? toInteger(duration.seconds) : 0; // Add years and months\n\n  var dateWithMonths = addMonths(toDate(dirtyDate), months + years * 12); // Add weeks and days\n\n  var dateWithDays = addDays(dateWithMonths, days + weeks * 7); // Add days, hours, minutes and seconds\n\n  var minutesToAdd = minutes + hours * 60;\n  var secondsToAdd = seconds + minutesToAdd * 60;\n  var msToAdd = secondsToAdd * 1000;\n  var finalDate = new Date(dateWithDays.getTime() + msToAdd);\n  return finalDate;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isWeekend\n * @category Weekday Helpers\n * @summary Does the given date fall on a weekend?\n *\n * @description\n * Does the given date fall on a weekend?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date falls on a weekend\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Does 5 October 2014 fall on a weekend?\n * var result = isWeekend(new Date(2014, 9, 5))\n * //=> true\n */\n\nexport default function isWeekend(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  return day === 0 || day === 6;\n}","import isWeekend from '../isWeekend/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addBusinessDays\n * @category Day Helpers\n * @summary Add the specified number of business days (mon - fri) to the given date.\n *\n * @description\n * Add the specified number of business days (mon - fri) to the given date, ignoring weekends.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of business days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the business days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 business days to 1 September 2014:\n * var result = addBusinessDays(new Date(2014, 8, 1), 10)\n * //=> Mon Sep 15 2014 00:00:00 (skipped weekend days)\n */\n\nexport default function addBusinessDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) return new Date(NaN);\n  var hours = date.getHours();\n  var sign = amount < 0 ? -1 : 1;\n  var fullWeeks = toInteger(amount / 5);\n  date.setDate(date.getDate() + fullWeeks * 7); // Get remaining days not part of a full week\n\n  var restDays = Math.abs(amount % 5); // Loops over remaining days\n\n  while (restDays > 0) {\n    date.setDate(date.getDate() + sign);\n    if (!isWeekend(date)) restDays -= 1;\n  } // Restore hours to avoid DST lag\n\n\n  date.setHours(hours);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\n/**\n * @name addHours\n * @category Hour Helpers\n * @summary Add the specified number of hours to the given date.\n *\n * @description\n * Add the specified number of hours to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the hours added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 2 hours to 10 July 2014 23:00:00:\n * var result = addHours(new Date(2014, 6, 10, 23, 0), 2)\n * //=> Fri Jul 11 2014 01:00:00\n */\n\nexport default function addHours(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_HOUR);\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import startOfWeek from '../startOfWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * var result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return startOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}","import toDate from '../toDate/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `getISOYear` to `getISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * var result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\n\nexport default function getISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getISOWeekYear from '../getISOWeekYear/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * var result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\n\nexport default function startOfISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuary);\n  return date;\n}","import getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport startOfDay from '../startOfDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\n\nexport default function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfDayLeft = startOfDay(dirtyDateLeft);\n  var startOfDayRight = startOfDay(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport startOfISOWeekYear from '../startOfISOWeekYear/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Set the ISO week-numbering year to the given date.\n *\n * @description\n * Set the ISO week-numbering year to the given date,\n * saving the week number and the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `setISOYear` to `setISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `setWeekYear`.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} isoWeekYear - the ISO week-numbering year of the new date\n * @returns {Date} the new date with the ISO week-numbering year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set ISO week-numbering year 2007 to 29 December 2008:\n * var result = setISOWeekYear(new Date(2008, 11, 29), 2007)\n * //=> Mon Jan 01 2007 00:00:00\n */\n\nexport default function setISOWeekYear(dirtyDate, dirtyISOWeekYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeekYear = toInteger(dirtyISOWeekYear);\n  var diff = differenceInCalendarDays(date, startOfISOWeekYear(date));\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(isoWeekYear, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  date = startOfISOWeekYear(fourthOfJanuary);\n  date.setDate(date.getDate() + diff);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport getISOWeekYear from '../getISOWeekYear/index.js';\nimport setISOWeekYear from '../setISOWeekYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Add the specified number of ISO week-numbering years to the given date.\n *\n * @description\n * Add the specified number of ISO week-numbering years to the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `addISOYears` to `addISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of ISO week-numbering years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the ISO week-numbering years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 ISO week-numbering years to 2 July 2010:\n * var result = addISOWeekYears(new Date(2010, 6, 2), 5)\n * //=> Fri Jun 26 2015 00:00:00\n */\n\nexport default function addISOWeekYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return setISOWeekYear(dirtyDate, getISOWeekYear(dirtyDate) + amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name addMinutes\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * var result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\n\nexport default function addMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addQuarters\n * @category Quarter Helpers\n * @summary Add the specified number of year quarters to the given date.\n *\n * @description\n * Add the specified number of year quarters to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the quarters added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 1 quarter to 1 September 2014:\n * var result = addQuarters(new Date(2014, 8, 1), 1)\n * //=> Mon Dec 01 2014 00:00:00\n */\n\nexport default function addQuarters(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  var months = amount * 3;\n  return addMonths(dirtyDate, months);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addSeconds\n * @category Second Helpers\n * @summary Add the specified number of seconds to the given date.\n *\n * @description\n * Add the specified number of seconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 seconds to 10 July 2014 12:45:00:\n * var result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:45:30\n */\n\nexport default function addSeconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * 1000);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addDays from '../addDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of week to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the weeks added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * var result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\n\nexport default function addWeeks(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  var days = amount * 7;\n  return addDays(dirtyDate, days);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * var result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\n\nexport default function addYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, amount * 12);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name areIntervalsOverlapping\n * @category Interval Helpers\n * @summary Is the given time interval overlapping with another time interval?\n *\n * @description\n * Is the given time interval overlapping with another time interval? Adjacent intervals do not count as overlapping.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `areRangesOverlapping` to `areIntervalsOverlapping`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   areRangesOverlapping(\n *     new Date(2014, 0, 10), new Date(2014, 0, 20),\n *     new Date(2014, 0, 17), new Date(2014, 0, 21)\n *   )\n *\n *   // v2.0.0 onward\n *\n *   areIntervalsOverlapping(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *     { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n *   )\n *   ```\n *\n * @param {Interval} intervalLeft - the first interval to compare. See [Interval]{@link docs/types/Interval}\n * @param {Interval} intervalRight - the second interval to compare. See [Interval]{@link docs/types/Interval}\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.inclusive=false] - whether the comparison is inclusive or not\n * @returns {Boolean} whether the time intervals are overlapping\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For overlapping time intervals:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n * )\n * //=> true\n *\n * @example\n * // For non-overlapping time intervals:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }\n * )\n * //=> false\n *\n * @example\n * // For adjacent time intervals:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 30) }\n * )\n * //=> false\n *\n * @example\n * // Using the inclusive option:\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) }\n * )\n * //=> false\n * areIntervalsOverlapping(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) },\n *   { inclusive: true }\n * )\n * //=> true\n */\n\nexport default function areIntervalsOverlapping(dirtyIntervalLeft, dirtyIntervalRight) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var intervalLeft = dirtyIntervalLeft || {};\n  var intervalRight = dirtyIntervalRight || {};\n  var leftStartTime = toDate(intervalLeft.start).getTime();\n  var leftEndTime = toDate(intervalLeft.end).getTime();\n  var rightStartTime = toDate(intervalRight.start).getTime();\n  var rightEndTime = toDate(intervalRight.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  if (options.inclusive) {\n    return leftStartTime <= rightEndTime && rightStartTime <= leftEndTime;\n  }\n\n  return leftStartTime < rightEndTime && rightStartTime < leftEndTime;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name closestIndexTo\n * @category Common Helpers\n * @summary Return an index of the closest date from the array comparing to the given date.\n *\n * @description\n * Return an index of the closest date from the array comparing to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now, `closestIndexTo` doesn't throw an exception\n *   when the second argument is not an array, and returns Invalid Date instead.\n *\n * @param {Date|Number} dateToCompare - the date to compare with\n * @param {Date[]|Number[]} datesArray - the array to search\n * @returns {Number} an index of the date closest to the given date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Which date is closer to 6 September 2015?\n * var dateToCompare = new Date(2015, 8, 6)\n * var datesArray = [\n *   new Date(2015, 0, 1),\n *   new Date(2016, 0, 1),\n *   new Date(2017, 0, 1)\n * ]\n * var result = closestIndexTo(dateToCompare, datesArray)\n * //=> 1\n */\n\nexport default function closestIndexTo(dirtyDateToCompare, dirtyDatesArray) {\n  requiredArgs(2, arguments);\n  var dateToCompare = toDate(dirtyDateToCompare);\n\n  if (isNaN(dateToCompare)) {\n    return NaN;\n  }\n\n  var timeToCompare = dateToCompare.getTime();\n  var datesArray; // `dirtyDatesArray` is undefined or null\n\n  if (dirtyDatesArray == null) {\n    datesArray = []; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n  } else if (typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array\n  } else {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  }\n\n  var result;\n  var minDistance;\n  datesArray.forEach(function (dirtyDate, index) {\n    var currentDate = toDate(dirtyDate);\n\n    if (isNaN(currentDate)) {\n      result = NaN;\n      minDistance = NaN;\n      return;\n    }\n\n    var distance = Math.abs(timeToCompare - currentDate.getTime());\n\n    if (result == null || distance < minDistance) {\n      result = index;\n      minDistance = distance;\n    }\n  });\n  return result;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name closestTo\n * @category Common Helpers\n * @summary Return a date from the array closest to the given date.\n *\n * @description\n * Return a date from the array closest to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now, `closestTo` doesn't throw an exception\n *   when the second argument is not an array, and returns Invalid Date instead.\n *\n * @param {Date|Number} dateToCompare - the date to compare with\n * @param {Date[]|Number[]} datesArray - the array to search\n * @returns {Date} the date from the array closest to the given date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Which date is closer to 6 September 2015: 1 January 2000 or 1 January 2030?\n * var dateToCompare = new Date(2015, 8, 6)\n * var result = closestTo(dateToCompare, [\n *   new Date(2000, 0, 1),\n *   new Date(2030, 0, 1)\n * ])\n * //=> Tue Jan 01 2030 00:00:00\n */\n\nexport default function closestTo(dirtyDateToCompare, dirtyDatesArray) {\n  requiredArgs(2, arguments);\n  var dateToCompare = toDate(dirtyDateToCompare);\n\n  if (isNaN(dateToCompare)) {\n    return new Date(NaN);\n  }\n\n  var timeToCompare = dateToCompare.getTime();\n  var datesArray; // `dirtyDatesArray` is undefined or null\n\n  if (dirtyDatesArray == null) {\n    datesArray = []; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n  } else if (typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array\n  } else {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  }\n\n  var result;\n  var minDistance;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n\n    if (isNaN(currentDate)) {\n      result = new Date(NaN);\n      minDistance = NaN;\n      return;\n    }\n\n    var distance = Math.abs(timeToCompare - currentDate.getTime());\n\n    if (result == null || distance < minDistance) {\n      result = currentDate;\n      minDistance = distance;\n    }\n  });\n  return result;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name compareDesc\n * @category Common Helpers\n * @summary Compare the two dates reverse chronologically and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return -1 if the first date is after the second,\n * 1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989 reverse chronologically:\n * var result = compareDesc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> 1\n *\n * @example\n * // Sort the array of dates in reverse chronological order:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareDesc)\n * //=> [\n * //   Sun Jul 02 1995 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Wed Feb 11 1987 00:00:00\n * // ]\n */\n\nexport default function compareDesc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff > 0) {\n    return -1;\n  } else if (diff < 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import isValid from '../isValid/index.js';\nimport isWeekend from '../isWeekend/index.js';\nimport toDate from '../toDate/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport addDays from '../addDays/index.js';\nimport isSameDay from '../isSameDay/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInBusinessDays\n * @category Day Helpers\n * @summary Get the number of business days between the given dates.\n *\n * @description\n * Get the number of business day periods between the given dates.\n * Business days being days that arent in the weekend.\n * Like `differenceInCalendarDays`, the function removes the times from\n * the dates before calculating the difference.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of business days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many business days are between\n * // 10 January 2014 and 20 July 2014?\n * var result = differenceInBusinessDays(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 0, 10)\n * )\n * //=> 136\n */\n\nexport default function differenceInBusinessDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  if (!isValid(dateLeft) || !isValid(dateRight)) return new Date(NaN);\n  var calendarDifference = differenceInCalendarDays(dateLeft, dateRight);\n  var sign = calendarDifference < 0 ? -1 : 1;\n  var weeks = toInteger(calendarDifference / 7);\n  var result = weeks * 5;\n  dateRight = addDays(dateRight, weeks * 7); // the loop below will run at most 6 times to account for the remaining days that don't makeup a full week\n\n  while (!isSameDay(dateLeft, dateRight)) {\n    // sign is used to account for both negative and positive differences\n    result += isWeekend(dateRight) ? 0 : sign;\n    dateRight = addDays(dateRight, sign);\n  }\n\n  return result === 0 ? 0 : result;\n}","import getISOWeekYear from '../getISOWeekYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInCalendarISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of calendar ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of calendar ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `differenceInCalendarISOYears` to `differenceInCalendarISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO week-numbering years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar ISO week-numbering years are 1 January 2010 and 1 January 2012?\n * var result = differenceInCalendarISOWeekYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 2\n */\n\nexport default function differenceInCalendarISOWeekYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  return getISOWeekYear(dirtyDateLeft) - getISOWeekYear(dirtyDateRight);\n}","import getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name differenceInCalendarISOWeeks\n * @category ISO Week Helpers\n * @summary Get the number of calendar ISO weeks between the given dates.\n *\n * @description\n * Get the number of calendar ISO weeks between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO weeks\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar ISO weeks are between 6 July 2014 and 21 July 2014?\n * var result = differenceInCalendarISOWeeks(\n *   new Date(2014, 6, 21),\n *   new Date(2014, 6, 6)\n * )\n * //=> 3\n */\n\nexport default function differenceInCalendarISOWeeks(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfISOWeekLeft = startOfISOWeek(dirtyDateLeft);\n  var startOfISOWeekRight = startOfISOWeek(dirtyDateRight);\n  var timestampLeft = startOfISOWeekLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfISOWeekLeft);\n  var timestampRight = startOfISOWeekRight.getTime() - getTimezoneOffsetInMilliseconds(startOfISOWeekRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\n\nexport default function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n  return yearDiff * 12 + monthDiff;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getQuarter\n * @category Quarter Helpers\n * @summary Get the year quarter of the given date.\n *\n * @description\n * Get the year quarter of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which quarter is 2 July 2014?\n * var result = getQuarter(new Date(2014, 6, 2))\n * //=> 3\n */\n\nexport default function getQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var quarter = Math.floor(date.getMonth() / 3) + 1;\n  return quarter;\n}","import getQuarter from '../getQuarter/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInCalendarQuarters\n * @category Quarter Helpers\n * @summary Get the number of calendar quarters between the given dates.\n *\n * @description\n * Get the number of calendar quarters between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar quarters\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar quarters are between 31 December 2013 and 2 July 2014?\n * var result = differenceInCalendarQuarters(\n *   new Date(2014, 6, 2),\n *   new Date(2013, 11, 31)\n * )\n * //=> 3\n */\n\nexport default function differenceInCalendarQuarters(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var quarterDiff = getQuarter(dateLeft) - getQuarter(dateRight);\n  return yearDiff * 4 + quarterDiff;\n}","import startOfWeek from '../startOfWeek/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name differenceInCalendarWeeks\n * @category Week Helpers\n * @summary Get the number of calendar weeks between the given dates.\n *\n * @description\n * Get the number of calendar weeks between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the number of calendar weeks\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // How many calendar weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5)\n * )\n * //=> 3\n *\n * @example\n * // If the week starts on Monday,\n * // how many calendar weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5),\n *   { weekStartsOn: 1 }\n * )\n * //=> 2\n */\n\nexport default function differenceInCalendarWeeks(dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var startOfWeekLeft = startOfWeek(dirtyDateLeft, dirtyOptions);\n  var startOfWeekRight = startOfWeek(dirtyDateRight, dirtyOptions);\n  var timestampLeft = startOfWeekLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfWeekLeft);\n  var timestampRight = startOfWeekRight.getTime() - getTimezoneOffsetInMilliseconds(startOfWeekRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInCalendarYears\n * @category Year Helpers\n * @summary Get the number of calendar years between the given dates.\n *\n * @description\n * Get the number of calendar years between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar years are between 31 December 2013 and 11 February 2015?\n * var result = differenceInCalendarYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * )\n * //=> 2\n */\n\nexport default function differenceInCalendarYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() - dateRight.getFullYear();\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js'; // Like `compareAsc` but uses local time not UTC, which is needed\n// for accurate equality comparisons of UTC timestamps that end up\n// having the same representation in local time, e.g. one hour before\n// DST ends vs. the instant that DST ends.\n\nfunction compareLocalAsc(dateLeft, dateRight) {\n  var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full day periods between two dates. Fractional days are\n * truncated towards zero.\n *\n * One \"full day\" is the distance between a local time in one day to the same\n * local time on the next or previous day. A full day can sometimes be less than\n * or more than 24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 24-hour periods, use this instead:\n * `Math.floor(differenceInHours(dateLeft, dateRight)/24)|0`.\n *\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full days according to the local timezone\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n * // How many full days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 0\n * // How many full days are between\n * // 1 March 2020 0:00 and 1 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 51 days, even in\n * // time zones where DST starts and the\n * // period has only 51*24-1 hours.\n * var result = differenceInDays(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 1)\n * )\n//=> 51\n */\n\n\nexport default function differenceInDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareLocalAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight));\n  dateLeft.setDate(dateLeft.getDate() - sign * difference); // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastDayNotFull = compareLocalAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastDayNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * var result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\n/**\n * @name differenceInHours\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of hours\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * var result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\n\nexport default function differenceInHours(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_HOUR;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addISOWeekYears from '../addISOWeekYears/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Subtract the specified number of ISO week-numbering years from the given date.\n *\n * @description\n * Subtract the specified number of ISO week-numbering years from the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `subISOYears` to `subISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `setWeekYear`.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of ISO week-numbering years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the ISO week-numbering years subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 ISO week-numbering years from 1 September 2014:\n * var result = subISOWeekYears(new Date(2014, 8, 1), 5)\n * //=> Mon Aug 31 2009 00:00:00\n */\n\nexport default function subISOWeekYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addISOWeekYears(dirtyDate, -amount);\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarISOWeekYears from '../differenceInCalendarISOWeekYears/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport subISOWeekYears from '../subISOWeekYears/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInISOWeekYears\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of full ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of full ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `differenceInISOYears` to `differenceInISOWeekYears`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full ISO week-numbering years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?\n * var result = differenceInISOWeekYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 1\n */\n\nexport default function differenceInISOWeekYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarISOWeekYears(dateLeft, dateRight));\n  dateLeft = subISOWeekYears(dateLeft, sign * difference); // Math.abs(diff in full ISO years - diff in calendar ISO years) === 1\n  // if last calendar ISO year is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastISOWeekYearNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastISOWeekYearNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of minutes\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * var result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n *\n * @example\n * // How many minutes are from 10:01:59 to 10:00:00\n * var result = differenceInMinutes(\n *   new Date(2000, 0, 1, 10, 0, 0),\n *   new Date(2000, 0, 1, 10, 1, 59)\n * )\n * //=> -1\n */\n\nexport default function differenceInMinutes(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarMonths from '../differenceInCalendarMonths/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastMonthNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import differenceInMonths from '../differenceInMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInQuarters\n * @category Quarter Helpers\n * @summary Get the number of full quarters between the given dates.\n *\n * @description\n * Get the number of full quarters between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full quarters\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full quarters are between 31 December 2013 and 2 July 2014?\n * var result = differenceInQuarters(new Date(2014, 6, 2), new Date(2013, 11, 31))\n * //=> 2\n */\n\nexport default function differenceInQuarters(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMonths(dirtyDateLeft, dirtyDateRight) / 3;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * var result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import differenceInDays from '../differenceInDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInWeeks\n * @category Week Helpers\n * @summary Get the number of full weeks between the given dates.\n *\n * @description\n * Get the number of full weeks between two dates. Fractional weeks are\n * truncated towards zero.\n *\n * One \"full week\" is the distance between a local time in one day to the same\n * local time 7 days earlier or later. A full week can sometimes be less than\n * or more than 7*24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 7*24-hour periods, use this instead:\n * `Math.floor(differenceInHours(dateLeft, dateRight)/(7*24))|0`.\n *\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full weeks\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInWeeks(new Date(2014, 6, 20), new Date(2014, 6, 5))\n * //=> 2\n *\n * // How many full weeks are between\n * // 1 March 2020 0:00 and 6 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 8 weeks (54 days),\n * // even if DST starts and the period has\n * // only 54*24-1 hours.\n * var result = differenceInWeeks(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 6)\n * )\n * //=> 8\n */\n\nexport default function differenceInWeeks(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInDays(dirtyDateLeft, dirtyDateRight) / 7;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarYears from '../differenceInCalendarYears/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInYears\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * var result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))\n * //=> 1\n */\n\nexport default function differenceInYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarYears(dateLeft, dateRight)); // Set both dates to a valid leap year for accurate comparison when dealing\n  // with leap days\n\n  dateLeft.setFullYear('1584');\n  dateRight.setFullYear('1584'); // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastYearNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastYearNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `eachDay` to `eachDayOfInterval`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   eachDay(new Date(2014, 0, 10), new Date(2014, 0, 20))\n *\n *   // v2.0.0 onward\n *\n *   eachDayOfInterval(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) }\n *   )\n *   ```\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * var result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\n\nexport default function eachDayOfInterval(dirtyInterval, options) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  var step = options && 'step' in options ? Number(options.step) : 1;\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n\n  return dates;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachMonthOfInterval\n * @category Interval Helpers\n * @summary Return the array of months within the specified time interval.\n *\n * @description\n * Return the array of months within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @returns {Date[]} the array with starts of months from the month of the interval start to the month of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each month between 6 February 2014 and 10 August 2014:\n * var result = eachMonthOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2014, 7, 10)\n * })\n * //=> [\n * //   Sat Feb 01 2014 00:00:00,\n * //   Sat Mar 01 2014 00:00:00,\n * //   Tue Apr 01 2014 00:00:00,\n * //   Thu May 01 2014 00:00:00,\n * //   Sun Jun 01 2014 00:00:00,\n * //   Tue Jul 01 2014 00:00:00,\n * //   Fri Aug 01 2014 00:00:00\n * // ]\n */\n\nexport default function eachMonthOfInterval(dirtyInterval) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  currentDate.setDate(1);\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setMonth(currentDate.getMonth() + 1);\n  }\n\n  return dates;\n}","import addWeeks from '../addWeeks/index.js';\nimport startOfWeek from '../startOfWeek/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachWeekOfInterval\n * @category Interval Helpers\n * @summary Return the array of weeks within the specified time interval.\n *\n * @description\n * Return the array of weeks within the specified time interval.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date[]} the array with starts of weeks from the week of the interval start to the week of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be 0, 1, ..., 6\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each week within interval 6 October 2014 - 23 November 2014:\n * var result = eachWeekOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 10, 23)\n * })\n * //=> [\n * //   Sun Oct 05 2014 00:00:00,\n * //   Sun Oct 12 2014 00:00:00,\n * //   Sun Oct 19 2014 00:00:00,\n * //   Sun Oct 26 2014 00:00:00,\n * //   Sun Nov 02 2014 00:00:00,\n * //   Sun Nov 09 2014 00:00:00,\n * //   Sun Nov 16 2014 00:00:00,\n * //   Sun Nov 23 2014 00:00:00\n * // ]\n */\n\nexport default function eachWeekOfInterval(dirtyInterval, options) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var startDateWeek = startOfWeek(startDate, options);\n  var endDateWeek = startOfWeek(endDate, options); // Some timezones switch DST at midnight, making start of day unreliable in these timezones, 3pm is a safe bet\n\n  startDateWeek.setHours(15);\n  endDateWeek.setHours(15);\n  endTime = endDateWeek.getTime();\n  var weeks = [];\n  var currentWeek = startDateWeek;\n\n  while (currentWeek.getTime() <= endTime) {\n    currentWeek.setHours(0);\n    weeks.push(toDate(currentWeek));\n    currentWeek = addWeeks(currentWeek, 1);\n    currentWeek.setHours(15);\n  }\n\n  return weeks;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSunday\n * @category Weekday Helpers\n * @summary Is the given date Sunday?\n *\n * @description\n * Is the given date Sunday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Sunday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 21 September 2014 Sunday?\n * var result = isSunday(new Date(2014, 8, 21))\n * //=> true\n */\n\nexport default function isSunday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 0;\n}","import eachDayOfInterval from '../eachDayOfInterval/index.js';\nimport isSunday from '../isSunday/index.js';\nimport isWeekend from '../isWeekend/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachWeekendOfInterval\n * @category Interval Helpers\n * @summary List all the Saturdays and Sundays in the given date interval.\n *\n * @description\n * Get all the Saturdays and Sundays in the given date interval.\n *\n * @param {Interval} interval - the given interval. See [Interval]{@link docs/types/Interval}\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Lists all Saturdays and Sundays in the given date interval\n * var result = eachWeekendOfInterval({\n *   start: new Date(2018, 8, 17),\n *   end: new Date(2018, 8, 30)\n * })\n * //=> [\n * //   Sat Sep 22 2018 00:00:00,\n * //   Sun Sep 23 2018 00:00:00,\n * //   Sat Sep 29 2018 00:00:00,\n * //   Sun Sep 30 2018 00:00:00\n * // ]\n */\n\nexport default function eachWeekendOfInterval(interval) {\n  requiredArgs(1, arguments);\n  var dateInterval = eachDayOfInterval(interval);\n  var weekends = [];\n  var index = 0;\n\n  while (index < dateInterval.length) {\n    var date = dateInterval[index++];\n\n    if (isWeekend(date)) {\n      weekends.push(date);\n      if (isSunday(date)) index = index + 5;\n    }\n  }\n\n  return weekends;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * var result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * var result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import eachWeekendOfInterval from '../eachWeekendOfInterval/index.js';\nimport startOfMonth from '../startOfMonth/index.js';\nimport endOfMonth from '../endOfMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachWeekendOfMonth\n * @category Month Helpers\n * @summary List all the Saturdays and Sundays in the given month.\n *\n * @description\n * Get all the Saturdays and Sundays in the given month.\n *\n * @param {Date|Number} date - the given month\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The passed date is invalid\n *\n * @example\n * // Lists all Saturdays and Sundays in the given month\n * var result = eachWeekendOfMonth(new Date(2022, 1, 1))\n * //=> [\n * //   Sat Feb 05 2022 00:00:00,\n * //   Sun Feb 06 2022 00:00:00,\n * //   Sat Feb 12 2022 00:00:00,\n * //   Sun Feb 13 2022 00:00:00,\n * //   Sat Feb 19 2022 00:00:00,\n * //   Sun Feb 20 2022 00:00:00,\n * //   Sat Feb 26 2022 00:00:00,\n * //   Sun Feb 27 2022 00:00:00\n * // ]\n */\n\nexport default function eachWeekendOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var startDate = startOfMonth(dirtyDate);\n  if (isNaN(startDate)) throw new RangeError('The passed date is invalid');\n  var endDate = endOfMonth(dirtyDate);\n  return eachWeekendOfInterval({\n    start: startDate,\n    end: endDate\n  });\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * var result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\n\nexport default function startOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var cleanDate = toDate(dirtyDate);\n  var date = new Date(0);\n  date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfYear\n * @category Year Helpers\n * @summary Return the end of a year for the given date.\n *\n * @description\n * Return the end of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a year for 2 September 2014 11:55:00:\n * var result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 23:59:59.999\n */\n\nexport default function endOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  date.setFullYear(year + 1, 0, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import eachWeekendOfInterval from '../eachWeekendOfInterval/index.js';\nimport startOfYear from '../startOfYear/index.js';\nimport endOfYear from '../endOfYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachWeekendOfYear\n * @category Year Helpers\n * @summary List all the Saturdays and Sundays in the year.\n *\n * @description\n * Get all the Saturdays and Sundays in the year.\n *\n * @param {Date|Number} date - the given year\n * @returns {Date[]} an array containing all the Saturdays and Sundays\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The passed date is invalid\n *\n * @example\n * // Lists all Saturdays and Sundays in the year\n * var result = eachWeekendOfYear(new Date(2020, 1, 1))\n * //=> [\n * //   Sat Jan 03 2020 00:00:00,\n * //   Sun Jan 04 2020 00:00:00,\n * //   ...\n * //   Sun Dec 27 2020 00:00:00\n * // ]\n * ]\n */\n\nexport default function eachWeekendOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var startDate = startOfYear(dirtyDate);\n  if (isNaN(startDate)) throw new RangeError('The passed date is invalid');\n  var endDate = endOfYear(dirtyDate);\n  return eachWeekendOfInterval({\n    start: startDate,\n    end: endDate\n  });\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachYearOfInterval\n * @category Interval Helpers\n * @summary Return the array of yearly timestamps within the specified time interval.\n *\n * @description\n * Return the array of yearly timestamps within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @returns {Date[]} the array with starts of yearly timestamps from the month of the interval start to the month of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each year between 6 February 2014 and 10 August 2017:\n * var result = eachYearOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2017, 7, 10)\n * })\n * //=> [\n * //   Wed Jan 01 2014 00:00:00,\n * //   Thu Jan 01 2015 00:00:00,\n * //   Fri Jan 01 2016 00:00:00,\n * //   Sun Jan 01 2017 00:00:00\n * // ]\n */\n\nexport default function eachYearOfInterval(dirtyInterval) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  currentDate.setMonth(0, 1);\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setFullYear(currentDate.getFullYear() + 1);\n  }\n\n  return dates;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * var result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\n\nexport default function endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfDecade\n * @category Decade Helpers\n * @summary Return the end of a decade for the given date.\n *\n * @description\n * Return the end of a decade for the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a decade\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // The end of a decade for 12 May 1984 00:00:00:\n * var result = endOfDecade(new Date(1984, 4, 12, 00, 00, 00))\n * //=> Dec 31 1989 23:59:59.999\n */\n\nexport default function endOfDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = 9 + Math.floor(year / 10) * 10;\n  date.setFullYear(decade, 11, 31);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfHour\n * @category Hour Helpers\n * @summary Return the end of an hour for the given date.\n *\n * @description\n * Return the end of an hour for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an hour for 2 September 2014 11:55:00:\n * var result = endOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:59:59.999\n */\n\nexport default function endOfHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMinutes(59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\n\nexport default function endOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import endOfWeek from '../endOfWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the end of an ISO week for the given date.\n *\n * @description\n * Return the end of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an ISO week for 2 September 2014 11:55:00:\n * var result = endOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 23:59:59.999\n */\n\nexport default function endOfISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return endOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}","import getISOWeekYear from '../getISOWeekYear/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the end of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the end of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `endOfISOYear` to `endOfISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of an ISO week-numbering year for 2 July 2005:\n * var result = endOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 23:59:59.999\n */\n\nexport default function endOfISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuaryOfNextYear);\n  date.setMilliseconds(date.getMilliseconds() - 1);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfMinute\n * @category Minute Helpers\n * @summary Return the end of a minute for the given date.\n *\n * @description\n * Return the end of a minute for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a minute for 1 December 2014 22:15:45.400:\n * var result = endOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:59.999\n */\n\nexport default function endOfMinute(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setSeconds(59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfQuarter\n * @category Quarter Helpers\n * @summary Return the end of a year quarter for the given date.\n *\n * @description\n * Return the end of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a quarter for 2 September 2014 11:55:00:\n * var result = endOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3 + 3;\n  date.setMonth(month, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfSecond\n * @category Second Helpers\n * @summary Return the end of a second for the given date.\n *\n * @description\n * Return the end of a second for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a second for 1 December 2014 22:15:45.400:\n * var result = endOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.999\n */\n\nexport default function endOfSecond(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMilliseconds(999);\n  return date;\n}","import endOfDay from '../endOfDay/index.js';\n/**\n * @name endOfToday\n * @category Day Helpers\n * @summary Return the end of today.\n * @pure false\n *\n * @description\n * Return the end of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the end of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfToday()\n * //=> Mon Oct 6 2014 23:59:59.999\n */\n\nexport default function endOfToday() {\n  return endOfDay(Date.now());\n}","/**\n * @name endOfTomorrow\n * @category Day Helpers\n * @summary Return the end of tomorrow.\n * @pure false\n *\n * @description\n * Return the end of tomorrow.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the end of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfTomorrow()\n * //=> Tue Oct 7 2014 23:59:59.999\n */\nexport default function endOfTomorrow() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day + 1);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","/**\n * @name endOfYesterday\n * @category Day Helpers\n * @summary Return the end of yesterday.\n * @pure false\n *\n * @description\n * Return the end of yesterday.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the end of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfYesterday()\n * //=> Sun Oct 5 2014 23:59:59.999\n */\nexport default function endOfYesterday() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day - 1);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import assign from '../assign/index.js';\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","import compareAsc from '../compareAsc/index.js';\nimport differenceInMonths from '../differenceInMonths/index.js';\nimport differenceInSeconds from '../differenceInSeconds/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport toDate from '../toDate/index.js';\nimport cloneObject from '../_lib/cloneObject/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * var result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport toDate from '../toDate/index.js';\nimport differenceInSeconds from '../differenceInSeconds/index.js';\nimport cloneObject from '../_lib/cloneObject/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_YEAR = 525600;\n/**\n * @name formatDistanceStrict\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWordsStrict` to `formatDistanceStrict`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(2015, 0, 2),\n *     new Date(2014, 6, 2)\n *   ) //=> '6 months'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(2014, 6, 2),\n *     new Date(2015, 0, 2)\n *   ) //=> '6 months'\n *   ```\n *\n * - `partialMethod` option is renamed to `roundingMethod`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     { partialMethod: 'ceil' }\n *   ) //=> '2 minutes'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { roundingMethod: 'ceil' }\n *   ) //=> '2 minutes'\n *   ```\n *\n * - If `roundingMethod` is not specified, it now defaults to `round` instead of `floor`.\n *\n * - `unit` option now accepts one of the strings:\n *   'second', 'minute', 'hour', 'day', 'month' or 'year' instead of 's', 'm', 'h', 'd', 'M' or 'Y'\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsStrict(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     { unit: 'm' }\n *   )\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceStrict(\n *     new Date(1986, 3, 4, 10, 33, 1),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { unit: 'minute' }\n *   )\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.roundingMethod` must be 'floor', 'ceil' or 'round'\n * @throws {RangeError} `options.unit` must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = formatDistanceStrict(new Date(2014, 6, 2), new Date(2015, 0, 2))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00?\n * var result = formatDistanceStrict(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0)\n * )\n * //=> '15 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = formatDistanceStrict(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> '1 year ago'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, in minutes?\n * var result = formatDistanceStrict(new Date(2016, 0, 1), new Date(2015, 0, 1), {\n *   unit: 'minute'\n * })\n * //=> '525600 minutes'\n *\n * @example\n * // What is the distance from 1 January 2015\n * // to 28 January 2015, in months, rounded up?\n * var result = formatDistanceStrict(new Date(2015, 0, 28), new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = formatDistanceStrict(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> '1 jaro'\n */\n\nexport default function formatDistanceStrict(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain localize.formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var roundingMethod = options.roundingMethod == null ? 'round' : String(options.roundingMethod);\n  var roundingMethodFn;\n\n  if (roundingMethod === 'floor') {\n    roundingMethodFn = Math.floor;\n  } else if (roundingMethod === 'ceil') {\n    roundingMethodFn = Math.ceil;\n  } else if (roundingMethod === 'round') {\n    roundingMethodFn = Math.round;\n  } else {\n    throw new RangeError(\"roundingMethod must be 'floor', 'ceil' or 'round'\");\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = roundingMethodFn((seconds - offsetInSeconds) / 60);\n  var unit;\n\n  if (options.unit == null) {\n    if (minutes < 1) {\n      unit = 'second';\n    } else if (minutes < 60) {\n      unit = 'minute';\n    } else if (minutes < MINUTES_IN_DAY) {\n      unit = 'hour';\n    } else if (minutes < MINUTES_IN_MONTH) {\n      unit = 'day';\n    } else if (minutes < MINUTES_IN_YEAR) {\n      unit = 'month';\n    } else {\n      unit = 'year';\n    }\n  } else {\n    unit = String(options.unit);\n  } // 0 up to 60 seconds\n\n\n  if (unit === 'second') {\n    return locale.formatDistance('xSeconds', seconds, localizeOptions); // 1 up to 60 mins\n  } else if (unit === 'minute') {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 1 up to 24 hours\n  } else if (unit === 'hour') {\n    var hours = roundingMethodFn(minutes / 60);\n    return locale.formatDistance('xHours', hours, localizeOptions); // 1 up to 30 days\n  } else if (unit === 'day') {\n    var days = roundingMethodFn(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 up to 12 months\n  } else if (unit === 'month') {\n    var months = roundingMethodFn(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', months, localizeOptions); // 1 year up to max Date\n  } else if (unit === 'year') {\n    var years = roundingMethodFn(minutes / MINUTES_IN_YEAR);\n    return locale.formatDistance('xYears', years, localizeOptions);\n  }\n\n  throw new RangeError(\"unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\");\n}","import distanceInWords from '../formatDistance/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWordsToNow ` to `formatDistanceToNow`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsToNow(new Date(2014, 6, 2), { addSuffix: true })\n *   //=> 'in 6 months'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceToNow(new Date(2014, 6, 2), { addSuffix: true })\n *   //=> 'in 6 months'\n *   ```\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result specifies if now is earlier or later than the passed date\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistanceToNow(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  return distanceInWords(dirtyDate, Date.now(), dirtyOptions);\n}","import distanceInStrictWords from '../formatDistanceStrict/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name formatDistanceToNowStrict\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `formatDistance`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = formatDistanceToNowStrict(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = formatDistanceToNowStrict(\n *   new Date(2015, 0, 1, 0, 0, 15)\n * )\n * //=> '20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = formatDistanceToNowStrict(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in 1 year'\n *\n * @example\n * // If today is 28 January 2015,\n * // what is the distance to 1 January 2015, in months, rounded up??\n * var result = formatDistanceToNowStrict(new Date(2015, 0, 1), {\n *   unit: 'month',\n *   roundingMethod: 'ceil'\n * })\n * //=> '1 month'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = formatDistanceToNowStrict(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> '1 jaro'\n */\n\nexport default function formatDistanceToNowStrict(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  return distanceInStrictWords(dirtyDate, Date.now(), dirtyOptions);\n}","import toDate from '../toDate/index.js';\nimport isValid from '../isValid/index.js';\nimport addLeadingZeros from '../_lib/addLeadingZeros/index.js';\n/**\n * @name formatISO\n * @category Common Helpers\n * @summary Format the date according to the ISO 8601 standard (http://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).\n *\n * @description\n * Return the formatted date string in ISO 8601 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.\n * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time with time zone, or both.\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.format` must be 'extended' or 'basic'\n * @throws {RangeError} `options.represenation` must be 'date', 'time' or 'complete'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format (UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18T19:00:52Z'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601, short format (UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n * //=> '20190918T190052'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, date only:\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n * //=> '2019-09-18'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, time only (UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n * //=> '19:00:52Z'\n */\n\nexport default function formatISO(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 argument required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var options = dirtyOptions || {};\n  var format = options.format == null ? 'extended' : String(options.format);\n  var representation = options.representation == null ? 'complete' : String(options.representation);\n\n  if (format !== 'extended' && format !== 'basic') {\n    throw new RangeError(\"format must be 'extended' or 'basic'\");\n  }\n\n  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {\n    throw new RangeError(\"representation must be 'date', 'time', or 'complete'\");\n  }\n\n  var result = '';\n  var tzOffset = '';\n  var dateDelimiter = format === 'extended' ? '-' : '';\n  var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'\n\n  if (representation !== 'time') {\n    var day = addLeadingZeros(originalDate.getDate(), 2);\n    var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n    var year = addLeadingZeros(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.\n\n    result = \"\".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);\n  } // Representation is either 'time' or 'complete'\n\n\n  if (representation !== 'date') {\n    // Add the timezone.\n    var offset = originalDate.getTimezoneOffset();\n\n    if (offset !== 0) {\n      var absoluteOffset = Math.abs(offset);\n      var hourOffset = addLeadingZeros(Math.floor(absoluteOffset / 60), 2);\n      var minuteOffset = addLeadingZeros(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.\n\n      var sign = offset < 0 ? '+' : '-';\n      tzOffset = \"\".concat(sign).concat(hourOffset, \":\").concat(minuteOffset);\n    } else {\n      tzOffset = 'Z';\n    }\n\n    var hour = addLeadingZeros(originalDate.getHours(), 2);\n    var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n    var second = addLeadingZeros(originalDate.getSeconds(), 2); // If there's also date, separate it with time with 'T'\n\n    var separator = result === '' ? '' : 'T'; // Creates a time string consisting of hour, minute, and second, separated by delimiters, if defined.\n\n    var time = [hour, minute, second].join(timeDelimiter); // HHmmss or HH:mm:ss.\n\n    result = \"\".concat(result).concat(separator).concat(time).concat(tzOffset);\n  }\n\n  return result;\n}","import toDate from '../toDate/index.js';\nimport isValid from '../isValid/index.js';\nimport addLeadingZeros from '../_lib/addLeadingZeros/index.js';\n/**\n * @name formatISO9075\n * @category Common Helpers\n * @summary Format the date according to the ISO 9075 standard (https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_get-format).\n *\n * @description\n * Return the formatted date string in ISO 9075 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.\n * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time, or both.\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.format` must be 'extended' or 'basic'\n * @throws {RangeError} `options.represenation` must be 'date', 'time' or 'complete'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18 19:00:52'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075, short format:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n * //=> '20190918 190052'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format, date only:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n * //=> '2019-09-18'\n *\n * @example\n * // Represent 18 September 2019 in ISO 9075 format, time only:\n * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n * //=> '19:00:52'\n */\n\nexport default function formatISO9075(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 argument required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var options = dirtyOptions || {};\n  var format = options.format == null ? 'extended' : String(options.format);\n  var representation = options.representation == null ? 'complete' : String(options.representation);\n\n  if (format !== 'extended' && format !== 'basic') {\n    throw new RangeError(\"format must be 'extended' or 'basic'\");\n  }\n\n  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {\n    throw new RangeError(\"representation must be 'date', 'time', or 'complete'\");\n  }\n\n  var result = '';\n  var dateDelimiter = format === 'extended' ? '-' : '';\n  var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'\n\n  if (representation !== 'time') {\n    var day = addLeadingZeros(originalDate.getDate(), 2);\n    var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n    var year = addLeadingZeros(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.\n\n    result = \"\".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);\n  } // Representation is either 'time' or 'complete'\n\n\n  if (representation !== 'date') {\n    var hour = addLeadingZeros(originalDate.getHours(), 2);\n    var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n    var second = addLeadingZeros(originalDate.getSeconds(), 2); // If there's also date, separate it with time with a space\n\n    var separator = result === '' ? '' : ' '; // HHmmss or HH:mm:ss.\n\n    result = \"\".concat(result).concat(separator).concat(hour).concat(timeDelimiter).concat(minute).concat(timeDelimiter).concat(second);\n  }\n\n  return result;\n}","import requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name formatISODuration\n * @category Common Helpers\n * @summary Format a Duration Object according to ISO 8601 Duration standards (https://www.digi.com/resources/documentation/digidocs/90001437-13/reference/r_iso_8601_duration_format.htm)\n *\n * @param {Duration} duration\n *\n * @returns {String} The ISO 8601 Duration string\n * @throws {TypeError} Requires 1 argument\n * @throws {Error} Argument must be an object\n *\n * @example\n * // Get the ISO 8601 Duration between January 15, 1929 and April 4, 1968.\n * const result = formatISODuration({ years: 39, months: 2, days: 20, hours: 7, minutes: 5, seconds: 0 })\n * // => 'P39Y2M20DT0H0M0S'\n */\n\nexport default function formatISODuration(duration) {\n  requiredArgs(1, arguments);\n  if (typeof duration !== 'object') throw new Error('Duration must be an object');\n  var _duration$years = duration.years,\n      years = _duration$years === void 0 ? 0 : _duration$years,\n      _duration$months = duration.months,\n      months = _duration$months === void 0 ? 0 : _duration$months,\n      _duration$days = duration.days,\n      days = _duration$days === void 0 ? 0 : _duration$days,\n      _duration$hours = duration.hours,\n      hours = _duration$hours === void 0 ? 0 : _duration$hours,\n      _duration$minutes = duration.minutes,\n      minutes = _duration$minutes === void 0 ? 0 : _duration$minutes,\n      _duration$seconds = duration.seconds,\n      seconds = _duration$seconds === void 0 ? 0 : _duration$seconds;\n  return \"P\".concat(years, \"Y\").concat(months, \"M\").concat(days, \"DT\").concat(hours, \"H\").concat(minutes, \"M\").concat(seconds, \"S\");\n}","import toDate from '../toDate/index.js';\nimport isValid from '../isValid/index.js';\nimport addLeadingZeros from '../_lib/addLeadingZeros/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name formatRFC3339\n * @category Common Helpers\n * @summary Format the date according to the ISO 3339 standard (https://tools.ietf.org/html/rfc3339#section-5.6).\n *\n * @description\n * Return the formatted date string in ISO 3339 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {0|1|2|3} [options.fractionDigits=0] - number of digits after the decimal point after seconds\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.fractionDigits` must be between 0 and 3\n *\n * @example\n * // Represent 18 September 2019 in ISO 3339 format:\n * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18T19:00:52Z'\n *\n * @example\n * // Represent 18 September 2019 in ISO 3339 format, 2 digits of second fraction:\n * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), { fractionDigits: 2 })\n * //=> '2019-09-18T19:00:52.23Z'\n *\n * @example\n * // Represent 18 September 2019 in ISO 3339 format, 3 digits of second fraction\n * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), { fractionDigits: 3 })\n * //=> '2019-09-18T19:00:52.234Z'\n */\n\nexport default function formatRFC3339(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 arguments required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var options = dirtyOptions || {};\n  var fractionDigits = options.fractionDigits == null ? 0 : toInteger(options.fractionDigits); // Test if fractionDigits is between 0 and 3 _and_ is not NaN\n\n  if (!(fractionDigits >= 0 && fractionDigits <= 3)) {\n    throw new RangeError('fractionDigits must be between 0 and 3 inclusively');\n  }\n\n  var day = addLeadingZeros(originalDate.getDate(), 2);\n  var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n  var year = originalDate.getFullYear();\n  var hour = addLeadingZeros(originalDate.getHours(), 2);\n  var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n  var second = addLeadingZeros(originalDate.getSeconds(), 2);\n  var fractionalSecond = '';\n\n  if (fractionDigits > 0) {\n    var milliseconds = originalDate.getMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, fractionDigits - 3));\n    fractionalSecond = '.' + addLeadingZeros(fractionalSeconds, fractionDigits);\n  }\n\n  var offset = '';\n  var tzOffset = originalDate.getTimezoneOffset();\n\n  if (tzOffset !== 0) {\n    var absoluteOffset = Math.abs(tzOffset);\n    var hourOffset = addLeadingZeros(absoluteOffset / 60, 2);\n    var minuteOffset = addLeadingZeros(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.\n\n    var sign = tzOffset < 0 ? '+' : '-';\n    offset = \"\".concat(sign).concat(hourOffset, \":\").concat(minuteOffset);\n  } else {\n    offset = 'Z';\n  }\n\n  return \"\".concat(year, \"-\").concat(month, \"-\").concat(day, \"T\").concat(hour, \":\").concat(minute, \":\").concat(second).concat(fractionalSecond).concat(offset);\n}","import toDate from '../toDate/index.js';\nimport isValid from '../isValid/index.js';\nimport addLeadingZeros from '../_lib/addLeadingZeros/index.js';\nvar days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n/**\n * @name formatRFC7231\n * @category Common Helpers\n * @summary Format the date according to the RFC 7231 standard (https://tools.ietf.org/html/rfc7231#section-7.1.1.1).\n *\n * @description\n * Return the formatted date string in RFC 7231 format.\n * The result will always be in UTC timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {String} the formatted date string\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n *\n * @example\n * // Represent 18 September 2019 in RFC 7231 format:\n * const result = formatRFC7231(new Date(2019, 8, 18, 19, 0, 52))\n * //=> 'Wed, 18 Sep 2019 19:00:52 GMT'\n */\n\nexport default function formatRFC7231(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError(\"1 arguments required, but only \".concat(arguments.length, \" present\"));\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var dayName = days[originalDate.getUTCDay()];\n  var dayOfMonth = addLeadingZeros(originalDate.getUTCDate(), 2);\n  var monthName = months[originalDate.getUTCMonth()];\n  var year = originalDate.getUTCFullYear();\n  var hour = addLeadingZeros(originalDate.getUTCHours(), 2);\n  var minute = addLeadingZeros(originalDate.getUTCMinutes(), 2);\n  var second = addLeadingZeros(originalDate.getUTCSeconds(), 2); // Result variables.\n\n  return \"\".concat(dayName, \", \").concat(dayOfMonth, \" \").concat(monthName, \" \").concat(year, \" \").concat(hour, \":\").concat(minute, \":\").concat(second, \" GMT\");\n}","import differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport format from '../format/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name formatRelative\n * @category Common Helpers\n * @summary Represent the date in words relative to the given base date.\n *\n * @description\n * Represent the date in words relative to the given base date.\n *\n * | Distance to the base date | Result                    |\n * |---------------------------|---------------------------|\n * | Previous 6 days           | last Sunday at 04:30 AM   |\n * | Last day                  | yesterday at 04:30 AM     |\n * | Same day                  | today at 04:30 AM         |\n * | Next day                  | tomorrow at 04:30 AM      |\n * | Next 6 days               | Sunday at 04:30 AM        |\n * | Other                     | 12/31/2017                |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to format\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {String} the date in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.locale` must contain `formatRelative` property\n */\n\nexport default function formatRelative(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var baseDate = toDate(dirtyBaseDate);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  if (!locale.formatRelative) {\n    throw new RangeError('locale must contain formatRelative property');\n  }\n\n  var diff = differenceInCalendarDays(date, baseDate);\n\n  if (isNaN(diff)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var token;\n\n  if (diff < -6) {\n    token = 'other';\n  } else if (diff < -1) {\n    token = 'lastWeek';\n  } else if (diff < 0) {\n    token = 'yesterday';\n  } else if (diff < 1) {\n    token = 'today';\n  } else if (diff < 2) {\n    token = 'tomorrow';\n  } else if (diff < 7) {\n    token = 'nextWeek';\n  } else {\n    token = 'other';\n  }\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var utcBaseDate = subMilliseconds(baseDate, getTimezoneOffsetInMilliseconds(baseDate));\n  var formatStr = locale.formatRelative(token, utcDate, utcBaseDate, options);\n  return format(date, formatStr, options);\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name fromUnixTime\n * @category Timestamp Helpers\n * @summary Create a date from a Unix timestamp.\n *\n * @description\n * Create a date from a Unix timestamp.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Number} unixTime - the given Unix timestamp\n * @returns {Date} the date\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Create the date 29 February 2012 11:45:05:\n * var result = fromUnixTime(1330515905)\n * //=> Wed Feb 29 2012 11:45:05\n */\n\nexport default function fromUnixTime(dirtyUnixTime) {\n  requiredArgs(1, arguments);\n  var unixTime = toInteger(dirtyUnixTime);\n  return toDate(unixTime * 1000);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDate\n * @category Day Helpers\n * @summary Get the day of the month of the given date.\n *\n * @description\n * Get the day of the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the month is 29 February 2012?\n * var result = getDate(new Date(2012, 1, 29))\n * //=> 29\n */\n\nexport default function getDate(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfMonth = date.getDate();\n  return dayOfMonth;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDay\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {0|1|2|3|4|5|6} the day of week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * var result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\n\nexport default function getDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  return day;\n}","import toDate from '../toDate/index.js';\nimport startOfYear from '../startOfYear/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * var result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\n\nexport default function getDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = differenceInCalendarDays(date, startOfYear(date));\n  var dayOfYear = diff + 1;\n  return dayOfYear;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isLeapYear\n * @category Year Helpers\n * @summary Is the given date in the leap year?\n *\n * @description\n * Is the given date in the leap year?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the leap year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 1 September 2012 in the leap year?\n * var result = isLeapYear(new Date(2012, 8, 1))\n * //=> true\n */\n\nexport default function isLeapYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}","import toDate from '../toDate/index.js';\nimport isLeapYear from '../isLeapYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDaysInYear\n * @category Year Helpers\n * @summary Get the number of days in a year of the given date.\n *\n * @description\n * Get the number of days in a year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of days in a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many days are in 2012?\n * var result = getDaysInYear(new Date(2012, 0, 1))\n * //=> 366\n */\n\nexport default function getDaysInYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n\n  if (isNaN(date)) {\n    return NaN;\n  }\n\n  return isLeapYear(date) ? 366 : 365;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDecade\n * @category Decade Helpers\n * @summary Get the decade of the given date.\n *\n * @description\n * Get the decade of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year of decade\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which decade belongs 27 November 1942?\n * var result = getDecade(new Date(1942, 10, 27))\n * //=> 1940\n */\n\nexport default function getDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = Math.floor(year / 10) * 10;\n  return decade;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getHours\n * @category Hour Helpers\n * @summary Get the hours of the given date.\n *\n * @description\n * Get the hours of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the hours\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the hours of 29 February 2012 11:45:00:\n * var result = getHours(new Date(2012, 1, 29, 11, 45))\n * //=> 11\n */\n\nexport default function getHours(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var hours = date.getHours();\n  return hours;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getISODay\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * var result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\n\nexport default function getISODay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n\n  if (day === 0) {\n    day = 7;\n  }\n\n  return day;\n}","import toDate from '../toDate/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport startOfISOWeekYear from '../startOfISOWeekYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * var result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\n\nexport default function getISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfISOWeek(date).getTime() - startOfISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import startOfISOWeekYear from '../startOfISOWeekYear/index.js';\nimport addWeeks from '../addWeeks/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getISOWeeksInYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * @description\n * Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of ISO weeks in a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many weeks are in ISO week-numbering year 2015?\n * var result = getISOWeeksInYear(new Date(2015, 1, 11))\n * //=> 53\n */\n\nexport default function getISOWeeksInYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var thisYear = startOfISOWeekYear(dirtyDate);\n  var nextYear = startOfISOWeekYear(addWeeks(thisYear, 60));\n  var diff = nextYear.valueOf() - thisYear.valueOf(); // Round the number of weeks to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getMilliseconds\n * @category Millisecond Helpers\n * @summary Get the milliseconds of the given date.\n *\n * @description\n * Get the milliseconds of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the milliseconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the milliseconds of 29 February 2012 11:45:05.123:\n * var result = getMilliseconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 123\n */\n\nexport default function getMilliseconds(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var milliseconds = date.getMilliseconds();\n  return milliseconds;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getMinutes\n * @category Minute Helpers\n * @summary Get the minutes of the given date.\n *\n * @description\n * Get the minutes of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the minutes\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the minutes of 29 February 2012 11:45:05:\n * var result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 45\n */\n\nexport default function getMinutes(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var minutes = date.getMinutes();\n  return minutes;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getMonth\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which month is 29 February 2012?\n * var result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\n\nexport default function getMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  return month;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 24 * 60 * 60 * 1000;\n/**\n * @name getOverlappingDaysInIntervals\n * @category Interval Helpers\n * @summary Get the number of days that overlap in two time intervals\n *\n * @description\n * Get the number of days that overlap in two time intervals\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `getOverlappingDaysInRanges` to `getOverlappingDaysInIntervals`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   getOverlappingDaysInRanges(\n *     new Date(2014, 0, 10), new Date(2014, 0, 20),\n *     new Date(2014, 0, 17), new Date(2014, 0, 21)\n *   )\n *\n *   // v2.0.0 onward\n *\n *   getOverlappingDaysInIntervals(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *     { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n *   )\n *   ```\n *\n * @param {Interval} intervalLeft - the first interval to compare. See [Interval]{@link docs/Interval}\n * @param {Interval} intervalRight - the second interval to compare. See [Interval]{@link docs/Interval}\n * @returns {Number} the number of days that overlap in two time intervals\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For overlapping time intervals adds 1 for each started overlapping day:\n * getOverlappingDaysInIntervals(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }\n * )\n * //=> 3\n *\n * @example\n * // For non-overlapping time intervals returns 0:\n * getOverlappingDaysInIntervals(\n *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },\n *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }\n * )\n * //=> 0\n */\n\nexport default function getOverlappingDaysInIntervals(dirtyIntervalLeft, dirtyIntervalRight) {\n  requiredArgs(2, arguments);\n  var intervalLeft = dirtyIntervalLeft || {};\n  var intervalRight = dirtyIntervalRight || {};\n  var leftStartTime = toDate(intervalLeft.start).getTime();\n  var leftEndTime = toDate(intervalLeft.end).getTime();\n  var rightStartTime = toDate(intervalRight.start).getTime();\n  var rightEndTime = toDate(intervalRight.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var isOverlapping = leftStartTime < rightEndTime && rightStartTime < leftEndTime;\n\n  if (!isOverlapping) {\n    return 0;\n  }\n\n  var overlapStartDate = rightStartTime < leftStartTime ? leftStartTime : rightStartTime;\n  var overlapEndDate = rightEndTime > leftEndTime ? leftEndTime : rightEndTime;\n  var differenceInMs = overlapEndDate - overlapStartDate;\n  return Math.ceil(differenceInMs / MILLISECONDS_IN_DAY);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getSeconds\n * @category Second Helpers\n * @summary Get the seconds of the given date.\n *\n * @description\n * Get the seconds of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the seconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the seconds of 29 February 2012 11:45:05.123:\n * var result = getSeconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 5\n */\n\nexport default function getSeconds(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var seconds = date.getSeconds();\n  return seconds;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getTime\n * @category Timestamp Helpers\n * @summary Get the milliseconds timestamp of the given date.\n *\n * @description\n * Get the milliseconds timestamp of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the timestamp\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05.123:\n * var result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 1330515905123\n */\n\nexport default function getTime(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  return timestamp;\n}","import getTime from '../getTime/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getUnixTime\n * @category Timestamp Helpers\n * @summary Get the seconds timestamp of the given date.\n *\n * @description\n * Get the seconds timestamp of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the timestamp\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05 CET:\n * var result = getUnixTime(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 1330512305\n */\n\nexport default function getUnixTime(dirtyDate) {\n  requiredArgs(1, arguments);\n  return Math.floor(getTime(dirtyDate) / 1000);\n}","import startOfWeek from '../startOfWeek/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Number} the local week-numbering year\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * var result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * var result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * var result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\n\nexport default function getWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  var startOfNextYear = startOfWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  var startOfThisYear = startOfWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getWeekYear from '../getWeekYear/index.js';\nimport startOfWeek from '../startOfWeek/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the start of a week-numbering year\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * var result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * var result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\n\nexport default function startOfWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  var date = startOfWeek(firstWeek, dirtyOptions);\n  return date;\n}","import startOfWeek from '../startOfWeek/index.js';\nimport startOfWeekYear from '../startOfWeekYear/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Number} the week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * var result = getISOWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * var result = getISOWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport default function getWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfWeek(date, options).getTime() - startOfWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import getDate from '../getDate/index.js';\nimport getDay from '../getDay/index.js';\nimport startOfMonth from '../startOfMonth/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getWeekOfMonth\n * @category Week Helpers\n * @summary Get the week of the month of the given date.\n *\n * @description\n * Get the week of the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the week of month\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Which week of the month is 9 November 2017?\n * var result = getWeekOfMonth(new Date(2017, 10, 9))\n * //=> 2\n */\n\nexport default function getWeekOfMonth(date, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var currentDayOfMonth = getDate(date);\n\n  if (isNaN(currentDayOfMonth)) {\n    return currentDayOfMonth;\n  }\n\n  var startWeekDay = getDay(startOfMonth(date));\n  var lastDayOfFirstWeek = 0;\n\n  if (startWeekDay >= weekStartsOn) {\n    lastDayOfFirstWeek = weekStartsOn + 7 - startWeekDay;\n  } else {\n    lastDayOfFirstWeek = weekStartsOn - startWeekDay;\n  }\n\n  var weekNumber = 1;\n\n  if (currentDayOfMonth > lastDayOfFirstWeek) {\n    var remainingDaysAfterFirstWeek = currentDayOfMonth - lastDayOfFirstWeek;\n    weekNumber = weekNumber + Math.ceil(remainingDaysAfterFirstWeek / 7);\n  }\n\n  return weekNumber;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfMonth\n * @category Month Helpers\n * @summary Return the last day of a month for the given date.\n *\n * @description\n * Return the last day of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a month for 2 September 2014 11:55:00:\n * var result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\n\nexport default function lastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import differenceInCalendarWeeks from '../differenceInCalendarWeeks/index.js';\nimport lastDayOfMonth from '../lastDayOfMonth/index.js';\nimport startOfMonth from '../startOfMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getWeeksInMonth\n * @category Week Helpers\n * @summary Get the number of calendar weeks a month spans.\n *\n * @description\n * Get the number of calendar weeks the month in the given date spans.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the number of calendar weeks\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // How many calendar weeks does February 2015 span?\n * var result = getWeeksInMonth(new Date(2015, 1, 8))\n * //=> 4\n *\n * @example\n * // If the week starts on Monday,\n * // how many calendar weeks does July 2017 span?\n * var result = getWeeksInMonth(new Date(2017, 6, 5), { weekStartsOn: 1 })\n * //=> 6\n */\n\nexport default function getWeeksInMonth(date, options) {\n  requiredArgs(1, arguments);\n  return differenceInCalendarWeeks(lastDayOfMonth(date), startOfMonth(date), options) + 1;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getYear\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which year is 2 July 2014?\n * var result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\n\nexport default function getYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  return year;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addDays from '../addDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * var result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\n\nexport default function subDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * var result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}","import subDays from '../subDays/index.js';\nimport subMonths from '../subMonths/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\n\nexport default function sub(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || typeof duration !== 'object') return new Date(NaN);\n  var years = 'years' in duration ? toInteger(duration.years) : 0;\n  var months = 'months' in duration ? toInteger(duration.months) : 0;\n  var weeks = 'weeks' in duration ? toInteger(duration.weeks) : 0;\n  var days = 'days' in duration ? toInteger(duration.days) : 0;\n  var hours = 'hours' in duration ? toInteger(duration.hours) : 0;\n  var minutes = 'minutes' in duration ? toInteger(duration.minutes) : 0;\n  var seconds = 'seconds' in duration ? toInteger(duration.seconds) : 0; // Subtract years and months\n\n  var dateWithoutMonths = subMonths(toDate(dirtyDate), months + years * 12); // Subtract weeks and days\n\n  var dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7); // Subtract hours, minutes and seconds\n\n  var minutestoSub = minutes + hours * 60;\n  var secondstoSub = seconds + minutestoSub * 60;\n  var mstoSub = secondstoSub * 1000;\n  var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);\n  return finalDate;\n}","import compareAsc from '../compareAsc/index.js';\nimport differenceInYears from '../differenceInYears/index.js';\nimport differenceInMonths from '../differenceInMonths/index.js';\nimport differenceInDays from '../differenceInDays/index.js';\nimport differenceInHours from '../differenceInHours/index.js';\nimport differenceInMinutes from '../differenceInMinutes/index.js';\nimport differenceInSeconds from '../differenceInSeconds/index.js';\nimport isValid from '../isValid/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nimport toDate from '../toDate/index.js';\nimport sub from '../sub/index.js';\n/**\n * @name intervalToDuration\n * @category Common Helpers\n * @summary Get the Duration between 2 dates in an Interval Object\n *\n * @param {Interval} interval The Interval Object\n *\n * @returns {Duration} The Duration Object\n * @throws {TypeError} Requires 2 Arguments\n * @throws {RangeError} `start` must not be Invalid Date\n * @throws {RangeError} `end` must not be Invalid Date\n *\n * @example\n * // Get the Duration between January 15, 1929 and April 4, 1968.\n * const result = intervalToDuration({\n *     new Date(1929, 0, 15, 12, 0, 0),\n *     new Date(1968, 3, 4, 19, 5, 0)\n * })\n * // => { years: 39, months: 2, days: 20, hours: 7, minutes: 5, seconds: 0 }\n */\n\nexport default function intervalToDuration(_ref) {\n  var start = _ref.start,\n      end = _ref.end;\n  requiredArgs(1, arguments);\n  var dateLeft = toDate(start);\n  var dateRight = toDate(end);\n\n  if (!isValid(dateLeft)) {\n    throw new RangeError('Start Date is invalid');\n  }\n\n  if (!isValid(dateRight)) {\n    throw new RangeError('End Date is invalid');\n  }\n\n  var duration = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  };\n  var sign = compareAsc(dateLeft, dateRight);\n  duration.years = Math.abs(differenceInYears(dateLeft, dateRight));\n  var remainingMonths = sub(dateLeft, {\n    years: sign * duration.years\n  });\n  duration.months = Math.abs(differenceInMonths(remainingMonths, dateRight));\n  var remainingDays = sub(remainingMonths, {\n    months: sign * duration.months\n  });\n  duration.days = Math.abs(differenceInDays(remainingDays, dateRight));\n  var remainingHours = sub(remainingDays, {\n    days: sign * duration.days\n  });\n  duration.hours = Math.abs(differenceInHours(remainingHours, dateRight));\n  var remainingMinutes = sub(remainingHours, {\n    hours: sign * duration.hours\n  });\n  duration.minutes = Math.abs(differenceInMinutes(remainingMinutes, dateRight));\n  var remainingSeconds = sub(remainingMinutes, {\n    minutes: sign * duration.minutes\n  });\n  duration.seconds = Math.abs(differenceInSeconds(remainingSeconds, dateRight));\n  return duration;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isAfter\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date that should be after the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is after the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\n\nexport default function isAfter(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() > dateToCompare.getTime();\n}","import requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * var result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * var result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * var result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * var result = isDate({})\n * //=> false\n */\n\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isEqual\n * @category Common Helpers\n * @summary Are the given dates equal?\n *\n * @description\n * Are the given dates equal?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Boolean} the dates are equal\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n * var result = isEqual(\n *   new Date(2014, 6, 2, 6, 30, 45, 0),\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\n * )\n * //=> false\n */\n\nexport default function isEqual(dirtyLeftDate, dirtyRightDate) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyLeftDate);\n  var dateRight = toDate(dirtyRightDate);\n  return dateLeft.getTime() === dateRight.getTime();\n}","/**\n * @name isExists\n * @category Common Helpers\n * @summary Is the given date exists?\n *\n * @description\n * Checks if the given arguments convert to an existing date.\n *\n * @param {Number} year of the date to check\n * @param {Number} month of the date to check\n * @param {Number} day of the date to check\n * @returns {Boolean} the date exists\n * @throws {TypeError} 3 arguments required\n *\n * @example\n * // For the valid date:\n * var result = isExists(2018, 0, 31)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isExists(2018, 1, 31)\n * //=> false\n */\nexport default function isExists(year, month, day) {\n  if (arguments.length < 3) {\n    throw new TypeError('3 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = new Date(year, month, day);\n  return date.getFullYear() === year && date.getMonth() === month && date.getDate() === day;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isFirstDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the first day of a month?\n *\n * @description\n * Is the given date the first day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the first day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 1 September 2014 the first day of a month?\n * var result = isFirstDayOfMonth(new Date(2014, 8, 1))\n * //=> true\n */\n\nexport default function isFirstDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDate() === 1;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isFriday\n * @category Weekday Helpers\n * @summary Is the given date Friday?\n *\n * @description\n * Is the given date Friday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Friday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 26 September 2014 Friday?\n * var result = isFriday(new Date(2014, 8, 26))\n * //=> true\n */\n\nexport default function isFriday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 5;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isFuture\n * @category Common Helpers\n * @summary Is the given date in the future?\n * @pure false\n *\n * @description\n * Is the given date in the future?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the future\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 31 December 2014 in the future?\n * var result = isFuture(new Date(2014, 11, 31))\n * //=> true\n */\n\nexport default function isFuture(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getTime() > Date.now();\n}","import toDate from '../toDate/index.js';\nimport endOfDay from '../endOfDay/index.js';\nimport endOfMonth from '../endOfMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * var result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\n\nexport default function isLastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return endOfDay(date).getTime() === endOfMonth(date).getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isMonday\n * @category Weekday Helpers\n * @summary Is the given date Monday?\n *\n * @description\n * Is the given date Monday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Monday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 22 September 2014 Monday?\n * var result = isMonday(new Date(2014, 8, 22))\n * //=> true\n */\n\nexport default function isMonday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 1;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isPast\n * @category Common Helpers\n * @summary Is the given date in the past?\n * @pure false\n *\n * @description\n * Is the given date in the past?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in the past\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 2 July 2014 in the past?\n * var result = isPast(new Date(2014, 6, 2))\n * //=> true\n */\n\nexport default function isPast(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getTime() < Date.now();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfHour\n * @category Hour Helpers\n * @summary Return the start of an hour for the given date.\n *\n * @description\n * Return the start of an hour for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an hour for 2 September 2014 11:55:00:\n * var result = startOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:00:00\n */\n\nexport default function startOfHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMinutes(0, 0, 0);\n  return date;\n}","import startOfHour from '../startOfHour/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameHour\n * @category Hour Helpers\n * @summary Are the given dates in the same hour?\n *\n * @description\n * Are the given dates in the same hour?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same hour\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\n * var result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))\n * //=> true\n */\n\nexport default function isSameHour(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfHour = startOfHour(dirtyDateLeft);\n  var dateRightStartOfHour = startOfHour(dirtyDateRight);\n  return dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime();\n}","import startOfWeek from '../startOfWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameWeek\n * @category Week Helpers\n * @summary Are the given dates in the same week?\n *\n * @description\n * Are the given dates in the same week?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the dates are in the same week\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n *   weekStartsOn: 1\n * })\n * //=> false\n */\n\nexport default function isSameWeek(dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfWeek = startOfWeek(dirtyDateLeft, dirtyOptions);\n  var dateRightStartOfWeek = startOfWeek(dirtyDateRight, dirtyOptions);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}","import isSameWeek from '../isSameWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameISOWeek\n * @category ISO Week Helpers\n * @summary Are the given dates in the same ISO week?\n *\n * @description\n * Are the given dates in the same ISO week?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 1 September 2014 and 7 September 2014 in the same ISO week?\n * var result = isSameISOWeek(new Date(2014, 8, 1), new Date(2014, 8, 7))\n * //=> true\n */\n\nexport default function isSameISOWeek(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  return isSameWeek(dirtyDateLeft, dirtyDateRight, {\n    weekStartsOn: 1\n  });\n}","import startOfISOWeekYear from '../startOfISOWeekYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Are the given dates in the same ISO week-numbering year?\n *\n * @description\n * Are the given dates in the same ISO week-numbering year?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `isSameISOYear` to `isSameISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week-numbering year\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 29 December 2003 and 2 January 2005 in the same ISO week-numbering year?\n * var result = isSameISOWeekYear(new Date(2003, 11, 29), new Date(2005, 0, 2))\n * //=> true\n */\n\nexport default function isSameISOWeekYear(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfYear = startOfISOWeekYear(dirtyDateLeft);\n  var dateRightStartOfYear = startOfISOWeekYear(dirtyDateRight);\n  return dateLeftStartOfYear.getTime() === dateRightStartOfYear.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfMinute\n * @category Minute Helpers\n * @summary Return the start of a minute for the given date.\n *\n * @description\n * Return the start of a minute for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a minute for 1 December 2014 22:15:45.400:\n * var result = startOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:00\n */\n\nexport default function startOfMinute(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setSeconds(0, 0);\n  return date;\n}","import startOfMinute from '../startOfMinute/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameMinute\n * @category Minute Helpers\n * @summary Are the given dates in the same minute?\n *\n * @description\n * Are the given dates in the same minute?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same minute\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:30:00 and 4 September 2014 06:30:15\n * // in the same minute?\n * var result = isSameMinute(\n *   new Date(2014, 8, 4, 6, 30),\n *   new Date(2014, 8, 4, 6, 30, 15)\n * )\n * //=> true\n */\n\nexport default function isSameMinute(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfMinute = startOfMinute(dirtyDateLeft);\n  var dateRightStartOfMinute = startOfMinute(dirtyDateRight);\n  return dateLeftStartOfMinute.getTime() === dateRightStartOfMinute.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameMonth\n * @category Month Helpers\n * @summary Are the given dates in the same month?\n *\n * @description\n * Are the given dates in the same month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same month\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * var result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isSameMonth(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfQuarter\n * @category Quarter Helpers\n * @summary Return the start of a year quarter for the given date.\n *\n * @description\n * Return the start of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a quarter for 2 September 2014 11:55:00:\n * var result = startOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Jul 01 2014 00:00:00\n */\n\nexport default function startOfQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3;\n  date.setMonth(month, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import startOfQuarter from '../startOfQuarter/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameQuarter\n * @category Quarter Helpers\n * @summary Are the given dates in the same year quarter?\n *\n * @description\n * Are the given dates in the same year quarter?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same quarter\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 1 January 2014 and 8 March 2014 in the same quarter?\n * var result = isSameQuarter(new Date(2014, 0, 1), new Date(2014, 2, 8))\n * //=> true\n */\n\nexport default function isSameQuarter(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfQuarter = startOfQuarter(dirtyDateLeft);\n  var dateRightStartOfQuarter = startOfQuarter(dirtyDateRight);\n  return dateLeftStartOfQuarter.getTime() === dateRightStartOfQuarter.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfSecond\n * @category Second Helpers\n * @summary Return the start of a second for the given date.\n *\n * @description\n * Return the start of a second for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a second for 1 December 2014 22:15:45.400:\n * var result = startOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.000\n */\n\nexport default function startOfSecond(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMilliseconds(0);\n  return date;\n}","import startOfSecond from '../startOfSecond/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameSecond\n * @category Second Helpers\n * @summary Are the given dates in the same second?\n *\n * @description\n * Are the given dates in the same second?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same second\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:30:15.000 and 4 September 2014 06:30.15.500\n * // in the same second?\n * var result = isSameSecond(\n *   new Date(2014, 8, 4, 6, 30, 15),\n *   new Date(2014, 8, 4, 6, 30, 15, 500)\n * )\n * //=> true\n */\n\nexport default function isSameSecond(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfSecond = startOfSecond(dirtyDateLeft);\n  var dateRightStartOfSecond = startOfSecond(dirtyDateRight);\n  return dateLeftStartOfSecond.getTime() === dateRightStartOfSecond.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameYear\n * @category Year Helpers\n * @summary Are the given dates in the same year?\n *\n * @description\n * Are the given dates in the same year?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same year\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same year?\n * var result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isSameYear(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSaturday\n * @category Weekday Helpers\n * @summary Is the given date Saturday?\n *\n * @description\n * Is the given date Saturday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Saturday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 27 September 2014 Saturday?\n * var result = isSaturday(new Date(2014, 8, 27))\n * //=> true\n */\n\nexport default function isSaturday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 6;\n}","import isSameHour from '../isSameHour/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisHour\n * @category Hour Helpers\n * @summary Is the given date in the same hour as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same hour as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:00:00 in this hour?\n * var result = isThisHour(new Date(2014, 8, 25, 18))\n * //=> true\n */\n\nexport default function isThisHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameHour(Date.now(), dirtyDate);\n}","import isSameISOWeek from '../isSameISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisISOWeek\n * @category ISO Week Helpers\n * @summary Is the given date in the same ISO week as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same ISO week as the current date?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 22 September 2014 in this ISO week?\n * var result = isThisISOWeek(new Date(2014, 8, 22))\n * //=> true\n */\n\nexport default function isThisISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameISOWeek(dirtyDate, Date.now());\n}","import isSameMinute from '../isSameMinute/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisMinute\n * @category Minute Helpers\n * @summary Is the given date in the same minute as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same minute as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this minute\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:30:00 in this minute?\n * var result = isThisMinute(new Date(2014, 8, 25, 18, 30))\n * //=> true\n */\n\nexport default function isThisMinute(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameMinute(Date.now(), dirtyDate);\n}","import isSameMonth from '../isSameMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisMonth\n * @category Month Helpers\n * @summary Is the given date in the same month as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same month as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 15 September 2014 in this month?\n * var result = isThisMonth(new Date(2014, 8, 15))\n * //=> true\n */\n\nexport default function isThisMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameMonth(Date.now(), dirtyDate);\n}","import isSameQuarter from '../isSameQuarter/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisQuarter\n * @category Quarter Helpers\n * @summary Is the given date in the same quarter as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same quarter as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this quarter\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this quarter?\n * var result = isThisQuarter(new Date(2014, 6, 2))\n * //=> true\n */\n\nexport default function isThisQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameQuarter(Date.now(), dirtyDate);\n}","import isSameSecond from '../isSameSecond/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisSecond\n * @category Second Helpers\n * @summary Is the given date in the same second as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same second as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this second\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:30:15.000 in this second?\n * var result = isThisSecond(new Date(2014, 8, 25, 18, 30, 15))\n * //=> true\n */\n\nexport default function isThisSecond(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameSecond(Date.now(), dirtyDate);\n}","import isSameWeek from '../isSameWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisWeek\n * @category Week Helpers\n * @summary Is the given date in the same week as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same week as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @param {Object} [options] - the object with options\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the date is in this week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // If today is 25 September 2014, is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21))\n * //=> true\n *\n * @example\n * // If today is 25 September 2014 and week starts with Monday\n * // is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21), { weekStartsOn: 1 })\n * //=> false\n */\n\nexport default function isThisWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  return isSameWeek(dirtyDate, Date.now(), options);\n}","import isSameYear from '../isSameYear/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThisYear\n * @category Year Helpers\n * @summary Is the given date in the same year as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same year as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is in this year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this year?\n * var result = isThisYear(new Date(2014, 6, 2))\n * //=> true\n */\n\nexport default function isThisYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameYear(dirtyDate, Date.now());\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isThursday\n * @category Weekday Helpers\n * @summary Is the given date Thursday?\n *\n * @description\n * Is the given date Thursday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Thursday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 25 September 2014 Thursday?\n * var result = isThursday(new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isThursday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 4;\n}","import isSameDay from '../isSameDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is today\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * var result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\n\nexport default function isToday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, Date.now());\n}","import addDays from '../addDays/index.js';\nimport isSameDay from '../isSameDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isTomorrow\n * @category Day Helpers\n * @summary Is the given date tomorrow?\n * @pure false\n *\n * @description\n * Is the given date tomorrow?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is tomorrow\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 7 October 14:00:00 tomorrow?\n * var result = isTomorrow(new Date(2014, 9, 7, 14, 0))\n * //=> true\n */\n\nexport default function isTomorrow(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, addDays(Date.now(), 1));\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isTuesday\n * @category Weekday Helpers\n * @summary Is the given date Tuesday?\n *\n * @description\n * Is the given date Tuesday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Tuesday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 23 September 2014 Tuesday?\n * var result = isTuesday(new Date(2014, 8, 23))\n * //=> true\n */\n\nexport default function isTuesday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 2;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isWednesday\n * @category Weekday Helpers\n * @summary Is the given date Wednesday?\n *\n * @description\n * Is the given date Wednesday?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is Wednesday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 24 September 2014 Wednesday?\n * var result = isWednesday(new Date(2014, 8, 24))\n * //=> true\n */\n\nexport default function isWednesday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getDay() === 3;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isWithinInterval\n * @category Interval Helpers\n * @summary Is the given date within the interval?\n *\n * @description\n * Is the given date within the interval? (Including start and end.)\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `isWithinRange` to `isWithinInterval`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   isWithinRange(\n *     new Date(2014, 0, 3),\n *     new Date(2014, 0, 1), new Date(2014, 0, 7)\n *   )\n *\n *   // v2.0.0 onward\n *\n *   isWithinInterval(\n *     new Date(2014, 0, 3),\n *     { start: new Date(2014, 0, 1), end: new Date(2014, 0, 7) }\n *   )\n *   ```\n *\n * @param {Date|Number} date - the date to check\n * @param {Interval} interval - the interval to check\n * @returns {Boolean} the date is within the interval\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For the date within the interval:\n * isWithinInterval(new Date(2014, 0, 3), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> true\n *\n * @example\n * // For the date outside of the interval:\n * isWithinInterval(new Date(2014, 0, 10), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> false\n *\n * @example\n * // For date equal to interval start:\n * isWithinInterval(date, { start, end: date }) // => true\n *\n * @example\n * // For date equal to interval end:\n * isWithinInterval(date, { start: date, end }) // => true\n */\n\nexport default function isWithinInterval(dirtyDate, dirtyInterval) {\n  requiredArgs(2, arguments);\n  var interval = dirtyInterval || {};\n  var time = toDate(dirtyDate).getTime();\n  var startTime = toDate(interval.start).getTime();\n  var endTime = toDate(interval.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startTime <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  return time >= startTime && time <= endTime;\n}","import isSameDay from '../isSameDay/index.js';\nimport subDays from '../subDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isYesterday\n * @category Day Helpers\n * @summary Is the given date yesterday?\n * @pure false\n *\n * @description\n * Is the given date yesterday?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is yesterday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?\n * var result = isYesterday(new Date(2014, 9, 5, 14, 0))\n * //=> true\n */\n\nexport default function isYesterday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, subDays(Date.now(), 1));\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfDecade\n * @category Decade Helpers\n * @summary Return the last day of a decade for the given date.\n *\n * @description\n * Return the last day of a decade for the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a decade\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a decade for 21 December 2012 21:12:00:\n * var result = lastDayOfDecade(new Date(2012, 11, 21, 21, 12, 00))\n * //=> Wed Dec 31 2019 00:00:00\n */\n\nexport default function lastDayOfDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = 9 + Math.floor(year / 10) * 10;\n  date.setFullYear(decade + 1, 0, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfWeek\n * @category Week Helpers\n * @summary Return the last day of a week for the given date.\n *\n * @description\n * Return the last day of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the last day of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The last day of a week for 2 September 2014 11:55:00:\n * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the last day of the week for 2 September 2014 11:55:00:\n * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function lastDayOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setHours(0, 0, 0, 0);\n  date.setDate(date.getDate() + diff);\n  return date;\n}","import lastDayOfWeek from '../lastDayOfWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the last day of an ISO week for the given date.\n *\n * @description\n * Return the last day of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of an ISO week\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of an ISO week for 2 September 2014 11:55:00:\n * var result = lastDayOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function lastDayOfISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  return lastDayOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}","import getISOWeekYear from '../getISOWeekYear/index.js';\nimport startOfISOWeek from '../startOfISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the last day of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the last day of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `lastDayOfISOYear` to `lastDayOfISOWeekYear`.\n *   \"ISO week year\" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).\n *   This change makes the name consistent with\n *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of an ISO week-numbering year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of an ISO week-numbering year for 2 July 2005:\n * var result = lastDayOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 00:00:00\n */\n\nexport default function lastDayOfISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(year + 1, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuary);\n  date.setDate(date.getDate() - 1);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfQuarter\n * @category Quarter Helpers\n * @summary Return the last day of a year quarter for the given date.\n *\n * @description\n * Return the last day of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * @returns {Date} the last day of a quarter\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // The last day of a quarter for 2 September 2014 11:55:00:\n * var result = lastDayOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\n\nexport default function lastDayOfQuarter(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var currentMonth = date.getMonth();\n  var month = currentMonth - currentMonth % 3 + 3;\n  date.setMonth(month, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name lastDayOfYear\n * @category Year Helpers\n * @summary Return the last day of a year for the given date.\n *\n * @description\n * Return the last day of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a year for 2 September 2014 11:55:00:\n * var result = lastDayOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 00:00:00\n */\n\nexport default function lastDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  date.setFullYear(year + 1, 0, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport formatters from '../_lib/format/lightFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport isValid from '../isValid/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js'; // This RegExp consists of three parts separated by `|`:\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name lightFormat\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. Unlike `format`,\n * `lightFormat` doesn't use locales and outputs date using the most popular tokens.\n *\n * > ⚠️ Please note that the `lightFormat` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   |\n * |---------------------------------|---------|-----------------------------------|\n * | AM, PM                          | a..aaa  | AM, PM                            |\n * |                                 | aaaa    | a.m., p.m.                        |\n * |                                 | aaaaa   | a, p                              |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 |\n * |                                 | yy      | 44, 01, 00, 17                    |\n * |                                 | yyy     | 044, 001, 000, 017                |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |\n * |                                 | MM      | 01, 02, ..., 12                   |\n * | Day of month                    | d       | 1, 2, ..., 31                     |\n * |                                 | dd      | 01, 02, ..., 31                   |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |\n * |                                 | hh      | 01, 02, ..., 11, 12               |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |\n * |                                 | HH      | 00, 01, 02, ..., 23               |\n * | Minute                          | m       | 0, 1, ..., 59                     |\n * |                                 | mm      | 00, 01, ..., 59                   |\n * | Second                          | s       | 0, 1, ..., 59                     |\n * |                                 | ss      | 00, 01, ..., 59                   |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |\n * |                                 | SS      | 00, 01, ..., 99                   |\n * |                                 | SSS     | 000, 0001, ..., 999               |\n * |                                 | SSSS    | ...                               |\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * var result = lightFormat(new Date(2014, 1, 11), 'yyyy-MM-dd')\n * //=> '1987-02-11'\n */\n\nexport default function lightFormat(dirtyDate, dirtyFormatStr) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var result = formatStr.match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      return formatter(utcDate, substring, null, {});\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name max\n * @category Common Helpers\n * @summary Return the latest of the given dates.\n *\n * @description\n * Return the latest of the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - `max` function now accepts an array of dates rather than spread arguments.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   var date1 = new Date(1989, 6, 10)\n *   var date2 = new Date(1987, 1, 11)\n *   var maxDate = max(date1, date2)\n *\n *   // v2.0.0 onward:\n *   var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]\n *   var maxDate = max(dates)\n *   ```\n *\n * @param {Date[]|Number[]} datesArray - the dates to compare\n * @returns {Date} the latest of the dates\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which of these dates is the latest?\n * var result = max([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Sun Jul 02 1995 00:00:00\n */\n\nexport default function max(dirtyDatesArray) {\n  requiredArgs(1, arguments);\n  var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n\n  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.\n  } else if (typeof dirtyDatesArray === 'object' && dirtyDatesArray !== null) {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  } else {\n    // `dirtyDatesArray` is non-iterable, return Invalid Date\n    return new Date(NaN);\n  }\n\n  var result;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n\n    if (result === undefined || result < currentDate || isNaN(currentDate)) {\n      result = currentDate;\n    }\n  });\n  return result || new Date(NaN);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name min\n * @category Common Helpers\n * @summary Return the earliest of the given dates.\n *\n * @description\n * Return the earliest of the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - `min` function now accepts an array of dates rather than spread arguments.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   var date1 = new Date(1989, 6, 10)\n *   var date2 = new Date(1987, 1, 11)\n *   var minDate = min(date1, date2)\n *\n *   // v2.0.0 onward:\n *   var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]\n *   var minDate = min(dates)\n *   ```\n *\n * @param {Date[]|Number[]} datesArray - the dates to compare\n * @returns {Date} the earliest of the dates\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which of these dates is the earliest?\n * var result = min([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Wed Feb 11 1987 00:00:00\n */\n\nexport default function min(dirtyDatesArray) {\n  requiredArgs(1, arguments);\n  var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method\n\n  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {\n    datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.\n  } else if (typeof dirtyDatesArray === 'object' && dirtyDatesArray !== null) {\n    datesArray = Array.prototype.slice.call(dirtyDatesArray);\n  } else {\n    // `dirtyDatesArray` is non-iterable, return Invalid Date\n    return new Date(NaN);\n  }\n\n  var result;\n  datesArray.forEach(function (dirtyDate) {\n    var currentDate = toDate(dirtyDate);\n\n    if (result === undefined || result > currentDate || isNaN(currentDate)) {\n      result = currentDate;\n    }\n  });\n  return result || new Date(NaN);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar DEFAULT_ADDITIONAL_DIGITS = 2;\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The previous `parse` implementation was renamed to `parseISO`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   parseISO('2016-01-01')\n *   ```\n *\n * - `parseISO` now validates separate date and time values in ISO-8601 strings\n *   and returns `Invalid Date` if the date is invalid.\n *\n *   ```javascript\n *   parseISO('2018-13-32')\n *   //=> Invalid Date\n *   ```\n *\n * - `parseISO` now doesn't fall back to `new Date` constructor\n *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * var result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nexport default function parseISO(argument, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : toInteger(options.additionalDigits);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (isNaN(date) || !date) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time) || time === null) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time); // js parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n\n    var result = new Date(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate(), dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    result.setFullYear(dirtyDate.getUTCFullYear());\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString;\n\n  if (/:/.test(array[0])) {\n    dateStrings.date = null;\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: null\n  };\n  var year = captures[1] && parseInt(captures[1]);\n  var century = captures[2] && parseInt(captures[2]);\n  return {\n    year: century == null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return null;\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return null;\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return null; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name parseJSON\n * @category Common Helpers\n * @summary Parse a JSON date string\n *\n * @description\n * Converts a complete ISO date string in UTC time, the typical format for transmitting\n * a date in JSON, to a JavaScript `Date` instance.\n *\n * This is a minimal implementation for converting dates retrieved from a JSON API to\n * a `Date` instance which can be used with other functions in the `date-fns` library.\n * The following formats are supported:\n *\n *     - `2000-03-15T05:20:10.123Z`: The output of `.toISOString()` and `JSON.stringify(new Date())`\n *     - `2000-03-15T05:20:10Z`: Without milliseconds\n *     - `2000-03-15T05:20:10+00:00`: With a zero offset, the default JSON encoded format in some other languages\n *     - `2000-03-15T05:20:10+0000`: With a zero offset without a colon\n *     - `2000-03-15T05:20:10`: Without a trailing 'Z' symbol\n *     - `2000-03-15T05:20:10.1234567`: Up to 7 digits in milliseconds field. Only first 3 are taken into account since JS does not allow fractional milliseconds\n *     - `2000-03-15 05:20:10`: With a space instead of a 'T' separator for APIs returning a SQL date without reformatting\n *\n * For convenience and ease of use these other input types are also supported\n * via [toDate]{@link https://date-fns.org/docs/toDate}:\n *\n *     - A `Date` instance will be cloned\n *     - A `number` will be treated as a timestamp\n *\n * Any other input type or invalid date strings will return an `Invalid Date`.\n *\n * @param {String|Number|Date} argument A fully formed ISO8601 date string to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n */\n\nexport default function parseJSON(argument) {\n  requiredArgs(1, arguments);\n\n  if (typeof argument === 'string') {\n    var parts = argument.match(/(\\d{4})-(\\d{2})-(\\d{2})[T ](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d{0,7}))?(?:Z|\\+00:?00)?/);\n\n    if (parts) {\n      return new Date(Date.UTC(+parts[1], parts[2] - 1, +parts[3], +parts[4], +parts[5], +parts[6], +((parts[7] || '0') + '00').substring(0, 3)));\n    }\n\n    return new Date(NaN);\n  }\n\n  return toDate(argument);\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\n/**\n * @name roundToNearestMinutes\n * @category Minute Helpers\n * @summary Rounds the given date to the nearest minute\n *\n * @description\n * Rounds the given date to the nearest minute (or number of minutes).\n * Rounds up when the given date is exactly between the nearest round minutes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to round\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.nearestTo=1] - nearest number of minutes to round to. E.g. `15` to round to quarter hours.\n * @returns {Date} the new date rounded to the closest minute\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.nearestTo` must be between 1 and 30\n *\n * @example\n * // Round 10 July 2014 12:12:34 to nearest minute:\n * var result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34))\n * //=> Thu Jul 10 2014 12:13:00\n *\n * @example\n * // Round 10 July 2014 12:07:30 to nearest quarter hour:\n * var result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34), { nearestTo: 15 })\n * // rounds up because given date is exactly between 12:00:00 and 12:15:00\n * //=> Thu Jul 10 2014 12:15:00\n */\n\nexport default function roundToNearestMinutes(dirtyDate, options) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only none provided present');\n  }\n\n  var nearestTo = options && 'nearestTo' in options ? toInteger(options.nearestTo) : 1;\n\n  if (nearestTo < 1 || nearestTo > 30) {\n    throw new RangeError('`options.nearestTo` must be between 1 and 30');\n  }\n\n  var date = toDate(dirtyDate);\n  var seconds = date.getSeconds(); // relevant if nearestTo is 1, which is the default case\n\n  var minutes = date.getMinutes() + seconds / 60;\n  var roundedMinutes = Math.floor(minutes / nearestTo) * nearestTo;\n  var remainderMinutes = minutes % nearestTo;\n  var addedMinutes = Math.round(remainderMinutes / nearestTo) * nearestTo;\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), roundedMinutes + addedMinutes);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport getDaysInMonth from '../getDaysInMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setMonth\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} month - the month of the new date\n * @returns {Date} the new date with the month set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set February to 1 September 2014:\n * var result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */\n\nexport default function setMonth(dirtyDate, dirtyMonth) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var month = toInteger(dirtyMonth);\n  var year = date.getFullYear();\n  var day = date.getDate();\n  var dateWithDesiredMonth = new Date(0);\n  dateWithDesiredMonth.setFullYear(year, month, 15);\n  dateWithDesiredMonth.setHours(0, 0, 0, 0);\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth); // Set the last day of the new month\n  // if the original date was the last day of the longer month\n\n  date.setMonth(month, Math.min(day, daysInMonth));\n  return date;\n}","import toDate from '../toDate/index.js';\nimport setMonth from '../setMonth/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name set\n * @category Common Helpers\n * @summary Set date values to a given date.\n *\n * @description\n * Set date values to a given date.\n *\n * Sets time values to date from object `values`.\n * A value is not set if it is undefined or null or doesn't exist in `values`.\n *\n * Note about bundle size: `set` does not internally use `setX` functions from date-fns but instead opts\n * to use native `Date#setX` methods. If you use this function, you may not want to include the\n * other `setX` functions that date-fns provides if you are concerned about the bundle size.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Object} values - an object with options\n * @param {Number} [values.year] - the number of years to be set\n * @param {Number} [values.month] - the number of months to be set\n * @param {Number} [values.date] - the number of days to be set\n * @param {Number} [values.hours] - the number of hours to be set\n * @param {Number} [values.minutes] - the number of minutes to be set\n * @param {Number} [values.seconds] - the number of seconds to be set\n * @param {Number} [values.milliseconds] - the number of milliseconds to be set\n * @returns {Date} the new date with options set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `values` must be an object\n *\n * @example\n * // Transform 1 September 2014 into 20 October 2015 in a single line:\n * var result = set(new Date(2014, 8, 20), { year: 2015, month: 9, date: 20 })\n * //=> Tue Oct 20 2015 00:00:00\n *\n * @example\n * // Set 12 PM to 1 September 2014 01:23:45 to 1 September 2014 12:00:00:\n * var result = set(new Date(2014, 8, 1, 1, 23, 45), { hours: 12 })\n * //=> Mon Sep 01 2014 12:23:45\n */\n\nexport default function set(dirtyDate, values) {\n  requiredArgs(2, arguments);\n\n  if (typeof values !== 'object' || values === null) {\n    throw new RangeError('values parameter must be an object');\n  }\n\n  var date = toDate(dirtyDate); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  }\n\n  if (values.year != null) {\n    date.setFullYear(values.year);\n  }\n\n  if (values.month != null) {\n    date = setMonth(date, values.month);\n  }\n\n  if (values.date != null) {\n    date.setDate(toInteger(values.date));\n  }\n\n  if (values.hours != null) {\n    date.setHours(toInteger(values.hours));\n  }\n\n  if (values.minutes != null) {\n    date.setMinutes(toInteger(values.minutes));\n  }\n\n  if (values.seconds != null) {\n    date.setSeconds(toInteger(values.seconds));\n  }\n\n  if (values.milliseconds != null) {\n    date.setMilliseconds(toInteger(values.milliseconds));\n  }\n\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setDate\n * @category Day Helpers\n * @summary Set the day of the month to the given date.\n *\n * @description\n * Set the day of the month to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} dayOfMonth - the day of the month of the new date\n * @returns {Date} the new date with the day of the month set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 30th day of the month to 1 September 2014:\n * var result = setDate(new Date(2014, 8, 1), 30)\n * //=> Tue Sep 30 2014 00:00:00\n */\n\nexport default function setDate(dirtyDate, dirtyDayOfMonth) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfMonth = toInteger(dirtyDayOfMonth);\n  date.setDate(dayOfMonth);\n  return date;\n}","import addDays from '../addDays/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setDay\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} day - the day of the week of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the new date with the day of the week set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Set week day to Sunday, with the default weekStartsOn of Sunday:\n * var result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // Set week day to Sunday, with a weekStartsOn of Monday:\n * var result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function setDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate, options);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var delta = 7 - weekStartsOn;\n  var diff = day < 0 || day > 6 ? day - (currentDay + delta) % 7 : (dayIndex + delta) % 7 - (currentDay + delta) % 7;\n  return addDays(date, diff, options);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setDayOfYear\n * @category Day Helpers\n * @summary Set the day of the year to the given date.\n *\n * @description\n * Set the day of the year to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} dayOfYear - the day of the year of the new date\n * @returns {Date} the new date with the day of the year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 2nd day of the year to 2 July 2014:\n * var result = setDayOfYear(new Date(2014, 6, 2), 2)\n * //=> Thu Jan 02 2014 00:00:00\n */\n\nexport default function setDayOfYear(dirtyDate, dirtyDayOfYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfYear = toInteger(dirtyDayOfYear);\n  date.setMonth(0);\n  date.setDate(dayOfYear);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setHours\n * @category Hour Helpers\n * @summary Set the hours to the given date.\n *\n * @description\n * Set the hours to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} hours - the hours of the new date\n * @returns {Date} the new date with the hours set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 4 hours to 1 September 2014 11:30:00:\n * var result = setHours(new Date(2014, 8, 1, 11, 30), 4)\n * //=> Mon Sep 01 2014 04:30:00\n */\n\nexport default function setHours(dirtyDate, dirtyHours) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var hours = toInteger(dirtyHours);\n  date.setHours(hours);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport addDays from '../addDays/index.js';\nimport getISODay from '../getISODay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setISODay\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday etc.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} day - the day of the ISO week of the new date\n * @returns {Date} the new date with the day of the ISO week set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * var result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\n\nexport default function setISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = getISODay(date);\n  var diff = day - currentDay;\n  return addDays(date, diff);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport getISOWeek from '../getISOWeek/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setISOWeek\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} isoWeek - the ISO week of the new date\n * @returns {Date} the new date with the ISO week set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * var result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\n\nexport default function setISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getISOWeek(date) - isoWeek;\n  date.setDate(date.getDate() - diff * 7);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setMilliseconds\n * @category Millisecond Helpers\n * @summary Set the milliseconds to the given date.\n *\n * @description\n * Set the milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} milliseconds - the milliseconds of the new date\n * @returns {Date} the new date with the milliseconds set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 300 milliseconds to 1 September 2014 11:30:40.500:\n * var result = setMilliseconds(new Date(2014, 8, 1, 11, 30, 40, 500), 300)\n * //=> Mon Sep 01 2014 11:30:40.300\n */\n\nexport default function setMilliseconds(dirtyDate, dirtyMilliseconds) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var milliseconds = toInteger(dirtyMilliseconds);\n  date.setMilliseconds(milliseconds);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setMinutes\n * @category Minute Helpers\n * @summary Set the minutes to the given date.\n *\n * @description\n * Set the minutes to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} minutes - the minutes of the new date\n * @returns {Date} the new date with the minutes set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 45 minutes to 1 September 2014 11:30:40:\n * var result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:45:40\n */\n\nexport default function setMinutes(dirtyDate, dirtyMinutes) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var minutes = toInteger(dirtyMinutes);\n  date.setMinutes(minutes);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport setMonth from '../setMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setQuarter\n * @category Quarter Helpers\n * @summary Set the year quarter to the given date.\n *\n * @description\n * Set the year quarter to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} quarter - the quarter of the new date\n * @returns {Date} the new date with the quarter set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 2nd quarter to 2 July 2014:\n * var result = setQuarter(new Date(2014, 6, 2), 2)\n * //=> Wed Apr 02 2014 00:00:00\n */\n\nexport default function setQuarter(dirtyDate, dirtyQuarter) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var quarter = toInteger(dirtyQuarter);\n  var oldQuarter = Math.floor(date.getMonth() / 3) + 1;\n  var diff = quarter - oldQuarter;\n  return setMonth(date, date.getMonth() + diff * 3);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setSeconds\n * @category Second Helpers\n * @summary Set the seconds to the given date.\n *\n * @description\n * Set the seconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} seconds - the seconds of the new date\n * @returns {Date} the new date with the seconds set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 45 seconds to 1 September 2014 11:30:40:\n * var result = setSeconds(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:30:45\n */\n\nexport default function setSeconds(dirtyDate, dirtySeconds) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var seconds = toInteger(dirtySeconds);\n  date.setSeconds(seconds);\n  return date;\n}","import getWeek from '../getWeek/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} week - the week of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the new date with the local week set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * var result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * var result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */\n\nexport default function setWeek(dirtyDate, dirtyWeek, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getWeek(date, dirtyOptions) - week;\n  date.setDate(date.getDate() - diff * 7);\n  return date;\n}","import differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport startOfWeekYear from '../startOfWeekYear/index.js';\nimport toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Set the local week-numbering year to the given date.\n *\n * @description\n * Set the local week-numbering year to the given date,\n * saving the week number and the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} weekYear - the local week-numbering year of the new date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @returns {Date} the new date with the local week-numbering year set\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n *\n * @example\n * // Set the local week-numbering year 2004 to 2 January 2010 with default options:\n * var result = setWeekYear(new Date(2010, 0, 2), 2004)\n * //=> Sat Jan 03 2004 00:00:00\n *\n * @example\n * // Set the local week-numbering year 2004 to 2 January 2010,\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * var result = setWeekYear(new Date(2010, 0, 2), 2004, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sat Jan 01 2005 00:00:00\n */\n\nexport default function setWeekYear(dirtyDate, dirtyWeekYear, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var date = toDate(dirtyDate);\n  var weekYear = toInteger(dirtyWeekYear);\n  var diff = differenceInCalendarDays(date, startOfWeekYear(date, dirtyOptions));\n  var firstWeek = new Date(0);\n  firstWeek.setFullYear(weekYear, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  date = startOfWeekYear(firstWeek, dirtyOptions);\n  date.setDate(date.getDate() + diff);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setYear\n * @category Year Helpers\n * @summary Set the year to the given date.\n *\n * @description\n * Set the year to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} year - the year of the new date\n * @returns {Date} the new date with the year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set year 2013 to 1 September 2014:\n * var result = setYear(new Date(2014, 8, 1), 2013)\n * //=> Sun Sep 01 2013 00:00:00\n */\n\nexport default function setYear(dirtyDate, dirtyYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var year = toInteger(dirtyYear); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  }\n\n  date.setFullYear(year);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfDecade\n * @category Decade Helpers\n * @summary Return the start of a decade for the given date.\n *\n * @description\n * Return the start of a decade for the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a decade\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a decade for 21 October 2015 00:00:00:\n * var result = startOfDecade(new Date(2015, 9, 21, 00, 00, 00))\n * //=> Jan 01 2010 00:00:00\n */\n\nexport default function startOfDecade(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var decade = Math.floor(year / 10) * 10;\n  date.setFullYear(decade, 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import startOfDay from '../startOfDay/index.js';\n/**\n * @name startOfToday\n * @category Day Helpers\n * @summary Return the start of today.\n * @pure false\n *\n * @description\n * Return the start of today.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfToday()\n * //=> Mon Oct 6 2014 00:00:00\n */\n\nexport default function startOfToday() {\n  return startOfDay(Date.now());\n}","/**\n * @name startOfTomorrow\n * @category Day Helpers\n * @summary Return the start of tomorrow.\n * @pure false\n *\n * @description\n * Return the start of tomorrow.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfTomorrow()\n * //=> Tue Oct 7 2014 00:00:00\n */\nexport default function startOfTomorrow() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day + 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","/**\n * @name startOfYesterday\n * @category Day Helpers\n * @summary Return the start of yesterday.\n * @pure false\n *\n * @description\n * Return the start of yesterday.\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `new Date()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @returns {Date} the start of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfYesterday()\n * //=> Sun Oct 5 2014 00:00:00\n */\nexport default function startOfYesterday() {\n  var now = new Date();\n  var year = now.getFullYear();\n  var month = now.getMonth();\n  var day = now.getDate();\n  var date = new Date(0);\n  date.setFullYear(year, month, day - 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addBusinessDays from '../addBusinessDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subBusinessDays\n * @category Day Helpers\n * @summary Substract the specified number of business days (mon - fri) to the given date.\n *\n * @description\n * Substract the specified number of business days (mon - fri) to the given date, ignoring weekends.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of business days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the business days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Substract 10 business days from 1 September 2014:\n * var result = subBusinessDays(new Date(2014, 8, 1), 10)\n * //=> Mon Aug 18 2014 00:00:00 (skipped weekend days)\n */\n\nexport default function subBusinessDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addBusinessDays(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addHours from '../addHours/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subHours\n * @category Hour Helpers\n * @summary Subtract the specified number of hours from the given date.\n *\n * @description\n * Subtract the specified number of hours from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the hours subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 2 hours from 11 July 2014 01:00:00:\n * var result = subHours(new Date(2014, 6, 11, 1, 0), 2)\n * //=> Thu Jul 10 2014 23:00:00\n */\n\nexport default function subHours(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addHours(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMinutes from '../addMinutes/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMinutes\n * @category Minute Helpers\n * @summary Subtract the specified number of minutes from the given date.\n *\n * @description\n * Subtract the specified number of minutes from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 30 minutes from 10 July 2014 12:00:00:\n * var result = subMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 11:30:00\n */\n\nexport default function subMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMinutes(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addQuarters from '../addQuarters/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subQuarters\n * @category Quarter Helpers\n * @summary Subtract the specified number of year quarters from the given date.\n *\n * @description\n * Subtract the specified number of year quarters from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the quarters subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 3 quarters from 1 September 2014:\n * var result = subQuarters(new Date(2014, 8, 1), 3)\n * //=> Sun Dec 01 2013 00:00:00\n */\n\nexport default function subQuarters(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addQuarters(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addSeconds from '../addSeconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subSeconds\n * @category Second Helpers\n * @summary Subtract the specified number of seconds from the given date.\n *\n * @description\n * Subtract the specified number of seconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the seconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 30 seconds from 10 July 2014 12:45:00:\n * var result = subSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:44:30\n */\n\nexport default function subSeconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addSeconds(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addWeeks from '../addWeeks/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subWeeks\n * @category Week Helpers\n * @summary Subtract the specified number of weeks from the given date.\n *\n * @description\n * Subtract the specified number of weeks from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the weeks subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 4 weeks from 1 September 2014:\n * var result = subWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Aug 04 2014 00:00:00\n */\n\nexport default function subWeeks(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addWeeks(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addYears from '../addYears/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subYears\n * @category Year Helpers\n * @summary Subtract the specified number of years from the given date.\n *\n * @description\n * Subtract the specified number of years from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 years from 1 September 2014:\n * var result = subYears(new Date(2014, 8, 1), 5)\n * //=> Tue Sep 01 2009 00:00:00\n */\n\nexport default function subYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addYears(dirtyDate, -amount);\n}","/**\n *  Maximum allowed time.\n *  @constant\n *  @type {number}\n *  @default\n */\nexport var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n/**\n *  Minimum allowed time.\n *  @constant\n *  @type {number}\n *  @default\n */\n\nexport var minTime = -maxTime;","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport setUTCDay from '../../../_lib/setUTCDay/index.js';\nimport setUTCISODay from '../../../_lib/setUTCISODay/index.js';\nimport setUTCISOWeek from '../../../_lib/setUTCISOWeek/index.js';\nimport setUTCWeek from '../../../_lib/setUTCWeek/index.js';\nimport startOfUTCISOWeek from '../../../_lib/startOfUTCISOWeek/index.js';\nimport startOfUTCWeek from '../../../_lib/startOfUTCWeek/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function (date, flags, value, _options) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['R', 'u', 't', 'T']\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, _options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (_date, _flags, value, _options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['b', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 't', 'T']\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'k', 't', 'T']\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function (date, _flags, value, _options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Fraction of second\n  S: {\n    priority: 30,\n    parse: function (string, token, _match, _options) {\n      var valueCallback = function (value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'x']\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'X']\n  },\n  // Seconds timestamp\n  t: {\n    priority: 40,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 20,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  }\n};\nexport default parsers;","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport getUTCWeek from '../getUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport getUTCISOWeek from '../getUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport assign from '../_lib/assign/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport parsers from './_lib/parsers/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Su            | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 0001, ..., 999               |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Old `parse` was renamed to `toDate`.\n *   Now `parse` is a new function which parses a string using a provided format.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   toDate('2016-01-01')\n *   parse('2016-01-01', 'yyyy-MM-dd', new Date())\n *   ```\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} referenceDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\n\nexport default function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {\n  requiredArgs(3, arguments);\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyReferenceDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale // If timezone isn't specified, it will be set to the system timezone\n\n  };\n  var setters = [{\n    priority: TIMEZONE_UNIT_PRIORITY,\n    set: dateToSystemTimezone,\n    index: 0\n  }];\n  var i;\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, subFnOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {\n      throwProtectedError(token);\n    }\n\n    if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {\n      throwProtectedError(token);\n    }\n\n    var firstCharacter = token[0];\n    var parser = parsers[firstCharacter];\n\n    if (parser) {\n      var incompatibleTokens = parser.incompatibleTokens;\n\n      if (Array.isArray(incompatibleTokens)) {\n        var incompatibleToken = void 0;\n\n        for (var _i = 0; _i < usedTokens.length; _i++) {\n          var usedToken = usedTokens[_i].token;\n\n          if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {\n            incompatibleToken = usedTokens[_i];\n            break;\n          }\n        }\n\n        if (incompatibleToken) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n        }\n      } else if (parser.incompatibleTokens === '*' && usedTokens.length) {\n        throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n      }\n\n      usedTokens.push({\n        token: firstCharacter,\n        fullToken: token\n      });\n      var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);\n\n      if (!parseResult) {\n        return new Date(NaN);\n      }\n\n      setters.push({\n        priority: parser.priority,\n        set: parser.set,\n        validate: parser.validate,\n        value: parseResult.value,\n        index: setters.length\n      });\n      dateString = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n      } // Replace two single quote characters with one single quote character\n\n\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      } // Cut token from string, or, if string doesn't match the token, return Invalid Date\n\n\n      if (dateString.indexOf(token) === 0) {\n        dateString = dateString.slice(token.length);\n      } else {\n        return new Date(NaN);\n      }\n    }\n  } // Check if the remaining input contains something other than whitespace\n\n\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).reverse();\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate(dirtyReferenceDate);\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37\n\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n\n  for (i = 0; i < uniquePrioritySetters.length; i++) {\n    var setter = uniquePrioritySetters[i];\n\n    if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {\n      return new Date(NaN);\n    }\n\n    var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)\n\n    if (result[0]) {\n      utcDate = result[0];\n      assign(flags, result[1]); // Result is date\n    } else {\n      utcDate = result;\n    }\n  }\n\n  return utcDate;\n}\n\nfunction dateToSystemTimezone(date, flags) {\n  if (flags.timestampIsSet) {\n    return date;\n  }\n\n  var convertedDate = new Date(0);\n  convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n  convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return convertedDate;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toInteger from '../toInteger/index.js';\nimport getUTCWeekYear from '../getUTCWeekYear/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport startOfUTCWeekYear from '../startOfUTCWeekYear/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import getUTCISOWeekYear from '../getUTCISOWeekYear/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport startOfUTCISOWeekYear from '../startOfUTCISOWeekYear/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","var createCompounder = require('./_createCompounder'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts `string` to\n * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n *\n * @static\n * @memberOf _\n * @since 3.1.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the start cased string.\n * @example\n *\n * _.startCase('--foo-bar--');\n * // => 'Foo Bar'\n *\n * _.startCase('fooBar');\n * // => 'Foo Bar'\n *\n * _.startCase('__FOO_BAR__');\n * // => 'FOO BAR'\n */\nvar startCase = createCompounder(function(result, word, index) {\n  return result + (index ? ' ' : '') + upperFirst(word);\n});\n\nmodule.exports = startCase;\n","var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n","var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n","/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */\n\nvar hasElementType = typeof Element !== 'undefined';\nvar hasMap = typeof Map === 'function';\nvar hasSet = typeof Set === 'function';\nvar hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView;\n\n// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js\n\nfunction equal(a, b) {\n  // START: fast-deep-equal es6/index.js 3.1.1\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    // START: Modifications:\n    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code\n    //    to co-exist with es5.\n    // 2. Replace `for of` with es5 compliant iteration using `for`.\n    //    Basically, take:\n    //\n    //    ```js\n    //    for (i of a.entries())\n    //      if (!b.has(i[0])) return false;\n    //    ```\n    //\n    //    ... and convert to:\n    //\n    //    ```js\n    //    it = a.entries();\n    //    while (!(i = it.next()).done)\n    //      if (!b.has(i.value[0])) return false;\n    //    ```\n    //\n    //    **Note**: `i` access switches to `i.value`.\n    var it;\n    if (hasMap && (a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!equal(i.value[1], b.get(i.value[0]))) return false;\n      return true;\n    }\n\n    if (hasSet && (a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      return true;\n    }\n    // END: Modifications\n\n    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    // END: fast-deep-equal\n\n    // START: react-fast-compare\n    // custom handling for DOM elements\n    if (hasElementType && a instanceof Element) return false;\n\n    // custom handling for React/Preact\n    for (i = length; i-- !== 0;) {\n      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner\n        // Preact-specific: avoid traversing Preact elements' __v and __o\n        //    __v = $_original / $_vnode\n        //    __o = $_owner\n        // These properties contain circular references and are not needed when\n        // comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of elements\n\n        continue;\n      }\n\n      // all other properties should be traversed as usual\n      if (!equal(a[keys[i]], b[keys[i]])) return false;\n    }\n    // END: react-fast-compare\n\n    // START: fast-deep-equal\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nmodule.exports = function isEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if (((error.message || '').match(/stack|recursion/i))) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('react-fast-compare cannot handle circular refs');\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};\n","'use strict'\nfunction __export(m) {\n  for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p]\n}\nObject.defineProperty(exports, '__esModule', { value: true })\n__export(require('./convertTokens'))\nvar legacyParse_1 = require('./legacyParse')\nexports.legacyParse = legacyParse_1.default\nvar legacyParseMap_1 = require('./legacyParseMap')\nexports.legacyParseMap = legacyParseMap_1.default\n//# sourceMappingURL=index.js.map\n","'use strict'\nObject.defineProperty(exports, '__esModule', { value: true })\nvar tokensMap = {\n  // 'D MMMM': '',\n  // 'Do MMMM': '',\n  // 'DD MMMM': '',\n  M: 'L',\n  Mo: 'Mo',\n  MM: 'LL',\n  MMM: 'LLL',\n  MMMM: 'LLLL',\n  Q: 'q',\n  Qo: 'qo',\n  D: 'd',\n  Do: 'do',\n  DD: 'dd',\n  DDD: 'D',\n  DDDo: 'Do',\n  DDDD: 'DDD',\n  d: 'i',\n  do: 'io',\n  dd: 'iiiiii',\n  ddd: 'iii',\n  dddd: 'iiii',\n  A: 'a',\n  a: 'a',\n  aa: 'aaaa',\n  E: 'i',\n  W: 'I',\n  Wo: 'Io',\n  WW: 'II',\n  YY: 'yy',\n  YYYY: 'yyyy',\n  GG: 'RR',\n  GGGG: 'RRRR',\n  H: 'H',\n  HH: 'HH',\n  h: 'h',\n  hh: 'hh',\n  m: 'm',\n  mm: 'mm',\n  s: 's',\n  ss: 'ss',\n  S: 'S',\n  SS: 'SS',\n  SSS: 'SSS',\n  Z: 'xxx',\n  ZZ: 'xx',\n  X: 't',\n  x: 'T'\n}\nvar v1tokens = Object.keys(tokensMap)\n  .sort()\n  .reverse()\nvar tokensRegExp = new RegExp(\n  '(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?' + '(' + v1tokens.join('|') + '|.)',\n  'g'\n)\nfunction convertTokens(format) {\n  var tokensCaptures = format.match(tokensRegExp)\n  if (tokensCaptures) {\n    return tokensCaptures\n      .reduce(\n        function(acc, tokenString, index) {\n          var v2token = tokensMap[tokenString]\n          if (!v2token) {\n            var escapedCaptures = tokenString.match(/^\\[(.+)\\]$/)\n            if (escapedCaptures) {\n              acc.textBuffer.push(escapedCaptures[1])\n            } else {\n              acc.textBuffer.push(tokenString)\n            }\n          }\n          var endOfString = index === tokensCaptures.length - 1\n          if (acc.textBuffer.length && (v2token || endOfString)) {\n            acc.formatBuffer.push(\"'\" + acc.textBuffer.join('') + \"'\")\n            acc.textBuffer = []\n          }\n          if (v2token) acc.formatBuffer.push(v2token)\n          return acc\n        },\n        { formatBuffer: [], textBuffer: [] }\n      )\n      .formatBuffer.join('')\n  } else {\n    return format\n  }\n}\nexports.convertTokens = convertTokens\n//# sourceMappingURL=index.js.map\n","'use strict'\nObject.defineProperty(exports, '__esModule', { value: true })\nvar legacyParse_1 = require('../legacyParse')\nfunction legacyParseMap(array) {\n  return array.map(function(item) {\n    return legacyParse_1.default(item)\n  })\n}\nexports.default = legacyParseMap\n//# sourceMappingURL=index.js.map\n","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A menu item may include a header or may itself be a header.\n */\n\nfunction MenuHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('header', className);\n  var rest = getUnhandledProps(MenuHeader, props);\n  var ElementType = getElementType(MenuHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMenuHeader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMenuHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default MenuHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _startCase from \"lodash/startCase\";\nimport _invoke from \"lodash/invoke\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * A menu can contain an item.\n */\n\nvar MenuItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MenuItem, _Component);\n\n  function MenuItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MenuItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MenuItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      var disabled = _this.props.disabled;\n      if (!disabled) _invoke(_this.props, 'onClick', e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(MenuItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          active = _this$props.active,\n          children = _this$props.children,\n          className = _this$props.className,\n          color = _this$props.color,\n          content = _this$props.content,\n          disabled = _this$props.disabled,\n          fitted = _this$props.fitted,\n          header = _this$props.header,\n          icon = _this$props.icon,\n          link = _this$props.link,\n          name = _this$props.name,\n          onClick = _this$props.onClick,\n          position = _this$props.position;\n      var classes = cx(color, position, useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(icon === true || icon && !(name || content), 'icon'), useKeyOnly(header, 'header'), useKeyOnly(link, 'link'), useKeyOrValueAndKey(fitted, 'fitted'), 'item', className);\n      var ElementType = getElementType(MenuItem, this.props, function () {\n        if (onClick) return 'a';\n      });\n      var rest = getUnhandledProps(MenuItem, this.props);\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          onClick: this.handleClick\n        }), children);\n      }\n\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        onClick: this.handleClick\n      }), Icon.create(icon, {\n        autoGenerateKey: false\n      }), childrenUtils.isNil(content) ? _startCase(name) : content);\n    }\n  }]);\n\n  return MenuItem;\n}(Component);\n\n_defineProperty(MenuItem, \"handledProps\", [\"active\", \"as\", \"children\", \"className\", \"color\", \"content\", \"disabled\", \"fitted\", \"header\", \"icon\", \"index\", \"link\", \"name\", \"onClick\", \"position\"]);\n\nexport { MenuItem as default };\nMenuItem.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A menu item can be active. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Additional colors can be specified. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A menu item can be disabled. */\n  disabled: PropTypes.bool,\n\n  /** A menu item or menu can remove element padding, vertically or horizontally. */\n  fitted: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\n\n  /** A menu item may include a header or may itself be a header. */\n  header: PropTypes.bool,\n\n  /** MenuItem can be only icon. */\n  icon: PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand]),\n\n  /** MenuItem index inside Menu. */\n  index: PropTypes.number,\n\n  /** A menu item can be link. */\n  link: PropTypes.bool,\n\n  /** Internal name of the MenuItem. */\n  name: PropTypes.string,\n\n  /**\n   * Called on click. When passed, the component will render as an `a`\n   * tag by default instead of a `div`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A menu item can take left or right position. */\n  position: PropTypes.oneOf(['left', 'right'])\n} : {};\nMenuItem.create = createShorthandFactory(MenuItem, function (val) {\n  return {\n    content: val,\n    name: val\n  };\n});","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A menu can contain a sub menu.\n */\n\nfunction MenuMenu(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      position = props.position;\n  var classes = cx(position, 'menu', className);\n  var rest = getUnhandledProps(MenuMenu, props);\n  var ElementType = getElementType(MenuMenu, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMenuMenu.handledProps = [\"as\", \"children\", \"className\", \"content\", \"position\"];\nMenuMenu.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A sub menu can take left or right position. */\n  position: PropTypes.oneOf(['left', 'right'])\n} : {};\nexport default MenuMenu;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _map from \"lodash/map\";\nimport _invoke from \"lodash/invoke\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { AutoControlledComponent as Component, childrenUtils, customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey, useWidthProp } from '../../lib';\nimport MenuHeader from './MenuHeader';\nimport MenuItem from './MenuItem';\nimport MenuMenu from './MenuMenu';\n/**\n * A menu displays grouped navigation actions.\n * @see Dropdown\n */\n\nvar Menu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Menu, _Component);\n\n  function Menu() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Menu)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleItemOverrides\", function (predefinedProps) {\n      return {\n        onClick: function onClick(e, itemProps) {\n          var index = itemProps.index;\n\n          _this.trySetState({\n            activeIndex: index\n          });\n\n          _invoke(predefinedProps, 'onClick', e, itemProps);\n\n          _invoke(_this.props, 'onItemClick', e, itemProps);\n        }\n      };\n    });\n\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"renderItems\",\n    value: function renderItems() {\n      var _this2 = this;\n\n      var items = this.props.items;\n      var activeIndex = this.state.activeIndex;\n      return _map(items, function (item, index) {\n        return MenuItem.create(item, {\n          defaultProps: {\n            active: parseInt(activeIndex, 10) === index,\n            index: index\n          },\n          overrideProps: _this2.handleItemOverrides\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          attached = _this$props.attached,\n          borderless = _this$props.borderless,\n          children = _this$props.children,\n          className = _this$props.className,\n          color = _this$props.color,\n          compact = _this$props.compact,\n          fixed = _this$props.fixed,\n          floated = _this$props.floated,\n          fluid = _this$props.fluid,\n          icon = _this$props.icon,\n          inverted = _this$props.inverted,\n          pagination = _this$props.pagination,\n          pointing = _this$props.pointing,\n          secondary = _this$props.secondary,\n          size = _this$props.size,\n          stackable = _this$props.stackable,\n          tabular = _this$props.tabular,\n          text = _this$props.text,\n          vertical = _this$props.vertical,\n          widths = _this$props.widths;\n      var classes = cx('ui', color, size, useKeyOnly(borderless, 'borderless'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(inverted, 'inverted'), useKeyOnly(pagination, 'pagination'), useKeyOnly(pointing, 'pointing'), useKeyOnly(secondary, 'secondary'), useKeyOnly(stackable, 'stackable'), useKeyOnly(text, 'text'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(floated, 'floated'), useKeyOrValueAndKey(icon, 'icon'), useKeyOrValueAndKey(tabular, 'tabular'), useValueAndKey(fixed, 'fixed'), useWidthProp(widths, 'item'), className, 'menu');\n      var rest = getUnhandledProps(Menu, this.props);\n      var ElementType = getElementType(Menu, this.props);\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), childrenUtils.isNil(children) ? this.renderItems() : children);\n    }\n  }]);\n\n  return Menu;\n}(Component);\n\n_defineProperty(Menu, \"autoControlledProps\", ['activeIndex']);\n\n_defineProperty(Menu, \"Header\", MenuHeader);\n\n_defineProperty(Menu, \"Item\", MenuItem);\n\n_defineProperty(Menu, \"Menu\", MenuMenu);\n\n_defineProperty(Menu, \"handledProps\", [\"activeIndex\", \"as\", \"attached\", \"borderless\", \"children\", \"className\", \"color\", \"compact\", \"defaultActiveIndex\", \"fixed\", \"floated\", \"fluid\", \"icon\", \"inverted\", \"items\", \"onItemClick\", \"pagination\", \"pointing\", \"secondary\", \"size\", \"stackable\", \"tabular\", \"text\", \"vertical\", \"widths\"]);\n\nMenu.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Index of the currently active item. */\n  activeIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** A menu may be attached to other content segments. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** A menu item or menu can have no borders. */\n  borderless: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Additional colors can be specified. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A menu can take up only the space necessary to fit its content. */\n  compact: PropTypes.bool,\n\n  /** Initial activeIndex value. */\n  defaultActiveIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** A menu can be fixed to a side of its context. */\n  fixed: PropTypes.oneOf(['left', 'right', 'bottom', 'top']),\n\n  /** A menu can be floated. */\n  floated: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['right'])]),\n\n  /** A vertical menu may take the size of its container. */\n  fluid: PropTypes.bool,\n\n  /** A menu may have just icons (bool) or labeled icons. */\n  icon: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['labeled'])]),\n\n  /** A menu may have its colors inverted to show greater contrast. */\n  inverted: PropTypes.bool,\n\n  /** Shorthand array of props for Menu. */\n  items: customPropTypes.collectionShorthand,\n\n  /**\n   * onClick handler for MenuItem. Mutually exclusive with children.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All item props.\n   */\n  onItemClick: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.func]),\n\n  /** A pagination menu is specially formatted to present links to pages of content. */\n  pagination: PropTypes.bool,\n\n  /** A menu can point to show its relationship to nearby content. */\n  pointing: PropTypes.bool,\n\n  /** A menu can adjust its appearance to de-emphasize its contents. */\n  secondary: PropTypes.bool,\n\n  /** A menu can vary in size. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium', 'big')),\n\n  /** A menu can stack at mobile resolutions. */\n  stackable: PropTypes.bool,\n\n  /** A menu can be formatted to show tabs of information. */\n  tabular: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['right'])]),\n\n  /** A menu can be formatted for text content. */\n  text: PropTypes.bool,\n\n  /** A vertical menu displays elements vertically. */\n  vertical: PropTypes.bool,\n\n  /** A menu can have its items divided evenly. */\n  widths: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nMenu.create = createShorthandFactory(Menu, function (items) {\n  return {\n    items: items\n  };\n});\nexport default Menu;","function shouldAppendLastSeparator(current: string, pattern: string, lastSeparator: string) {\n  return current.length + 1 === pattern.length && pattern.endsWith(lastSeparator);\n}\n\nfunction getFormattedString(pattern: string, value?: string | number) {\n  if (!value) {\n    return value;\n  }\n\n  const cleanValue = String(value).replace(/[^\\da-zA-Z\\n|]/g, '');\n  const blockSizes = pattern\n    .split(/[^\\da-zA-Z\\n|]/g)\n    .filter(Boolean)\n    .map(b => b.length);\n  const separators = pattern.split(/[\\da-zA-Z\\n|]/g).filter(Boolean);\n  const [firstSeparator] = separators;\n  const lastSeparator = separators[separators.length - 1];\n\n  if (pattern.startsWith(firstSeparator)) {\n    const afterReduce = separators.reduce(\n      (acc, cur, index) => {\n        const curBlockSize = blockSizes[index];\n        const beforeSlice = acc.value.slice(0, curBlockSize);\n        const afterSlice = acc.value.slice(curBlockSize);\n        const nextResult = beforeSlice ? acc.result.concat(cur, beforeSlice) : acc.result;\n\n        return {\n          result: nextResult,\n          value: afterSlice,\n        };\n      },\n      {\n        result: '',\n        value: cleanValue,\n      }\n    );\n\n    const res = afterReduce.result.slice(0, pattern.length);\n\n    if (shouldAppendLastSeparator(res, pattern, lastSeparator)) {\n      return res.concat(lastSeparator);\n    }\n\n    return res;\n  }\n\n  const afterReduce = blockSizes.reduce(\n    (acc, cur, index) => {\n      const curSeparator = separators[index] || '';\n      const replace = `$1${curSeparator}$2`;\n      const curSlice = cur + acc.prevSlice + acc.prevSeparator.length;\n      const curRegex = new RegExp(`(.{${curSlice}})(.)`);\n      const curValue = acc.value.replace(curRegex, replace);\n\n      return {\n        prevSeparator: curSeparator,\n        prevSlice: curSlice,\n        value: curValue,\n      };\n    },\n    {\n      prevSeparator: '',\n      prevSlice: 0,\n      value: cleanValue,\n    }\n  );\n\n  const res = afterReduce.value.slice(0, pattern.length);\n\n  if (shouldAppendLastSeparator(res, pattern, lastSeparator)) {\n    return res.concat(lastSeparator);\n  }\n\n  return res;\n}\n\nfunction formatStringByPattern(pattern: string): (value?: string | number) => string;\nfunction formatStringByPattern(pattern: string, value: string | number): string;\nfunction formatStringByPattern(pattern: string, value?: string | number) {\n  return value === undefined\n    ? (curriedValue: string | number) => getFormattedString(pattern, curriedValue)\n    : getFormattedString(pattern, value);\n}\n\nexport default formatStringByPattern;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nfunction toDate(argument) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added\n * @returns {Date} the new date with the days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * var result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nfunction addDays(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  date.setDate(date.getDate() + amount);\n  return date;\n}\n\n/**\n * @name isBefore\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date that should be before the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is before the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\n\nfunction isBefore(dirtyDate, dirtyDateToCompare) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() < dateToCompare.getTime();\n}\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nfunction startOfDay(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day?\n *\n * @description\n * Are the given dates in the same day?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n */\n\nfunction isSameDay(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}\n\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is today\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * var result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\n\nfunction isToday(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  return isSameDay(dirtyDate, Date.now());\n}\n\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\n\nfunction differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n  return yearDiff * 12 + monthDiff;\n}\n\n/**\n * This is intended to be used to compose event handlers\n * They are executed in order until one of them calls\n * `event.preventDefault()`. Not sure this is the best\n * way to do this, but it seems legit...\n * @param {Function} fns the event hanlder functions\n * @return {Function} the event handler to add to an element\n */\n\nfunction composeEventHandlers() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return function (event) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    return fns.some(function (fn) {\n      fn && fn.apply(void 0, [event].concat(args));\n      return event.defaultPrevented;\n    });\n  };\n}\n/**\n * Throws a helpful error message for required properties. Useful\n * to be used as a default in destructuring or object params.\n * @param {String} fnName the function name\n * @param {String} propName the prop name\n */\n\nfunction requiredProp(fnName, propName) {\n  throw new Error(\"The property \\\"\" + propName + \"\\\" is required in \\\"\" + fnName + \"\\\"\");\n}\n/**\n * Takes an argument and if it's an array, returns the first item in the array\n * otherwise returns the argument.\n * @param {*} arg the maybe-array\n * @return {*} the arg or it's first item\n */\n\nfunction unwrapChildrenForPreact(arg) {\n  arg = Array.isArray(arg) ?\n  /* istanbul ignore next (preact) */\n  arg[0] : arg;\n  return arg || noop;\n}\n\nfunction noop() {}\n/**\n * Takes a calendars array and figures out the number of months to subtract\n * based on the current offset and the minDate allowed.\n * @param {Object} param The param object\n * @param {Array} param.calendars The calendars array created by the getCalendars function\n * @param {Number} param.offset The num of months to be subtracted\n * @param {Date} param.minDate The earliest date we are allow to subtract back to\n * @returns {Number} The number of months to subtract\n */\n\n\nfunction subtractMonth(_ref) {\n  var calendars = _ref.calendars,\n      offset = _ref.offset,\n      minDate = _ref.minDate;\n\n  if (offset > 1 && minDate) {\n    var firstDayOfMonth = calendars[0].firstDayOfMonth;\n    var diffInMonths = differenceInCalendarMonths(firstDayOfMonth, minDate);\n\n    if (diffInMonths < offset) {\n      offset = diffInMonths;\n    }\n  }\n\n  return offset;\n}\n/**\n * Takes a calendars array and figures out the number of months to add\n * based on the current offset and the maxDate allowed.\n * @param {Object} param The param object\n * @param {Array} param.calendars The calendars array created by the getCalendars function\n * @param {Number} param.offset The num of months to be added\n * @param {Date} param.maxDate The furthest date we are allow to add forward to\n * @returns {Number} The number of months to add\n */\n\nfunction addMonth(_ref2) {\n  var calendars = _ref2.calendars,\n      offset = _ref2.offset,\n      maxDate = _ref2.maxDate;\n\n  if (offset > 1 && maxDate) {\n    var lastDayOfMonth = calendars[calendars.length - 1].lastDayOfMonth;\n    var diffInMonths = differenceInCalendarMonths(maxDate, lastDayOfMonth);\n\n    if (diffInMonths < offset) {\n      offset = diffInMonths;\n    }\n  }\n\n  return offset;\n}\n/**\n * Takes a calendars array and figures out if the back button should be\n * disabled based on the minDate allowed.\n * @param {Object} param The param object\n * @param {Array} param.calendars The calendars array created by the getCalendars function\n * @param {Date} param.minDate The earliest date available\n * @returns {Boolean} Whether the back button should be disabled.\n */\n\nfunction isBackDisabled(_ref3) {\n  var calendars = _ref3.calendars,\n      minDate = _ref3.minDate;\n\n  if (!minDate) {\n    return false;\n  }\n\n  var firstDayOfMonth = calendars[0].firstDayOfMonth;\n  var firstDayOfMonthMinusOne = addDays(firstDayOfMonth, -1);\n\n  if (isBefore(firstDayOfMonthMinusOne, minDate)) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * Takes a calendars array and figures out if the forward button should be\n * disabled based on the maxDate allowed.\n * @param {Object} param The param object\n * @param {Array} param.calendars The calendars array created by the getCalendars function\n * @param {Date} param.maxDate The furthest date available\n * @returns {Boolean} Whether the forward button should be disabled.\n */\n\nfunction isForwardDisabled(_ref4) {\n  var calendars = _ref4.calendars,\n      maxDate = _ref4.maxDate;\n\n  if (!maxDate) {\n    return false;\n  }\n\n  var lastDayOfMonth = calendars[calendars.length - 1].lastDayOfMonth;\n  var lastDayOfMonthPlusOne = addDays(lastDayOfMonth, 1);\n\n  if (isBefore(maxDate, lastDayOfMonthPlusOne)) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * Figures out the months data needed based off the number of monthsToDisplay\n * and other options provided.\n * @param {Object} param The param object\n * @param {Date} param.date The date to start the calendar at\n * @param {Array.<Date>} param.selected An array of dates currently selected\n * @param {Number} param.monthsToDisplay The number of months to return in the calendar view\n * @param {Number} param.offset The number of months to offset based off the param.date given\n * @param {Date} param.minDate The earliest date available\n * @param {Date} param.maxDate The furthest date available\n * @param {Number} param.firstDayOfWeek First day of week, 0-6 (Sunday to Saturday)\n * @param {Bool} param.showOutsideDays Flag to fill front and back weeks with dates from adjacent months\n * @returns {Array.<Object>} An array of objects with month data\n */\n\nfunction getCalendars(_ref5) {\n  var date = _ref5.date,\n      selected = _ref5.selected,\n      monthsToDisplay = _ref5.monthsToDisplay,\n      offset = _ref5.offset,\n      minDate = _ref5.minDate,\n      maxDate = _ref5.maxDate,\n      firstDayOfWeek = _ref5.firstDayOfWeek,\n      showOutsideDays = _ref5.showOutsideDays;\n  var months = [];\n  var startDate = getStartDate(date, minDate, maxDate);\n\n  for (var i = 0; i < monthsToDisplay; i++) {\n    var calendarDates = getMonths({\n      month: startDate.getMonth() + i + offset,\n      year: startDate.getFullYear(),\n      selectedDates: selected,\n      minDate: minDate,\n      maxDate: maxDate,\n      firstDayOfWeek: firstDayOfWeek,\n      showOutsideDays: showOutsideDays\n    });\n    months.push(calendarDates);\n  }\n\n  return months;\n}\n/**\n * Figures out the actual start date based on\n * the min and max dates available.\n * @param {Date} date The we want to start the calendar at\n * @param {Date} minDate The earliest date available to start at\n * @param {Date} maxDate The latest date available to start at\n * @returns {Date} The actual start date\n */\n\nfunction getStartDate(date, minDate, maxDate) {\n  var startDate = startOfDay(date);\n\n  if (minDate) {\n    var minDateNormalized = startOfDay(minDate);\n\n    if (isBefore(startDate, minDateNormalized)) {\n      startDate = minDateNormalized;\n    }\n  }\n\n  if (maxDate) {\n    var maxDateNormalized = startOfDay(maxDate);\n\n    if (isBefore(maxDateNormalized, startDate)) {\n      startDate = maxDateNormalized;\n    }\n  }\n\n  return startDate;\n}\n/**\n * Figures what week/day data to return for the given month\n * and year. Adds flags to day data if found in the given selectedDates,\n * if is selectable inside the given min and max dates, or is today.\n * @param {Object} param The param object\n * @param {Number} param.month The month to grab data for\n * @param {Number} param.year The year to grab data for\n * @param {Array.<Date>} sparam.electedDates An array of dates currently selected\n * @param {Date} param.minDate The earliest date available\n * @param {Date} param.maxDate The furthest date available\n * @param {Number} param.firstDayOfWeek First day of week, 0-6 (Sunday to Saturday)\n * @param {Bool} param.showOutsideDays Flag to fill front and back weeks with dates from adjacent months\n * @returns {Object} The data for the selected month/year\n */\n\n\nfunction getMonths(_ref6) {\n  var month = _ref6.month,\n      year = _ref6.year,\n      selectedDates = _ref6.selectedDates,\n      minDate = _ref6.minDate,\n      maxDate = _ref6.maxDate,\n      firstDayOfWeek = _ref6.firstDayOfWeek,\n      showOutsideDays = _ref6.showOutsideDays;\n  // Get the normalized month and year, along with days in the month.\n  var daysMonthYear = getNumDaysMonthYear(month, year);\n  var daysInMonth = daysMonthYear.daysInMonth;\n  month = daysMonthYear.month;\n  year = daysMonthYear.year; // Fill out the dates for the month.\n\n  var dates = [];\n\n  for (var day = 1; day <= daysInMonth; day++) {\n    var date = new Date(year, month, day);\n    var dateObj = {\n      date: date,\n      selected: isSelected(selectedDates, date),\n      selectable: isSelectable(minDate, maxDate, date),\n      today: isToday(date),\n      prevMonth: false,\n      nextMonth: false\n    };\n    dates.push(dateObj);\n  }\n\n  var firstDayOfMonth = new Date(year, month, 1);\n  var lastDayOfMonth = new Date(year, month, daysInMonth);\n  var frontWeekBuffer = fillFrontWeek({\n    firstDayOfMonth: firstDayOfMonth,\n    minDate: minDate,\n    maxDate: maxDate,\n    selectedDates: selectedDates,\n    firstDayOfWeek: firstDayOfWeek,\n    showOutsideDays: showOutsideDays\n  });\n  var backWeekBuffer = fillBackWeek({\n    lastDayOfMonth: lastDayOfMonth,\n    minDate: minDate,\n    maxDate: maxDate,\n    selectedDates: selectedDates,\n    firstDayOfWeek: firstDayOfWeek,\n    showOutsideDays: showOutsideDays\n  });\n  dates.unshift.apply(dates, frontWeekBuffer);\n  dates.push.apply(dates, backWeekBuffer); // Get the filled out weeks for the\n  // given dates.\n\n  var weeks = getWeeks(dates); // return the calendar data.\n\n  return {\n    firstDayOfMonth: firstDayOfMonth,\n    lastDayOfMonth: lastDayOfMonth,\n    month: month,\n    year: year,\n    weeks: weeks\n  };\n}\n/**\n * Fill front week with either empty buffer or dates from previous month,\n * depending on showOutsideDays flag\n * @param {Object} param The param object\n * @param {Array.<Date>} param.selectedDates An array of dates currently selected\n * @param {Date} param.minDate The earliest date available\n * @param {Date} param.maxDate The furthest date available\n * @param {Date} param.firstDayOfMonth First day of the month\n * @param {Number} param.firstDayOfWeek First day of week, 0-6 (Sunday to Saturday)\n * @param {Bool} param.showOutsideDays Flag to fill front and back weeks with dates from adjacent months\n * @returns {Array.<Date>} Buffer to fill front week\n */\n\n\nfunction fillFrontWeek(_ref7) {\n  var firstDayOfMonth = _ref7.firstDayOfMonth,\n      minDate = _ref7.minDate,\n      maxDate = _ref7.maxDate,\n      selectedDates = _ref7.selectedDates,\n      firstDayOfWeek = _ref7.firstDayOfWeek,\n      showOutsideDays = _ref7.showOutsideDays;\n  var dates = [];\n  var firstDay = (firstDayOfMonth.getDay() + 7 - firstDayOfWeek) % 7;\n\n  if (showOutsideDays) {\n    var lastDayOfPrevMonth = addDays(firstDayOfMonth, -1);\n    var prevDate = lastDayOfPrevMonth.getDate();\n    var prevDateMonth = lastDayOfPrevMonth.getMonth();\n    var prevDateYear = lastDayOfPrevMonth.getFullYear(); // Fill out front week for days from\n    // preceding month with dates from previous month.\n\n    var counter = 0;\n\n    while (counter < firstDay) {\n      var date = new Date(prevDateYear, prevDateMonth, prevDate - counter);\n      var dateObj = {\n        date: date,\n        selected: isSelected(selectedDates, date),\n        selectable: isSelectable(minDate, maxDate, date),\n        today: false,\n        prevMonth: true,\n        nextMonth: false\n      };\n      dates.unshift(dateObj);\n      counter++;\n    }\n  } else {\n    // Fill out front week for days from\n    // preceding month with buffer.\n    while (firstDay > 0) {\n      dates.unshift('');\n      firstDay--;\n    }\n  }\n\n  return dates;\n}\n/**\n * Fill back weeks with either empty buffer or dates from next month,\n * depending on showOutsideDays flag\n * @param {Object} param The param object\n * @param {Array.<Date>} param.selectedDates An array of dates currently selected\n * @param {Date} param.minDate The earliest date available\n * @param {Date} param.maxDate The furthest date available\n * @param {Date} param.lastDayOfMonth Last day of the month\n * @param {Number} param.firstDayOfWeek First day of week, 0-6 (Sunday to Saturday)\n * @param {Bool} param.showOutsideDays Flag to fill front and back weeks with dates from adjacent months\n * @returns {Array.<Date>} Buffer to fill back week\n */\n\n\nfunction fillBackWeek(_ref8) {\n  var lastDayOfMonth = _ref8.lastDayOfMonth,\n      minDate = _ref8.minDate,\n      maxDate = _ref8.maxDate,\n      selectedDates = _ref8.selectedDates,\n      firstDayOfWeek = _ref8.firstDayOfWeek,\n      showOutsideDays = _ref8.showOutsideDays;\n  var dates = [];\n  var lastDay = (lastDayOfMonth.getDay() + 7 - firstDayOfWeek) % 7;\n\n  if (showOutsideDays) {\n    var firstDayOfNextMonth = addDays(lastDayOfMonth, 1);\n    var nextDateMonth = firstDayOfNextMonth.getMonth();\n    var nextDateYear = firstDayOfNextMonth.getFullYear(); // Fill out back week for days from\n    // following month with dates from next month.\n\n    var counter = 0;\n\n    while (counter < 6 - lastDay) {\n      var date = new Date(nextDateYear, nextDateMonth, 1 + counter);\n      var dateObj = {\n        date: date,\n        selected: isSelected(selectedDates, date),\n        selectable: isSelectable(minDate, maxDate, date),\n        today: false,\n        prevMonth: false,\n        nextMonth: true\n      };\n      dates.push(dateObj);\n      counter++;\n    }\n  } else {\n    // Fill out back week for days from\n    // following month with buffer.\n    while (lastDay < 6) {\n      dates.push('');\n      lastDay++;\n    }\n  }\n\n  return dates;\n}\n/**\n * Normalizes month (could be overflow) and year pairs and returns the\n * normalized month and year along with the number of days in the month.\n * @param {Number} month The month to normalize\n * @param {Number} year The year to normalize\n * @returns {Object} The normalized month and year along with the number of days in the month\n */\n\n\nfunction getNumDaysMonthYear(month, year) {\n  // If a parameter you specify is outside of the expected range for Month or Day,\n  // JS Date attempts to update the date information in the Date object accordingly!\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setMonth\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/setDate\n  // Let Date handle the overflow of the month,\n  // which should return the normalized month and year.\n  var normalizedMonthYear = new Date(year, month, 1);\n  month = normalizedMonthYear.getMonth();\n  year = normalizedMonthYear.getFullYear(); // Overflow the date to the next month, then subtract the difference\n  // to get the number of days in the previous month.\n  // This will also account for leap years!\n\n  var daysInMonth = 32 - new Date(year, month, 32).getDate();\n  return {\n    daysInMonth: daysInMonth,\n    month: month,\n    year: year\n  };\n}\n/**\n * Takes an array of dates, and turns them into a multi dimensional\n * array with 7 entries for each week.\n * @param {Array.<Object>} dates An array of dates\n * @returns {Array} The weeks as a multi dimensional array\n */\n\n\nfunction getWeeks(dates) {\n  var weeksLength = Math.ceil(dates.length / 7);\n  var weeks = [];\n\n  for (var i = 0; i < weeksLength; i++) {\n    weeks[i] = [];\n\n    for (var x = 0; x < 7; x++) {\n      weeks[i].push(dates[i * 7 + x]);\n    }\n  }\n\n  return weeks;\n}\n/**\n * Normalizes dates to the beginning of the day,\n * then checks to see if the day given is found\n * in the selectedDates.\n * @param {Array.<Date>} selectedDates An array of dates currently selected\n * @param {Date} date The date to search with against selectedDates\n * @returns {Boolean} Whether day is found in selectedDates\n */\n\n\nfunction isSelected(selectedDates, date) {\n  selectedDates = Array.isArray(selectedDates) ? selectedDates : [selectedDates];\n  return selectedDates.some(function (selectedDate) {\n    if (selectedDate instanceof Date && startOfDay(selectedDate).getTime() === startOfDay(date).getTime()) {\n      return true;\n    }\n\n    return false;\n  });\n}\n/**\n * Checks to see if the date given is\n * between the min and max dates.\n * @param {Date} minDate The earliest date available\n * @param {Date} maxDate The furthest date available\n * @param {Date} date The date to compare with\n * @returns {Boolean} Whether the date is between min and max date\n */\n\n\nfunction isSelectable(minDate, maxDate, date) {\n  if (minDate && isBefore(date, minDate) || maxDate && isBefore(maxDate, date)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction isOffsetControlled(propOffset) {\n  return propOffset !== undefined;\n}\n\nfunction getOffset(prop, state) {\n  return isOffsetControlled(prop) ? prop : state;\n}\n\nfunction getDateProps(onDateSelected, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      onClick = _ref.onClick,\n      _ref$dateObj = _ref.dateObj,\n      dateObj = _ref$dateObj === void 0 ? requiredProp('getDateProps', 'dateObj') : _ref$dateObj,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"onClick\", \"dateObj\"]);\n\n  return _extends({\n    onClick: composeEventHandlers(onClick, function (event) {\n      onDateSelected(dateObj, event);\n    }),\n    disabled: !dateObj.selectable,\n    'aria-label': dateObj.date.toDateString(),\n    'aria-pressed': dateObj.selected,\n    role: 'button'\n  }, rest);\n}\n\nfunction getBackProps(_ref2, _temp2) {\n  var minDate = _ref2.minDate,\n      offsetMonth = _ref2.offsetMonth,\n      handleOffsetChanged = _ref2.handleOffsetChanged;\n\n  var _ref3 = _temp2 === void 0 ? {} : _temp2,\n      onClick = _ref3.onClick,\n      _ref3$offset = _ref3.offset,\n      offset = _ref3$offset === void 0 ? 1 : _ref3$offset,\n      _ref3$calendars = _ref3.calendars,\n      calendars = _ref3$calendars === void 0 ? requiredProp('getBackProps', 'calendars') : _ref3$calendars,\n      rest = _objectWithoutPropertiesLoose(_ref3, [\"onClick\", \"offset\", \"calendars\"]);\n\n  return _extends({\n    onClick: composeEventHandlers(onClick, function () {\n      handleOffsetChanged(offsetMonth - subtractMonth({\n        calendars: calendars,\n        offset: offset,\n        minDate: minDate\n      }));\n    }),\n    disabled: isBackDisabled({\n      calendars: calendars,\n      offset: offset,\n      minDate: minDate\n    }),\n    'aria-label': \"Go back \" + offset + \" month\" + (offset === 1 ? '' : 's')\n  }, rest);\n}\n\nfunction getForwardProps(_ref4, _temp3) {\n  var maxDate = _ref4.maxDate,\n      offsetMonth = _ref4.offsetMonth,\n      handleOffsetChanged = _ref4.handleOffsetChanged;\n\n  var _ref5 = _temp3 === void 0 ? {} : _temp3,\n      onClick = _ref5.onClick,\n      _ref5$offset = _ref5.offset,\n      offset = _ref5$offset === void 0 ? 1 : _ref5$offset,\n      _ref5$calendars = _ref5.calendars,\n      calendars = _ref5$calendars === void 0 ? requiredProp('getForwardProps', 'calendars') : _ref5$calendars,\n      rest = _objectWithoutPropertiesLoose(_ref5, [\"onClick\", \"offset\", \"calendars\"]);\n\n  return _extends({\n    onClick: composeEventHandlers(onClick, function () {\n      handleOffsetChanged(offsetMonth + addMonth({\n        calendars: calendars,\n        offset: offset,\n        maxDate: maxDate\n      }));\n    }),\n    disabled: isForwardDisabled({\n      calendars: calendars,\n      offset: offset,\n      maxDate: maxDate\n    }),\n    'aria-label': \"Go forward \" + offset + \" month\" + (offset === 1 ? '' : 's')\n  }, rest);\n}\n\nfunction useDayzed(_ref6) {\n  var _ref6$date = _ref6.date,\n      date = _ref6$date === void 0 ? new Date() : _ref6$date,\n      maxDate = _ref6.maxDate,\n      minDate = _ref6.minDate,\n      _ref6$monthsToDisplay = _ref6.monthsToDisplay,\n      monthsToDisplay = _ref6$monthsToDisplay === void 0 ? 1 : _ref6$monthsToDisplay,\n      _ref6$firstDayOfWeek = _ref6.firstDayOfWeek,\n      firstDayOfWeek = _ref6$firstDayOfWeek === void 0 ? 0 : _ref6$firstDayOfWeek,\n      _ref6$showOutsideDays = _ref6.showOutsideDays,\n      showOutsideDays = _ref6$showOutsideDays === void 0 ? false : _ref6$showOutsideDays,\n      offset = _ref6.offset,\n      onDateSelected = _ref6.onDateSelected,\n      _ref6$onOffsetChanged = _ref6.onOffsetChanged,\n      onOffsetChanged = _ref6$onOffsetChanged === void 0 ? function () {} : _ref6$onOffsetChanged,\n      selected = _ref6.selected;\n\n  var _useState = useState(0),\n      stateOffset = _useState[0],\n      setStateOffset = _useState[1];\n\n  var offsetMonth = getOffset(offset, stateOffset);\n\n  function handleOffsetChanged(newOffset) {\n    if (!isOffsetControlled(offset)) {\n      setStateOffset(newOffset);\n    }\n\n    onOffsetChanged(newOffset);\n  }\n\n  var calendars = getCalendars({\n    date: date,\n    selected: selected,\n    monthsToDisplay: monthsToDisplay,\n    minDate: minDate,\n    maxDate: maxDate,\n    offset: offsetMonth,\n    firstDayOfWeek: firstDayOfWeek,\n    showOutsideDays: showOutsideDays\n  });\n  return {\n    calendars: calendars,\n    getDateProps: getDateProps.bind(null, onDateSelected),\n    getBackProps: getBackProps.bind(null, {\n      minDate: minDate,\n      offsetMonth: offsetMonth,\n      handleOffsetChanged: handleOffsetChanged\n    }),\n    getForwardProps: getForwardProps.bind(null, {\n      maxDate: maxDate,\n      offsetMonth: offsetMonth,\n      handleOffsetChanged: handleOffsetChanged\n    })\n  };\n}\n\nfunction Dayzed(props) {\n  var dayzedCalendar = useDayzed(props);\n  var children = unwrapChildrenForPreact(props.render || props.children);\n  return children(dayzedCalendar);\n}\n\nDayzed.defaultProps = {\n  date: new Date(),\n  monthsToDisplay: 1,\n  onOffsetChanged: function onOffsetChanged() {},\n  firstDayOfWeek: 0,\n  showOutsideDays: false\n};\nDayzed.propTypes = {\n  render: PropTypes.func,\n  children: PropTypes.func,\n  date: PropTypes.instanceOf(Date),\n  maxDate: PropTypes.instanceOf(Date),\n  minDate: PropTypes.instanceOf(Date),\n  monthsToDisplay: PropTypes.number,\n  firstDayOfWeek: PropTypes.number,\n  showOutsideDays: PropTypes.bool,\n  offset: PropTypes.number,\n  onDateSelected: PropTypes.func.isRequired,\n  onOffsetChanged: PropTypes.func,\n  selected: PropTypes.oneOfType([PropTypes.arrayOf(Date), PropTypes.instanceOf(Date)])\n};\n\nexport default Dayzed;\nexport { useDayzed };\n","import format from 'date-fns/format';\nimport isBefore from 'date-fns/isBefore';\nimport startOfDay from 'date-fns/startOfDay';\nimport { Object } from './types';\n\nimport { convertTokens } from '@date-fns/upgrade/v2';\nimport { parse } from 'date-fns';\n\nexport const isSelectable = (date: Date, minDate?: Date, maxDate?: Date) => {\n  if (\n    (minDate && isBefore(date, minDate)) ||\n    (maxDate && isBefore(maxDate, date))\n  ) {\n    return false;\n  }\n\n  return true;\n};\n\nexport const getToday = (minDate?: Date, maxDate?: Date) => {\n  const today = new Date();\n\n  return {\n    date: startOfDay(today),\n    selectable: isSelectable(today, minDate, maxDate),\n    selected: false,\n    today: true,\n  };\n};\n\nexport const formatDate = (date: Date | null, dateFormat: string) =>\n  date ? format(startOfDay(date), convertTokens(dateFormat)) : undefined;\n\nexport const omit = (keysToOmit: string[], obj: Object) => {\n  const newObj = { ...obj };\n\n  keysToOmit.forEach((key) => delete newObj[key]);\n\n  return newObj;\n};\n\nexport const pick = (keysToPick: string[], obj: Object) => {\n  const newObj: Object = {};\n\n  keysToPick.forEach((key) => {\n    newObj[key] = obj[key];\n  });\n\n  return newObj;\n};\n\nexport const moveElementsByN = (n: number, arr: any[]) =>\n  arr.slice(n).concat(arr.slice(0, n));\n\nexport const formatSelectedDate = (\n  selectedDate: Date | Date[] | null,\n  dateFormat: string\n) => {\n  if (!selectedDate) {\n    return '';\n  }\n\n  return Array.isArray(selectedDate)\n    ? selectedDate.map((date) => formatDate(date, dateFormat)).join(' - ')\n    : formatDate(selectedDate, dateFormat);\n};\n\nexport const parseFormatString = (formatString: string) =>\n  formatString.replace(/[D, Y]/gi, (a) => a.toLowerCase());\n\nexport const parseOnBlur = (typedValue: string, formatString: string) => {\n  return parse(typedValue, parseFormatString(formatString), new Date());\n};\n\nexport const parseRangeOnBlur = (typedValue: string, formatString: string) => {\n  const parsedFormatString = parseFormatString(formatString);\n\n  const rangeValues = typedValue.split(' - ');\n\n  return rangeValues\n    .map((value) => parse(value, parsedFormatString, new Date()))\n    .sort((a, b) => (a > b ? 1 : -1));\n};\n\nexport const onlyNumbers = (value = '') => value.replace(/[^\\d]/g, '');\n\nexport function getShortDate(date?: Date) {\n  if (!date) {\n    return undefined;\n  }\n\n  return date.toISOString().slice(0, 10);\n}\n","/**\n * This is intended to be used to compose event handlers\n * They are executed in order until one of them calls\n * `event.preventDefault()`. Not sure this is the best\n * way to do this, but it seems legit...\n * @param {Function} fns the event hanlder functions\n * @return {Function} the event handler to add to an element\n */\nexport function composeEventHandlers(...fns) {\n  return (event, ...args) =>\n    fns.some((fn) => {\n      if (fn) {\n        fn(event, ...args);\n      }\n\n      return event.defaultPrevented;\n    });\n}\n\n/**\n * Create an event handler for keyboard key given a config map\n * of event handlers\n * @param {Object} config consists of left, right, up, and down\n * @return {Function} the event handler to handle keyboard key\n */\nexport function getArrowKeyHandlers(config) {\n  return (event) => {\n    const { keyCode } = event;\n    const fn = {\n      37: config.left,\n      39: config.right,\n      38: config.up,\n      40: config.down,\n    }[keyCode];\n    if (fn) {\n      fn(event);\n    }\n  };\n}\n\n/**\n * Checks if a given date is with date range\n * @param {Array} range the range array with upper and lower bound\n * @param {Date} date a given date\n * @return {Boolean} true if date is in the range, false otherwise\n */\nexport function isInRange(range, date) {\n  return range.length === 2 && range[0] <= date && range[1] >= date;\n}\n","import Dayzed from 'dayzed';\nimport React from 'react';\nimport { DayzedProps } from '../types';\nimport { getArrowKeyHandlers } from './utils';\n\nclass BaseDatePicker extends React.Component<DayzedProps> {\n  state = {\n    offset: 0,\n  };\n\n  rootNode = React.createRef<HTMLElement>();\n\n  handleArrowKeys = getArrowKeyHandlers({\n    left: () => {\n      this.getKeyOffset(-1);\n    },\n    right: () => {\n      this.getKeyOffset(1);\n    },\n    up: () => {\n      this.getKeyOffset(-7);\n    },\n    down: () => {\n      this.getKeyOffset(7);\n    },\n  });\n\n  getKeyOffset(number) {\n    if (!this.rootNode.current) {\n      return;\n    }\n\n    const e = document.activeElement;\n    const buttons = this.rootNode.current.querySelectorAll('button');\n    buttons.forEach((el, i) => {\n      const newNodeKey = i + number;\n      if (el === e) {\n        if (newNodeKey <= buttons.length - 1 && newNodeKey >= 0) {\n          buttons[newNodeKey].focus();\n        } else {\n          buttons[0].focus();\n        }\n      }\n    });\n  }\n\n  setRootNode = (ref) => {\n    this.rootNode = ref;\n  };\n\n  getRootProps = ({ refKey = 'ref', ...rest } = {}) => {\n    return {\n      [refKey]: this.setRootNode,\n      onKeyDown: this.handleArrowKeys,\n      ...rest,\n    };\n  };\n\n  _handleOffsetChanged = (offset) => {\n    this.setState({\n      offset,\n    });\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.date !== prevProps.date) {\n      this._handleOffsetChanged(0);\n    }\n  }\n\n  render() {\n    const { children, ...rest } = this.props;\n\n    return (\n      <Dayzed\n        {...rest}\n        offset={this.state.offset}\n        onOffsetChanged={this._handleOffsetChanged}\n        render={(renderProps) =>\n          children({\n            ...renderProps,\n            getRootProps: this.getRootProps,\n          })\n        }\n      />\n    );\n  }\n}\n\nexport default BaseDatePicker;\n","import React from 'react';\nimport { BasicDatePickerProps } from '../types';\nimport BaseDatePicker from './base';\n\nclass DatePicker extends React.Component<BasicDatePickerProps> {\n  _handleOnDateSelected = (\n    { selectable, date },\n    event: React.SyntheticEvent\n  ) => {\n    const { selected: selectedDate, onChange } = this.props;\n\n    if (!selectable) {\n      return;\n    }\n\n    let newDate = date;\n    if (selectedDate && selectedDate.getTime() === date.getTime()) {\n      newDate = null;\n    }\n\n    if (onChange) {\n      onChange(event, newDate);\n    }\n  };\n\n  render() {\n    return (\n      <BaseDatePicker\n        {...this.props}\n        onDateSelected={this._handleOnDateSelected}\n      />\n    );\n  }\n}\n\nexport default DatePicker;\n","import compareAsc from 'date-fns/compareAsc';\nimport isSameDay from 'date-fns/isSameDay';\nimport React from 'react';\nimport { RangeDatePickerProps } from '../types';\nimport BaseDatePicker from './base';\nimport { composeEventHandlers, isInRange } from './utils';\n\ntype RangeDatePickerState = {\n  hoveredDate: Date | null;\n};\n\nclass RangeDatePicker extends React.Component<\n  RangeDatePickerProps,\n  RangeDatePickerState\n> {\n  static defaultProps = {\n    selected: [],\n  };\n\n  state = { hoveredDate: null };\n\n  setHoveredDate = (date) => {\n    this.setState((state) =>\n      state.hoveredDate === date ? null : { hoveredDate: date }\n    );\n  };\n\n  // Calendar level\n  onMouseLeave = () => {\n    this.setHoveredDate(null);\n  };\n\n  // Date level\n  onHoverFocusDate(date) {\n    if (this.props.selected.length !== 1) {\n      return;\n    }\n    this.setHoveredDate(date);\n  }\n\n  _handleOnDateSelected = (\n    { selectable, date },\n    event: React.SyntheticEvent\n  ) => {\n    const { selected: selectedDates, onChange } = this.props;\n\n    if (!selectable) {\n      return;\n    }\n\n    const dateTime = date.getTime();\n    let newDates = [...selectedDates];\n    if (selectedDates.length) {\n      if (selectedDates.length === 1) {\n        const firstTime = selectedDates[0].getTime();\n        if (firstTime < dateTime) {\n          newDates.push(date);\n        } else {\n          newDates.unshift(date);\n        }\n      } else if (newDates.length === 2) {\n        newDates = [date];\n      }\n    } else {\n      newDates.push(date);\n    }\n\n    if (onChange) {\n      onChange(event, newDates);\n    }\n\n    if (newDates.length === 2) {\n      this.setHoveredDate(null);\n    }\n  };\n\n  getEnhancedDateProps = (\n    getDateProps,\n    dateBounds,\n    { onMouseEnter, onFocus, ...restProps }\n  ) => {\n    const { hoveredDate } = this.state;\n    const { date } = restProps.dateObj;\n    return getDateProps({\n      ...restProps,\n      inRange: isInRange(dateBounds, date),\n      start: dateBounds[0] && isSameDay(dateBounds[0], date),\n      end: dateBounds[1] && isSameDay(dateBounds[1], date),\n      // @ts-ignore\n      hovered: hoveredDate && isSameDay(hoveredDate, date),\n      onMouseEnter: composeEventHandlers(onMouseEnter, () => {\n        this.onHoverFocusDate(date);\n      }),\n      onFocus: composeEventHandlers(onFocus, () => {\n        this.onHoverFocusDate(date);\n      }),\n    });\n  };\n\n  getEnhancedRootProps = (getRootProps, props) =>\n    getRootProps({\n      ...props,\n      onMouseLeave: this.onMouseLeave,\n    });\n\n  render() {\n    const { children, ...rest } = this.props;\n    const { hoveredDate } = this.state;\n    const { selected } = this.props;\n\n    const dateBounds =\n      selected.length === 2 || !selected.length || !hoveredDate\n        ? selected\n        : // prettier-ignore\n          // @ts-ignore\n          [selected[0], hoveredDate].sort(compareAsc);\n\n    return (\n      <BaseDatePicker {...rest} onDateSelected={this._handleOnDateSelected}>\n        {({ getRootProps, getDateProps, ...renderProps }) =>\n          children({\n            ...renderProps,\n            getRootProps: this.getEnhancedRootProps.bind(this, getRootProps),\n            getDateProps: this.getEnhancedDateProps.bind(\n              this,\n              getDateProps,\n              dateBounds\n            ),\n          })\n        }\n      </BaseDatePicker>\n    );\n  }\n}\n\nexport default RangeDatePicker;\n","import React from 'react';\nimport { Button, ButtonProps } from 'semantic-ui-react';\n\nconst CustomButton = ({ icon, ...otherProps }: ButtonProps) => (\n  <Button basic compact icon={icon} {...otherProps} />\n);\n\nexport default CustomButton;\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import cn from 'classnames';\nimport React from 'react';\nimport './cell.css';\n\ntype CalendarCellProps = {\n  end?: boolean;\n  hovered?: boolean;\n  inRange?: boolean;\n  nextMonth?: boolean;\n  prevMonth?: boolean;\n  selectable?: boolean;\n  selected?: boolean;\n  start?: boolean;\n  today?: boolean;\n  title?: string;\n};\n\nconst CalendarCell: React.FC<CalendarCellProps> = ({\n  end,\n  hovered,\n  inRange,\n  nextMonth,\n  prevMonth,\n  selectable,\n  selected,\n  start,\n  today,\n  ...otherProps\n}) => (\n  <span\n    className={cn('clndr-cell', {\n      'clndr-cell-today': today,\n      'clndr-cell-disabled': !selectable,\n      'clndr-cell-other-month': nextMonth || prevMonth,\n      'clndr-cell-inrange': inRange,\n      'clndr-cell-selected': selected,\n    })}\n    {...otherProps}\n  />\n);\n\nCalendarCell.defaultProps = {\n  end: false,\n  hovered: false,\n  inRange: false,\n  nextMonth: false,\n  prevMonth: false,\n  start: false,\n};\n\nexport default CalendarCell;\n","import React from 'react';\nimport { Button } from 'semantic-ui-react';\n\ntype TodayButtonProps = {\n  end?: boolean;\n  hovered?: boolean;\n  inRange?: boolean;\n  selectable?: boolean;\n  selected?: boolean;\n  start?: boolean;\n  today?: boolean;\n};\n\nconst style: React.CSSProperties = { marginTop: 10 };\n\nconst TodayButton: React.FC<TodayButtonProps> = ({\n  end,\n  hovered,\n  inRange,\n  selectable,\n  selected,\n  start,\n  today,\n  ...otherProps\n}) => (\n  <Button\n    className=\"clndr-button-today\"\n    compact\n    data-testid=\"datepicker-today-button\"\n    fluid\n    style={style}\n    {...otherProps}\n  />\n);\n\nexport default TodayButton;\n","import cn from 'classnames';\nimport React, { Fragment } from 'react';\nimport { Segment } from 'semantic-ui-react';\nimport { Locale, SemanticDatepickerProps } from 'types';\nimport { getShortDate, getToday } from '../../utils';\nimport Button from '../button';\nimport CalendarCell from '../cell';\nimport TodayButton from '../today-button';\nimport './calendar.css';\n\ntype CalendarProps = {\n  calendars: any[];\n  filterDate: (date: Date) => boolean;\n  getBackProps: (props: any) => void;\n  getDateProps: (props: any) => void;\n  getForwardProps: (props: any) => void;\n  maxDate?: Date;\n  minDate?: Date;\n  months: Locale['months'];\n  nextMonth: string;\n  nextYear: string;\n  pointing: SemanticDatepickerProps['pointing'];\n  previousMonth: string;\n  previousYear: string;\n  showToday: boolean;\n  todayButton: string;\n  weekdays: Locale['weekdays'];\n};\n\nconst styles: { [key: string]: React.CSSProperties } = {\n  leftBtn: { textAlign: 'start' },\n  rightBtn: { textAlign: 'end' },\n};\n\nconst pointings = {\n  'top left': 'clndr-top clndr-left',\n  'top right': 'clndr-top clndr-right',\n  left: 'clndr-left',\n  right: 'clndr-right',\n};\n\nconst Calendar: React.FC<CalendarProps> = ({\n  calendars,\n  filterDate,\n  getBackProps,\n  getDateProps,\n  getForwardProps,\n  maxDate,\n  minDate,\n  months,\n  nextMonth,\n  nextYear,\n  previousMonth,\n  previousYear,\n  showToday,\n  todayButton,\n  weekdays,\n  pointing,\n}) => (\n  <Segment className={cn('clndr-calendars-segment', pointings[pointing])}>\n    <div\n      className=\"clndr-calendars-wrapper\"\n      style={{ '--n': calendars.length } as React.CSSProperties}\n    >\n      {calendars.map((calendar, calendarIdx) => (\n        <div key={`${calendar.year}-${calendar.month}`}>\n          <div className=\"clndr-control\">\n            <div style={styles.leftBtn}>\n              {calendarIdx === 0 && (\n                <Fragment>\n                  <Button\n                    icon=\"angle double left\"\n                    title={previousYear}\n                    {...getBackProps({ calendars, offset: 12 })}\n                  />\n                  <Button\n                    icon=\"angle left\"\n                    style={{ marginRight: 0 }}\n                    title={previousMonth}\n                    {...getBackProps({ calendars })}\n                  />\n                </Fragment>\n              )}\n            </div>\n\n            <span title={`${months[calendar.month]} ${calendar.year}`}>\n              {months[calendar.month].slice(0, 3)} {calendar.year}\n            </span>\n\n            <div style={styles.rightBtn}>\n              {calendarIdx === calendars.length - 1 && (\n                <Fragment>\n                  <Button\n                    icon=\"angle right\"\n                    title={nextMonth}\n                    {...getForwardProps({ calendars })}\n                  />\n                  <Button\n                    icon=\"angle double right\"\n                    style={{ marginRight: 0 }}\n                    title={nextYear}\n                    {...getForwardProps({ calendars, offset: 12 })}\n                  />\n                </Fragment>\n              )}\n            </div>\n          </div>\n          <div className=\"clndr-days\">\n            {weekdays.map((weekday) => (\n              <CalendarCell\n                key={`${calendar.year}-${calendar.month}-${weekday}`}\n                title={weekday}\n              >\n                {weekday.slice(0, 2)}\n              </CalendarCell>\n            ))}\n            {calendar.weeks.map((week) =>\n              week.map((dateObj, weekIdx) => {\n                const key = `${calendar.year}-${calendar.month}-${weekIdx}`;\n\n                if (!dateObj) {\n                  return <CalendarCell key={key} />;\n                }\n\n                const selectable =\n                  dateObj.selectable && filterDate(dateObj.date);\n                const shortDate = getShortDate(dateObj.date);\n\n                return (\n                  <CalendarCell\n                    key={key}\n                    {...dateObj}\n                    {...getDateProps({ dateObj: { ...dateObj, selectable } })}\n                    data-testid={`datepicker-cell-${shortDate}`}\n                    selectable={selectable}\n                  >\n                    {dateObj.date.getDate()}\n                  </CalendarCell>\n                );\n              })\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n    {showToday && (\n      <TodayButton\n        {...getToday(minDate, maxDate)}\n        {...getDateProps({\n          dateObj: getToday(minDate, maxDate),\n        })}\n      >\n        {todayButton}\n      </TodayButton>\n    )}\n  </Segment>\n);\n\nCalendar.defaultProps = {\n  pointing: 'left',\n  showToday: true,\n};\n\nexport default Calendar;\n","import React from 'react';\nimport { Form, Icon, Input, FormInputProps } from 'semantic-ui-react';\n\ntype InputProps = FormInputProps & {\n  isClearIconVisible: boolean;\n};\n\nconst CustomInput = React.forwardRef<Input, InputProps>((props, ref) => {\n  const {\n    icon,\n    isClearIconVisible,\n    label,\n    onClear,\n    onClick,\n    value,\n    ...rest\n  } = props;\n\n  return (\n    <Form.Field>\n      {label && <label>{label}</label>}\n      <Input\n        data-testid=\"datepicker-input\"\n        {...rest}\n        ref={ref}\n        icon={\n          <Icon\n            data-testid=\"datepicker-icon\"\n            link\n            name={isClearIconVisible ? 'close' : icon}\n            onClick={isClearIconVisible ? onClear : onClick}\n          />\n        }\n        onClick={onClick}\n        value={value}\n      />\n    </Form.Field>\n  );\n});\n\nCustomInput.defaultProps = {\n  icon: 'calendar',\n};\n\nexport default CustomInput;\n","import isValid from 'date-fns/isValid';\nimport formatStringByPattern from 'format-string-by-pattern';\nimport React from 'react';\nimport isEqual from 'react-fast-compare';\nimport { Input as SUIInput } from 'semantic-ui-react';\nimport {\n  formatSelectedDate,\n  moveElementsByN,\n  omit,\n  onlyNumbers,\n  parseOnBlur,\n  parseRangeOnBlur,\n  pick,\n} from './utils';\nimport { BasicDatePicker, RangeDatePicker } from './pickers';\nimport { Locale, SemanticDatepickerProps } from './types';\nimport Calendar from './components/calendar';\nimport Input from './components/input';\n\nconst style: React.CSSProperties = {\n  display: 'inline-block',\n  position: 'relative',\n};\nconst semanticInputProps = [\n  'autoComplete',\n  'disabled',\n  'error',\n  'icon',\n  'iconPosition',\n  'id',\n  'label',\n  'loading',\n  'name',\n  'onBlur',\n  'onChange',\n  'onClick',\n  'onContextMenu',\n  'onDoubleClick',\n  'onFocus',\n  'onInput',\n  'onKeyDown',\n  'onKeyPress',\n  'onKeyUp',\n  'onMouseDown',\n  'onMouseEnter',\n  'onMouseLeave',\n  'onMouseMove',\n  'onMouseOut',\n  'onMouseOver',\n  'onMouseUp',\n  'placeholder',\n  'required',\n  'size',\n  'transparent',\n  'readOnly',\n];\n\ntype SemanticDatepickerState = {\n  isVisible: boolean;\n  locale: Locale;\n  selectedDate: Date | Date[] | null;\n  selectedDateFormatted?: string;\n  typedValue: string | null;\n};\n\nclass SemanticDatepicker extends React.Component<\n  SemanticDatepickerProps,\n  SemanticDatepickerState\n> {\n  static defaultProps = {\n    allowOnlyNumbers: false,\n    clearOnSameDateClick: true,\n    clearable: true,\n    date: undefined,\n    filterDate: () => true,\n    firstDayOfWeek: 0,\n    format: 'YYYY-MM-DD',\n    id: undefined,\n    keepOpenOnClear: false,\n    keepOpenOnSelect: false,\n    label: undefined,\n    locale: 'en-US',\n    name: undefined,\n    onBlur: () => {},\n    onChange: () => {},\n    placeholder: undefined,\n    pointing: 'left',\n    readOnly: false,\n    datePickerOnly: false,\n    required: false,\n    showOutsideDays: false,\n    type: 'basic',\n    value: null,\n  };\n\n  el = React.createRef<HTMLDivElement>();\n  inputRef = React.createRef<SUIInput>();\n\n  componentDidUpdate(prevProps: SemanticDatepickerProps) {\n    const { locale, value } = this.props;\n\n    if (!isEqual(value, prevProps.value)) {\n      this.onDateSelected(undefined, value);\n    }\n\n    if (locale !== prevProps.locale) {\n      this.setState({ locale: this.locale });\n    }\n  }\n\n  get isRangeInput() {\n    return this.props.type === 'range';\n  }\n\n  get initialState() {\n    const { format, value } = this.props;\n    const initialSelectedDate = this.isRangeInput ? [] : null;\n\n    return {\n      isVisible: false,\n      locale: this.locale,\n      selectedDate: value || initialSelectedDate,\n      selectedDateFormatted: formatSelectedDate(value, format),\n      typedValue: null,\n    };\n  }\n\n  get dayzedProps() {\n    return omit(semanticInputProps, this.props);\n  }\n\n  get inputProps() {\n    const props = pick(semanticInputProps, this.props);\n    const placeholder =\n      props.placeholder !== undefined ? props.placeholder : this.props.format;\n\n    return {\n      ...props,\n      placeholder,\n    };\n  }\n\n  get date() {\n    const { selectedDate } = this.state;\n    const { date } = this.props;\n\n    if (!selectedDate) {\n      return date;\n    }\n\n    return this.isRangeInput ? selectedDate[0] : selectedDate;\n  }\n\n  get locale() {\n    const { locale } = this.props;\n\n    let localeJson: Locale;\n\n    try {\n      localeJson = require(`./locales/${locale}.json`);\n    } catch (e) {\n      console.warn(`\"${locale}\" is not a valid locale`);\n      localeJson = require('./locales/en-US.json');\n    }\n\n    return localeJson;\n  }\n\n  get weekdays() {\n    const { firstDayOfWeek } = this.dayzedProps;\n    const { weekdays } = this.state.locale;\n\n    return moveElementsByN(firstDayOfWeek, weekdays);\n  }\n\n  state = this.initialState;\n\n  Component: React.ElementType = this.isRangeInput\n    ? RangeDatePicker\n    : BasicDatePicker;\n\n  resetState = (event) => {\n    const { keepOpenOnClear, onChange } = this.props;\n    const newState = {\n      isVisible: keepOpenOnClear,\n      selectedDate: this.isRangeInput ? [] : null,\n      selectedDateFormatted: '',\n    };\n\n    this.setState(newState, () => {\n      onChange(event, { ...this.props, value: null });\n    });\n  };\n\n  clearInput = (event) => {\n    this.resetState(event);\n    this.handleBlur(event);\n  };\n\n  mousedownCb = (mousedownEvent) => {\n    const { isVisible } = this.state;\n\n    if (isVisible && this.el) {\n      if (this.el.current && !this.el.current.contains(mousedownEvent.target)) {\n        this.close(mousedownEvent);\n      }\n    }\n  };\n\n  keydownCb = (keydownEvent) => {\n    const { isVisible } = this.state;\n    if (keydownEvent.keyCode === 27 && isVisible) {\n      // Escape\n      this.close(keydownEvent);\n    }\n  };\n\n  close = (event) => {\n    window.removeEventListener('keydown', this.keydownCb);\n    window.removeEventListener('mousedown', this.mousedownCb);\n\n    this.handleBlur(event);\n    this.setState({\n      isVisible: false,\n    });\n  };\n\n  focusOnInput = () => {\n    if (this.inputRef?.current?.focus) {\n      this.inputRef.current.focus();\n    }\n  };\n\n  showCalendar = (event) => {\n    event.preventDefault();\n    window.addEventListener('mousedown', this.mousedownCb);\n    window.addEventListener('keydown', this.keydownCb);\n\n    this.focusOnInput();\n    this.setState({\n      isVisible: true,\n    });\n  };\n\n  handleRangeInput = (newDates, event, fromBlur = false) => {\n    const { format, keepOpenOnSelect, onChange } = this.props;\n\n    if (!newDates || !newDates.length) {\n      this.resetState(event);\n\n      if (!fromBlur) {\n        this.handleBlur(event);\n      }\n\n      return;\n    }\n\n    const newState = {\n      selectedDate: newDates,\n      selectedDateFormatted: formatSelectedDate(newDates, format),\n      typedValue: null,\n    };\n\n    this.setState(newState, () => {\n      onChange(event, { ...this.props, value: newDates });\n\n      if (newDates.length === 2) {\n        this.setState({ isVisible: keepOpenOnSelect });\n\n        if (keepOpenOnSelect) {\n          this.focusOnInput();\n        } else if (!fromBlur) {\n          this.handleBlur(event);\n        }\n      } else if (newDates.length === 1) {\n        this.focusOnInput();\n      } else if (!fromBlur) {\n        this.handleBlur(event);\n      }\n    });\n  };\n\n  handleBasicInput = (newDate, event, fromBlur = false) => {\n    const {\n      format,\n      keepOpenOnSelect,\n      onChange,\n      clearOnSameDateClick,\n    } = this.props;\n\n    if (!newDate) {\n      // if clearOnSameDateClick is true (this is the default case)\n      // then reset the state. This is what was previously the default\n      // behavior, without a specific prop.\n      if (clearOnSameDateClick) {\n        this.resetState(event);\n\n        if (!fromBlur) {\n          this.handleBlur(event);\n        }\n      } else {\n        // Don't reset the state. Instead, close or keep open the\n        // datepicker according to the value of keepOpenOnSelect.\n        // Essentially, follow the default behavior of clicking a date\n        // but without changing the value in state.\n        this.setState({\n          isVisible: keepOpenOnSelect,\n        });\n\n        if (keepOpenOnSelect) {\n          this.focusOnInput();\n        } else if (!fromBlur) {\n          this.handleBlur(event);\n        }\n      }\n\n      return;\n    }\n\n    const newState = {\n      isVisible: keepOpenOnSelect,\n      selectedDate: newDate,\n      selectedDateFormatted: formatSelectedDate(newDate, format),\n      typedValue: null,\n    };\n\n    if (keepOpenOnSelect) {\n      this.focusOnInput();\n    } else if (!fromBlur) {\n      this.handleBlur(event);\n    }\n\n    this.setState(newState, () => {\n      onChange(event, { ...this.props, value: newDate });\n    });\n  };\n\n  handleBlur = (event?: React.SyntheticEvent) => {\n    const { format, onBlur } = this.props;\n    const { typedValue } = this.state;\n\n    onBlur(event);\n\n    if (!typedValue) {\n      return;\n    }\n\n    if (this.isRangeInput) {\n      const parsedValue = parseRangeOnBlur(String(typedValue), format);\n      const areDatesValid = parsedValue.every(isValid);\n\n      if (areDatesValid) {\n        this.handleRangeInput(parsedValue, event, true);\n        return;\n      }\n    } else {\n      const parsedValue = parseOnBlur(String(typedValue), format);\n      const isDateValid = isValid(parsedValue);\n\n      if (isDateValid) {\n        this.handleBasicInput(parsedValue, event, true);\n        return;\n      }\n    }\n\n    this.setState({ typedValue: null });\n  };\n\n  handleChange = (event: React.SyntheticEvent, { value }) => {\n    const { allowOnlyNumbers, format, onChange } = this.props;\n    const formatString = this.isRangeInput ? `${format} - ${format}` : format;\n    const typedValue = allowOnlyNumbers ? onlyNumbers(value) : value;\n\n    if (!typedValue) {\n      const newState = {\n        selectedDate: this.isRangeInput ? [] : null,\n        selectedDateFormatted: '',\n        typedValue: null,\n      };\n\n      this.setState(newState, () => {\n        onChange(event, { ...this.props, value: null });\n      });\n\n      return;\n    }\n\n    this.setState({\n      selectedDate: this.isRangeInput ? [] : null,\n      selectedDateFormatted: '',\n      typedValue: formatStringByPattern(formatString, typedValue),\n    });\n  };\n\n  handleKeyDown = (evt) => {\n    // If the Enter key was pressed...\n    if (evt.keyCode === 13) {\n      this.handleBlur();\n    }\n  };\n\n  onDateSelected = (event: React.SyntheticEvent | undefined, dateOrDates) => {\n    if (this.isRangeInput) {\n      this.handleRangeInput(dateOrDates, event);\n    } else {\n      this.handleBasicInput(dateOrDates, event);\n    }\n  };\n\n  render() {\n    const {\n      isVisible,\n      locale,\n      selectedDate,\n      selectedDateFormatted,\n      typedValue,\n    } = this.state;\n    const {\n      clearable,\n      pointing,\n      filterDate,\n      readOnly,\n      datePickerOnly,\n    } = this.props;\n\n    return (\n      <div className=\"field\" style={style} ref={this.el}>\n        <Input\n          {...this.inputProps}\n          isClearIconVisible={Boolean(clearable && selectedDateFormatted)}\n          onBlur={() => {}}\n          onChange={this.handleChange}\n          onClear={this.clearInput}\n          onClick={readOnly ? null : this.showCalendar}\n          onKeyDown={this.handleKeyDown}\n          readOnly={readOnly || datePickerOnly}\n          ref={this.inputRef}\n          value={typedValue || selectedDateFormatted}\n        />\n        {isVisible && (\n          <this.Component\n            {...this.dayzedProps}\n            monthsToDisplay={this.isRangeInput ? 2 : 1}\n            onChange={this.onDateSelected}\n            selected={selectedDate}\n            date={this.date}\n          >\n            {(props) => (\n              <Calendar\n                {...this.dayzedProps}\n                {...props}\n                {...locale}\n                filterDate={filterDate}\n                pointing={pointing}\n                weekdays={this.weekdays}\n              />\n            )}\n          </this.Component>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default SemanticDatepicker;\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\n/**\n * A group of segments can be formatted to appear together.\n */\n\nfunction SegmentGroup(props) {\n  var children = props.children,\n      className = props.className,\n      compact = props.compact,\n      content = props.content,\n      horizontal = props.horizontal,\n      piled = props.piled,\n      raised = props.raised,\n      size = props.size,\n      stacked = props.stacked;\n  var classes = cx('ui', size, useKeyOnly(compact, 'compact'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(stacked, 'stacked'), 'segments', className);\n  var rest = getUnhandledProps(SegmentGroup, props);\n  var ElementType = getElementType(SegmentGroup, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentGroup.handledProps = [\"as\", \"children\", \"className\", \"compact\", \"content\", \"horizontal\", \"piled\", \"raised\", \"size\", \"stacked\"];\nSegmentGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Formats content to be aligned horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment group may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment group can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool\n} : {};\nexport default SegmentGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A placeholder segment can be inline.\n */\n\nfunction SegmentInline(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('inline', className);\n  var rest = getUnhandledProps(SegmentInline, props);\n  var ElementType = getElementType(SegmentInline, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegmentInline.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nSegmentInline.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default SegmentInline;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useTextAlignProp, useValueAndKey } from '../../lib';\nimport SegmentGroup from './SegmentGroup';\nimport SegmentInline from './SegmentInline';\n/**\n * A segment is used to create a grouping of related content.\n */\n\nfunction Segment(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      children = props.children,\n      circular = props.circular,\n      className = props.className,\n      clearing = props.clearing,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      disabled = props.disabled,\n      floated = props.floated,\n      inverted = props.inverted,\n      loading = props.loading,\n      placeholder = props.placeholder,\n      padded = props.padded,\n      piled = props.piled,\n      raised = props.raised,\n      secondary = props.secondary,\n      size = props.size,\n      stacked = props.stacked,\n      tertiary = props.tertiary,\n      textAlign = props.textAlign,\n      vertical = props.vertical;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(clearing, 'clearing'), useKeyOnly(compact, 'compact'), useKeyOnly(disabled, 'disabled'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(placeholder, 'placeholder'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(secondary, 'secondary'), useKeyOnly(stacked, 'stacked'), useKeyOnly(tertiary, 'tertiary'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), 'segment', className);\n  var rest = getUnhandledProps(Segment, props);\n  var ElementType = getElementType(Segment, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nSegment.handledProps = [\"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"clearing\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"inverted\", \"loading\", \"padded\", \"piled\", \"placeholder\", \"raised\", \"secondary\", \"size\", \"stacked\", \"tertiary\", \"textAlign\", \"vertical\"];\nSegment.Group = SegmentGroup;\nSegment.Inline = SegmentInline;\nSegment.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Attach segment to other content, like a header. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** A basic segment has no special formatting. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** A segment can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A segment can clear floated content. */\n  clearing: PropTypes.bool,\n\n  /** Segment can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A segment may show its content is disabled. */\n  disabled: PropTypes.bool,\n\n  /** Segment content can be floated to the left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A segment can have its colors inverted for contrast. */\n  inverted: PropTypes.bool,\n\n  /** A segment may show its content is being loaded. */\n  loading: PropTypes.bool,\n\n  /** A segment can increase its padding. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A segment can be used to reserve space for conditionally displayed content. */\n  placeholder: PropTypes.bool,\n\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n\n  /** A segment may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n\n  /** A segment can be formatted to appear less noticeable. */\n  secondary: PropTypes.bool,\n\n  /** A segment can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool,\n\n  /** A segment can be formatted to appear even less noticeable. */\n  tertiary: PropTypes.bool,\n\n  /** Formats content to be aligned as part of a vertical group. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified')),\n\n  /** Formats content to be aligned vertically. */\n  vertical: PropTypes.bool\n} : {};\nexport default Segment;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A list item can contain a description.\n */\n\nfunction ListDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx(className, 'description');\n  var rest = getUnhandledProps(ListDescription, props);\n  var ElementType = getElementType(ListDescription, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nListDescription.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nListDescription.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nListDescription.create = createShorthandFactory(ListDescription, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ListDescription;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A list item can contain a header.\n */\n\nfunction ListHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('header', className);\n  var rest = getUnhandledProps(ListHeader, props);\n  var ElementType = getElementType(ListHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nListHeader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nListHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nListHeader.create = createShorthandFactory(ListHeader, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ListHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useValueAndKey, useVerticalAlignProp } from '../../lib';\nimport ListDescription from './ListDescription';\nimport ListHeader from './ListHeader';\n/**\n * A list item can contain a content.\n */\n\nfunction ListContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      floated = props.floated,\n      header = props.header,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), 'content', className);\n  var rest = getUnhandledProps(ListContent, props);\n  var ElementType = getElementType(ListContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), ListHeader.create(header), ListDescription.create(description), content);\n}\n\nListContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"floated\", \"header\", \"verticalAlign\"];\nListContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for ListDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** An list content can be floated left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Shorthand for ListHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** An element inside a list can be vertically aligned. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nListContent.create = createShorthandFactory(ListContent, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ListContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { createShorthandFactory, getUnhandledProps, SUI, useVerticalAlignProp } from '../../lib';\nimport Icon from '../Icon/Icon';\n/**\n * A list item can contain an icon.\n */\n\nfunction ListIcon(props) {\n  var className = props.className,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(useVerticalAlignProp(verticalAlign), className);\n  var rest = getUnhandledProps(ListIcon, props);\n  return React.createElement(Icon, _extends({}, rest, {\n    className: classes\n  }));\n}\n\nListIcon.handledProps = [\"className\", \"verticalAlign\"];\nListIcon.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** An element inside a list can be vertically aligned. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nListIcon.create = createShorthandFactory(ListIcon, function (name) {\n  return {\n    name: name\n  };\n});\nexport default ListIcon;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _isPlainObject from \"lodash/isPlainObject\";\nimport _invoke from \"lodash/invoke\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component, isValidElement } from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\nimport Image from '../Image';\nimport ListContent from './ListContent';\nimport ListDescription from './ListDescription';\nimport ListHeader from './ListHeader';\nimport ListIcon from './ListIcon';\n/**\n * A list item can contain a set of items.\n */\n\nvar ListItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListItem, _Component);\n\n  function ListItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ListItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ListItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      var disabled = _this.props.disabled;\n      if (!disabled) _invoke(_this.props, 'onClick', e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(ListItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          active = _this$props.active,\n          children = _this$props.children,\n          className = _this$props.className,\n          content = _this$props.content,\n          description = _this$props.description,\n          disabled = _this$props.disabled,\n          header = _this$props.header,\n          icon = _this$props.icon,\n          image = _this$props.image,\n          value = _this$props.value;\n      var ElementType = getElementType(ListItem, this.props);\n      var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(ElementType !== 'li', 'item'), className);\n      var rest = getUnhandledProps(ListItem, this.props);\n      var valueProp = ElementType === 'li' ? {\n        value: value\n      } : {\n        'data-value': value\n      };\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({}, valueProp, {\n          role: \"listitem\",\n          className: classes,\n          onClick: this.handleClick\n        }, rest), children);\n      }\n\n      var iconElement = ListIcon.create(icon, {\n        autoGenerateKey: false\n      });\n      var imageElement = Image.create(image, {\n        autoGenerateKey: false\n      }); // See description of `content` prop for explanation about why this is necessary.\n\n      if (!isValidElement(content) && _isPlainObject(content)) {\n        return React.createElement(ElementType, _extends({}, valueProp, {\n          role: \"listitem\",\n          className: classes,\n          onClick: this.handleClick\n        }, rest), iconElement || imageElement, ListContent.create(content, {\n          autoGenerateKey: false,\n          defaultProps: {\n            header: header,\n            description: description\n          }\n        }));\n      }\n\n      var headerElement = ListHeader.create(header, {\n        autoGenerateKey: false\n      });\n      var descriptionElement = ListDescription.create(description, {\n        autoGenerateKey: false\n      });\n\n      if (iconElement || imageElement) {\n        return React.createElement(ElementType, _extends({}, valueProp, {\n          role: \"listitem\",\n          className: classes,\n          onClick: this.handleClick\n        }, rest), iconElement || imageElement, (content || headerElement || descriptionElement) && React.createElement(ListContent, null, headerElement, descriptionElement, content));\n      }\n\n      return React.createElement(ElementType, _extends({}, valueProp, {\n        role: \"listitem\",\n        className: classes,\n        onClick: this.handleClick\n      }, rest), headerElement, descriptionElement, content);\n    }\n  }]);\n\n  return ListItem;\n}(Component);\n\n_defineProperty(ListItem, \"handledProps\", [\"active\", \"as\", \"children\", \"className\", \"content\", \"description\", \"disabled\", \"header\", \"icon\", \"image\", \"onClick\", \"value\"]);\n\nListItem.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A list item can active. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /**\n   * Shorthand for primary content.\n   *\n   * Heads up!\n   *\n   * This is handled slightly differently than the typical `content` prop since\n   * the wrapping ListContent is not used when there's no icon or image.\n   *\n   * If you pass content as:\n   * - an element/literal, it's treated as the sibling node to\n   * header/description (whether wrapped in Item.Content or not).\n   * - a props object, it forces the presence of Item.Content and passes those\n   * props to it. If you pass a content prop within that props object, it\n   * will be treated as the sibling node to header/description.\n   */\n  content: customPropTypes.itemShorthand,\n\n  /** Shorthand for ListDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** A list item can disabled. */\n  disabled: PropTypes.bool,\n\n  /** Shorthand for ListHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for ListIcon. */\n  icon: customPropTypes.every([customPropTypes.disallow(['image']), customPropTypes.itemShorthand]),\n\n  /** Shorthand for Image. */\n  image: customPropTypes.every([customPropTypes.disallow(['icon']), customPropTypes.itemShorthand]),\n\n  /** A ListItem can be clicked */\n  onClick: PropTypes.func,\n\n  /** A value for an ordered list. */\n  value: PropTypes.string\n} : {};\nListItem.create = createShorthandFactory(ListItem, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ListItem;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A list can contain a sub list.\n */\n\nfunction ListList(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var rest = getUnhandledProps(ListList, props);\n  var ElementType = getElementType(ListList, props);\n  var classes = cx(useKeyOnly(ElementType !== 'ul' && ElementType !== 'ol', 'list'), className);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nListList.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nListList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default ListList;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _map from \"lodash/map\";\nimport _invoke from \"lodash/invoke\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey, useVerticalAlignProp } from '../../lib';\nimport ListContent from './ListContent';\nimport ListDescription from './ListDescription';\nimport ListHeader from './ListHeader';\nimport ListIcon from './ListIcon';\nimport ListItem from './ListItem';\nimport ListList from './ListList';\n/**\n * A list groups related content.\n */\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleItemOverrides\", function (predefinedProps) {\n      return {\n        onClick: function onClick(e, itemProps) {\n          _invoke(predefinedProps, 'onClick', e, itemProps);\n\n          _invoke(_this.props, 'onItemClick', e, itemProps);\n        }\n      };\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          animated = _this$props.animated,\n          bulleted = _this$props.bulleted,\n          celled = _this$props.celled,\n          children = _this$props.children,\n          className = _this$props.className,\n          content = _this$props.content,\n          divided = _this$props.divided,\n          floated = _this$props.floated,\n          horizontal = _this$props.horizontal,\n          inverted = _this$props.inverted,\n          items = _this$props.items,\n          link = _this$props.link,\n          ordered = _this$props.ordered,\n          relaxed = _this$props.relaxed,\n          selection = _this$props.selection,\n          size = _this$props.size,\n          verticalAlign = _this$props.verticalAlign;\n      var classes = cx('ui', size, useKeyOnly(animated, 'animated'), useKeyOnly(bulleted, 'bulleted'), useKeyOnly(celled, 'celled'), useKeyOnly(divided, 'divided'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), useKeyOnly(link, 'link'), useKeyOnly(ordered, 'ordered'), useKeyOnly(selection, 'selection'), useKeyOrValueAndKey(relaxed, 'relaxed'), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), 'list', className);\n      var rest = getUnhandledProps(List, this.props);\n      var ElementType = getElementType(List, this.props);\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({\n          role: \"list\",\n          className: classes\n        }, rest), children);\n      }\n\n      if (!childrenUtils.isNil(content)) {\n        return React.createElement(ElementType, _extends({\n          role: \"list\",\n          className: classes\n        }, rest), content);\n      }\n\n      return React.createElement(ElementType, _extends({\n        role: \"list\",\n        className: classes\n      }, rest), _map(items, function (item) {\n        return ListItem.create(item, {\n          overrideProps: _this2.handleItemOverrides\n        });\n      }));\n    }\n  }]);\n\n  return List;\n}(Component);\n\n_defineProperty(List, \"Content\", ListContent);\n\n_defineProperty(List, \"Description\", ListDescription);\n\n_defineProperty(List, \"Header\", ListHeader);\n\n_defineProperty(List, \"Icon\", ListIcon);\n\n_defineProperty(List, \"Item\", ListItem);\n\n_defineProperty(List, \"List\", ListList);\n\n_defineProperty(List, \"handledProps\", [\"animated\", \"as\", \"bulleted\", \"celled\", \"children\", \"className\", \"content\", \"divided\", \"floated\", \"horizontal\", \"inverted\", \"items\", \"link\", \"onItemClick\", \"ordered\", \"relaxed\", \"selection\", \"size\", \"verticalAlign\"]);\n\nList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A list can animate to set the current item apart from the list. */\n  animated: PropTypes.bool,\n\n  /** A list can mark items with a bullet. */\n  bulleted: PropTypes.bool,\n\n  /** A list can divide its items into cells. */\n  celled: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A list can show divisions between content. */\n  divided: PropTypes.bool,\n\n  /** An list can be floated left or right. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A list can be formatted to have items appear horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** A list can be inverted to appear on a dark background. */\n  inverted: PropTypes.bool,\n\n  /** Shorthand array of props for ListItem. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A list can be specially formatted for navigation links. */\n  link: PropTypes.bool,\n\n  /**\n   * onClick handler for ListItem. Mutually exclusive with children.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All item props.\n   */\n  onItemClick: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.func]),\n\n  /** A list can be ordered numerically. */\n  ordered: PropTypes.bool,\n\n  /** A list can relax its padding to provide more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A selection list formats list items as possible choices. */\n  selection: PropTypes.bool,\n\n  /** A list can vary in size. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** An element inside a list can be vertically aligned. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default List;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a description with one or more paragraphs.\n */\n\nfunction CardDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'description', className);\n  var rest = getUnhandledProps(CardDescription, props);\n  var ElementType = getElementType(CardDescription, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardDescription.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardDescription.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardDescription;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain a header.\n */\n\nfunction CardHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(CardHeader, props);\n  var ElementType = getElementType(CardHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card header can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useTextAlignProp } from '../../lib';\n/**\n * A card can contain content metadata.\n */\n\nfunction CardMeta(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'meta', className);\n  var rest = getUnhandledProps(CardMeta, props);\n  var ElementType = getElementType(CardMeta, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nCardMeta.handledProps = [\"as\", \"children\", \"className\", \"content\", \"textAlign\"];\nCardMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A card meta can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardMeta;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthand, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\nimport CardDescription from './CardDescription';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card can contain blocks of content or extra content meant to be formatted separately from the main content.\n */\n\nfunction CardContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta,\n      textAlign = props.textAlign;\n  var classes = cx(useKeyOnly(extra, 'extra'), useTextAlignProp(textAlign), 'content', className);\n  var rest = getUnhandledProps(CardContent, props);\n  var ElementType = getElementType(CardContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), createShorthand(CardHeader, function (val) {\n    return {\n      content: val\n    };\n  }, header, {\n    autoGenerateKey: false\n  }), createShorthand(CardMeta, function (val) {\n    return {\n      content: val\n    };\n  }, meta, {\n    autoGenerateKey: false\n  }), createShorthand(CardDescription, function (val) {\n    return {\n      content: val\n    };\n  }, description, {\n    autoGenerateKey: false\n  }));\n}\n\nCardContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"meta\", \"textAlign\"];\nCardContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** A card can contain extra content meant to be formatted separately from the main content. */\n  extra: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /** A card content can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp, useWidthProp } from '../../lib';\nimport Card from './Card';\n/**\n * A group of cards.\n */\n\nfunction CardGroup(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      doubling = props.doubling,\n      items = props.items,\n      itemsPerRow = props.itemsPerRow,\n      stackable = props.stackable,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), useWidthProp(itemsPerRow), 'cards', className);\n  var rest = getUnhandledProps(CardGroup, props);\n  var ElementType = getElementType(CardGroup, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  if (!childrenUtils.isNil(content)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n\n  var itemsJSX = _map(items, function (item) {\n    var key = item.key || [item.header, item.description].join('-');\n    return React.createElement(Card, _extends({\n      key: key\n    }, item));\n  });\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\n\nCardGroup.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"content\", \"doubling\", \"items\", \"itemsPerRow\", \"stackable\", \"textAlign\"];\nCardGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A group of cards can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A group of cards can double its column width for mobile. */\n  doubling: PropTypes.bool,\n\n  /** Shorthand array of props for Card. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A group of cards can set how many cards should exist in a row. */\n  itemsPerRow: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A group of cards can automatically stack rows to a single columns on mobile devices. */\n  stackable: PropTypes.bool,\n\n  /** A card group can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\nimport Image from '../../elements/Image';\nimport CardContent from './CardContent';\nimport CardDescription from './CardDescription';\nimport CardGroup from './CardGroup';\nimport CardHeader from './CardHeader';\nimport CardMeta from './CardMeta';\n/**\n * A card displays site content in a manner similar to a playing card.\n */\n\nvar Card =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Card, _Component);\n\n  function Card() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Card)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      var onClick = _this.props.onClick;\n      if (onClick) onClick(e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          centered = _this$props.centered,\n          children = _this$props.children,\n          className = _this$props.className,\n          color = _this$props.color,\n          content = _this$props.content,\n          description = _this$props.description,\n          extra = _this$props.extra,\n          fluid = _this$props.fluid,\n          header = _this$props.header,\n          href = _this$props.href,\n          image = _this$props.image,\n          link = _this$props.link,\n          meta = _this$props.meta,\n          onClick = _this$props.onClick,\n          raised = _this$props.raised;\n      var classes = cx('ui', color, useKeyOnly(centered, 'centered'), useKeyOnly(fluid, 'fluid'), useKeyOnly(link, 'link'), useKeyOnly(raised, 'raised'), 'card', className);\n      var rest = getUnhandledProps(Card, this.props);\n      var ElementType = getElementType(Card, this.props, function () {\n        if (onClick) return 'a';\n      });\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          href: href,\n          onClick: this.handleClick\n        }), children);\n      }\n\n      if (!childrenUtils.isNil(content)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes,\n          href: href,\n          onClick: this.handleClick\n        }), content);\n      }\n\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        href: href,\n        onClick: this.handleClick\n      }), Image.create(image, {\n        autoGenerateKey: false,\n        defaultProps: {\n          ui: false,\n          wrapped: true\n        }\n      }), (description || header || meta) && React.createElement(CardContent, {\n        description: description,\n        header: header,\n        meta: meta\n      }), extra && React.createElement(CardContent, {\n        extra: true\n      }, extra));\n    }\n  }]);\n\n  return Card;\n}(Component);\n\n_defineProperty(Card, \"Content\", CardContent);\n\n_defineProperty(Card, \"Description\", CardDescription);\n\n_defineProperty(Card, \"Group\", CardGroup);\n\n_defineProperty(Card, \"Header\", CardHeader);\n\n_defineProperty(Card, \"Meta\", CardMeta);\n\n_defineProperty(Card, \"handledProps\", [\"as\", \"centered\", \"children\", \"className\", \"color\", \"content\", \"description\", \"extra\", \"fluid\", \"header\", \"href\", \"image\", \"link\", \"meta\", \"onClick\", \"raised\"]);\n\nexport { Card as default };\nCard.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A Card can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A Card can be formatted to display different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for CardDescription. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for primary content of CardContent. */\n  extra: customPropTypes.contentShorthand,\n\n  /** A Card can be formatted to take up the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Shorthand for CardHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** Render as an `a` tag instead of a `div` and adds the href attribute. */\n  href: PropTypes.string,\n\n  /** A card can contain an Image component. */\n  image: customPropTypes.itemShorthand,\n\n  /** A card can be formatted to link to other content. */\n  link: PropTypes.bool,\n\n  /** Shorthand for CardMeta. */\n  meta: customPropTypes.itemShorthand,\n\n  /**\n   * Called on click. When passed, the component renders as an `a`\n   * tag by default instead of a `div`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A Card can be formatted to raise above the page. */\n  raised: PropTypes.bool\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid column can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A column can specify a width for a computer. */\n  computer: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can sit flush against the left or right edge of a row. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A column can specify a width for a large screen device. */\n  largeScreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify a width for a mobile device. */\n  mobile: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A column can stretch its contents to take up the entire grid or row height. */\n  stretched: PropTypes.bool,\n\n  /** A column can specify a width for a tablet device. */\n  tablet: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A column can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A column can specify a width for a wide screen device. */\n  widescreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** Represents width of column. */\n  width: customPropTypes.every([customPropTypes.disallow(['computer', 'largeScreen', 'mobile', 'tablet', 'widescreen']), PropTypes.oneOf(SUI.WIDTHS)])\n} : {};\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGridRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A row can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid row can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Represents column count per line in Row. */\n  columns: PropTypes.oneOf([].concat(_toConsumableArray(SUI.WIDTHS), ['equal'])),\n\n  /** A row can have dividers between its columns. */\n  divided: PropTypes.bool,\n\n  /** A row can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A row can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A row can stretch its contents to take up the entire column height. */\n  stretched: PropTypes.bool,\n\n  /** A row can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A row can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default GridRow;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A grid can have rows divided into cells. */\n  celled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['internally'])]),\n\n  /** A grid can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Represents column count per row in Grid. */\n  columns: PropTypes.oneOf([].concat(_toConsumableArray(SUI.WIDTHS), ['equal'])),\n\n  /** A grid can be combined with a container to use the available layout and alignment. */\n  container: PropTypes.bool,\n\n  /** A grid can have dividers between its columns. */\n  divided: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertically'])]),\n\n  /** A grid can double its column width on tablet and mobile sizes. */\n  doubling: PropTypes.bool,\n\n  /** A grid's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\n\n  /** A grid can increase its gutters to allow for more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A grid can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\n  stackable: PropTypes.bool,\n\n  /** A grid can stretch its contents to take up the entire grid height. */\n  stretched: PropTypes.bool,\n\n  /** A grid can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default Grid;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\nimport Segment from '../../elements/Segment/Segment';\n/**\n * A tab pane holds the content of a tab.\n */\n\nfunction TabPane(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      loading = props.loading;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(loading, 'loading'), 'tab', className);\n  var rest = getUnhandledProps(TabPane, props);\n  var ElementType = getElementType(TabPane, props);\n  var calculatedDefaultProps = {};\n\n  if (ElementType === Segment) {\n    calculatedDefaultProps.attached = 'bottom';\n  }\n\n  return React.createElement(ElementType, _extends({}, calculatedDefaultProps, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nTabPane.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\", \"loading\"];\nTabPane.defaultProps = {\n  as: Segment,\n  active: true\n};\nTabPane.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A tab pane can be active. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A Tab.Pane can display a loading indicator. */\n  loading: PropTypes.bool\n} : {};\nTabPane.create = createShorthandFactory(TabPane, function (content) {\n  return {\n    content: content\n  };\n});\nexport default TabPane;","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _map from \"lodash/map\";\nimport _get from \"lodash/get\";\nimport _invoke from \"lodash/invoke\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { AutoControlledComponent as Component, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport Grid from '../../collections/Grid/Grid';\nimport GridColumn from '../../collections/Grid/GridColumn';\nimport Menu from '../../collections/Menu/Menu';\nimport TabPane from './TabPane';\n/**\n * A Tab is a hidden section of content activated by a Menu.\n * @see Menu\n * @see Segment\n */\n\nvar Tab =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Tab, _Component);\n\n  function Tab() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Tab);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Tab)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleItemClick\", function (e, _ref) {\n      var index = _ref.index;\n\n      _invoke(_this.props, 'onTabChange', e, _objectSpread({}, _this.props, {\n        activeIndex: index\n      }));\n\n      _this.trySetState({\n        activeIndex: index\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Tab, [{\n    key: \"getInitialAutoControlledState\",\n    value: function getInitialAutoControlledState() {\n      return {\n        activeIndex: 0\n      };\n    }\n  }, {\n    key: \"renderItems\",\n    value: function renderItems() {\n      var _this$props = this.props,\n          panes = _this$props.panes,\n          renderActiveOnly = _this$props.renderActiveOnly;\n      var activeIndex = this.state.activeIndex;\n      if (renderActiveOnly) return _invoke(_get(panes, \"[\".concat(activeIndex, \"]\")), 'render', this.props);\n      return _map(panes, function (_ref2, index) {\n        var pane = _ref2.pane;\n        return TabPane.create(pane, {\n          overrideProps: {\n            active: index === activeIndex\n          }\n        });\n      });\n    }\n  }, {\n    key: \"renderMenu\",\n    value: function renderMenu() {\n      var _this$props2 = this.props,\n          menu = _this$props2.menu,\n          panes = _this$props2.panes,\n          menuPosition = _this$props2.menuPosition;\n      var activeIndex = this.state.activeIndex;\n\n      if (menu.tabular === true && menuPosition === 'right') {\n        menu.tabular = 'right';\n      }\n\n      return Menu.create(menu, {\n        autoGenerateKey: false,\n        overrideProps: {\n          items: _map(panes, 'menuItem'),\n          onItemClick: this.handleItemClick,\n          activeIndex: activeIndex\n        }\n      });\n    }\n  }, {\n    key: \"renderVertical\",\n    value: function renderVertical(menu) {\n      var _this$props3 = this.props,\n          grid = _this$props3.grid,\n          menuPosition = _this$props3.menuPosition;\n\n      var paneWidth = grid.paneWidth,\n          tabWidth = grid.tabWidth,\n          gridProps = _objectWithoutProperties(grid, [\"paneWidth\", \"tabWidth\"]);\n\n      var position = menuPosition || menu.props.tabular === 'right' && 'right' || 'left';\n      return React.createElement(Grid, gridProps, position === 'left' && GridColumn.create({\n        width: tabWidth,\n        children: menu\n      }, {\n        autoGenerateKey: false\n      }), GridColumn.create({\n        width: paneWidth,\n        children: this.renderItems(),\n        stretched: true\n      }, {\n        autoGenerateKey: false\n      }), position === 'right' && GridColumn.create({\n        width: tabWidth,\n        children: menu\n      }, {\n        autoGenerateKey: false\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var menu = this.renderMenu();\n      var rest = getUnhandledProps(Tab, this.props);\n      var ElementType = getElementType(Tab, this.props);\n\n      if (menu.props.vertical) {\n        return React.createElement(ElementType, rest, this.renderVertical(menu));\n      }\n\n      return React.createElement(ElementType, rest, menu.props.attached !== 'bottom' && menu, this.renderItems(), menu.props.attached === 'bottom' && menu);\n    }\n  }]);\n\n  return Tab;\n}(Component);\n\n_defineProperty(Tab, \"autoControlledProps\", ['activeIndex']);\n\n_defineProperty(Tab, \"defaultProps\", {\n  grid: {\n    paneWidth: 12,\n    tabWidth: 4\n  },\n  menu: {\n    attached: true,\n    tabular: true\n  },\n  renderActiveOnly: true\n});\n\n_defineProperty(Tab, \"Pane\", TabPane);\n\n_defineProperty(Tab, \"handledProps\", [\"activeIndex\", \"as\", \"defaultActiveIndex\", \"grid\", \"menu\", \"menuPosition\", \"onTabChange\", \"panes\", \"renderActiveOnly\"]);\n\nTab.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** The initial activeIndex. */\n  defaultActiveIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Index of the currently active tab. */\n  activeIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Shorthand props for the Menu.\n   * tabular, if true, will derive final value from `menuPosition`, otherwise set 'left' or 'right' explicitly.\n   */\n  menu: PropTypes.object,\n\n  /** Align vertical menu */\n  menuPosition: PropTypes.oneOf(['left', 'right']),\n\n  /** Shorthand props for the Grid. */\n  grid: PropTypes.object,\n\n  /**\n   * Called on tab change.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and proposed new activeIndex.\n   * @param {object} data.activeIndex - The new proposed activeIndex.\n   */\n  onTabChange: PropTypes.func,\n\n  /**\n   * Array of objects describing each Menu.Item and Tab.Pane:\n   * { menuItem: 'Home', render: () => <Tab.Pane /> }\n   * or\n   * { menuItem: 'Home', pane: 'Welcome' }\n   */\n  panes: PropTypes.arrayOf(PropTypes.shape({\n    menuItem: customPropTypes.itemShorthand,\n    pane: customPropTypes.itemShorthand,\n    render: PropTypes.func\n  })),\n\n  /** A Tab can render only active pane. */\n  renderActiveOnly: PropTypes.bool\n} : {};\nexport default Tab;"],"sourceRoot":""}