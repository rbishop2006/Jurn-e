{"version":3,"sources":["components/auth/Register.js"],"names":["props","signin","useAuth","useState","username","setUsername","usernameError","setUsernameError","fname","setFname","fnameError","setFnameError","lname","setLname","lnameError","setLnameError","password","setPassword","passwordError","setPasswordError","confirm","setConfirm","confirmError","setConfirmError","id","to","className","src","alt","onSubmit","e","preventDefault","valid","validator","isEmail","isAlpha","isAlphanumeric","equals","api","post","then","data","history","push","Field","htmlFor","type","value","onChange","target","placeholder"],"mappings":"gOAOe,mBAACA,GAAW,IAClBC,EAAWC,oBAAXD,OADiB,EAEOE,mBAAS,IAFhB,mBAElBC,EAFkB,KAERC,EAFQ,OAGiBF,mBAAS,IAH1B,mBAGlBG,EAHkB,KAGHC,EAHG,OAICJ,mBAAS,IAJV,mBAIlBK,EAJkB,KAIXC,EAJW,OAKWN,mBAAS,IALpB,mBAKlBO,EALkB,KAKNC,EALM,OAMCR,mBAAS,IANV,mBAMlBS,EANkB,KAMXC,EANW,OAOWV,mBAAS,IAPpB,mBAOlBW,EAPkB,KAONC,EAPM,OAQOZ,mBAAS,IARhB,mBAQlBa,EARkB,KAQRC,EARQ,OASiBd,mBAAS,IAT1B,mBASlBe,EATkB,KASHC,EATG,OAUKhB,mBAAS,IAVd,mBAUlBiB,EAVkB,KAUTC,EAVS,OAWelB,mBAAS,IAXxB,mBAWlBmB,EAXkB,KAWJC,EAXI,KA+DzB,OACC,yBAAKC,GAAG,YACP,kBAAC,OAAD,CAAMC,GAAI,SAAUC,UAAU,QAC7B,yBAAKC,IAAI,qBAAqBC,IAAI,qBAEnC,kBAAC,IAAD,CAAMC,SAvDR,SAAwBC,GACvBA,EAAEC,iBACF,IAAIC,GAAQ,EAEPC,IAAUC,QAAQ9B,GAItBG,EAAiB,KAHjByB,GAAQ,EACRzB,EAAiB,wCAKb0B,IAAUE,QAAQ3B,EAAO,SAI7BG,EAAc,KAHdqB,GAAQ,EACRrB,EAAc,iDAKVsB,IAAUE,QAAQvB,EAAO,SAI7BG,EAAc,KAHdiB,GAAQ,EACRjB,EAAc,iDAKVkB,IAAUG,eAAepB,EAAU,SAIvCG,EAAiB,KAHjBa,GAAQ,EACRb,EAAiB,sBAKbc,IAAUI,OAAOjB,EAASJ,GAI9BO,EAAgB,KAHhBS,GAAQ,EACRT,EAAgB,2BAKbS,GACHM,MACEC,KAAK,YAAa,CAAEnC,WAAUI,QAAOI,QAAOI,aAC5CwB,MAAK,SAACC,GACNxC,EAAOG,EAAUY,GAAUwB,MAAK,WAC/BxC,EAAM0C,QAAQC,KAAK,2BAWUjB,UAAU,eACzC,kBAAC,IAAKkB,MAAN,KACC,2BAAOlB,UAAWpB,EAAgB,QAAU,GAAIuC,QAAQ,SAAxD,SACQvC,GAAiBA,GAEzB,2BACCkB,GAAG,QACHsB,KAAK,QACLC,MAAO3C,EACPsB,UAAWpB,EAAgB,WAAa,GACxC0C,SAAU,SAAClB,GAAD,OAAOzB,EAAYyB,EAAEmB,OAAOF,QACtCG,YAAY,yBAGd,kBAAC,IAAKN,MAAN,KACC,2BAAOlB,UAAWhB,EAAa,QAAU,GAAImC,QAAQ,SAArD,cACanC,GAAcA,GAE3B,2BACCc,GAAG,QACHsB,KAAK,OACLC,MAAOvC,EACPkB,UAAWhB,EAAa,WAAa,GACrCsC,SAAU,SAAClB,GAAD,OAAOrB,EAASqB,EAAEmB,OAAOF,QACnCG,YAAY,cAGd,kBAAC,IAAKN,MAAN,KACC,2BAAOlB,UAAWZ,EAAa,QAAU,GAAI+B,QAAQ,SAArD,aACY/B,GAAcA,GAE1B,2BACCU,GAAG,QACHsB,KAAK,OACLC,MAAOnC,EACPc,UAAWZ,EAAa,WAAa,GACrCkC,SAAU,SAAClB,GAAD,OAAOjB,EAASiB,EAAEmB,OAAOF,QACnCG,YAAY,eAGd,kBAAC,IAAKN,MAAN,KACC,2BAAOlB,UAAWR,EAAgB,QAAU,GAAI2B,QAAQ,YAAxD,YACW3B,GAAiBA,GAE5B,2BACCM,GAAG,WACHsB,KAAK,WACLC,MAAO/B,EACPU,UAAWR,EAAgB,WAAa,GACxC8B,SAAU,SAAClB,GAAD,OAAOb,EAAYa,EAAEmB,OAAOF,QACtCG,YAAY,uBAGd,kBAAC,IAAKN,MAAN,KACC,2BAAOlB,UAAWJ,EAAe,QAAU,GAAIuB,QAAQ,WAAvD,oBACmBvB,GAAgBA,GAEnC,2BACCE,GAAG,UACHsB,KAAK,WACLC,MAAO3B,EACPM,UAAWJ,EAAe,WAAa,GACvC0B,SAAU,SAAClB,GAAD,OAAOT,EAAWS,EAAEmB,OAAOF,QACrCG,YAAY,uBAGd,kBAAC,IAAD,CAAQJ,KAAK,UAAb,YACA,yBAAKpB,UAAU,WACd,6CACgB,oCADhB,aAGA,kBAAC,OAAD,CAAMD,GAAG,UAAT","file":"static/js/9.5f48ed54.chunk.js","sourcesContent":["import React, { useState } from \"react\"\nimport { api, useAuth } from \"react-auth\"\nimport { Link } from \"react-router-dom\"\nimport validator from \"validator\"\nimport { Button, Form } from \"semantic-ui-react\"\nimport \"../../styles/LoginRegister.scss\"\n\nexport default (props) => {\n\tconst { signin } = useAuth()\n\tconst [username, setUsername] = useState(\"\")\n\tconst [usernameError, setUsernameError] = useState(\"\")\n\tconst [fname, setFname] = useState(\"\")\n\tconst [fnameError, setFnameError] = useState(\"\")\n\tconst [lname, setLname] = useState(\"\")\n\tconst [lnameError, setLnameError] = useState(\"\")\n\tconst [password, setPassword] = useState(\"\")\n\tconst [passwordError, setPasswordError] = useState(\"\")\n\tconst [confirm, setConfirm] = useState(\"\")\n\tconst [confirmError, setConfirmError] = useState(\"\")\n\n\tfunction handleRegister(e) {\n\t\te.preventDefault()\n\t\tlet valid = true\n\n\t\tif (!validator.isEmail(username)) {\n\t\t\tvalid = false\n\t\t\tsetUsernameError(` - Please enter valid email address`)\n\t\t} else {\n\t\t\tsetUsernameError(\"\")\n\t\t}\n\n\t\tif (!validator.isAlpha(fname, \"en-US\")) {\n\t\t\tvalid = false\n\t\t\tsetFnameError(` - Can't be blank & can only contain letters`)\n\t\t} else {\n\t\t\tsetFnameError(\"\")\n\t\t}\n\n\t\tif (!validator.isAlpha(lname, \"en-US\")) {\n\t\t\tvalid = false\n\t\t\tsetLnameError(` - Can't be blank & can only contain letters`)\n\t\t} else {\n\t\t\tsetLnameError(\"\")\n\t\t}\n\n\t\tif (!validator.isAlphanumeric(password, \"en-US\")) {\n\t\t\tvalid = false\n\t\t\tsetPasswordError(` - Can't be blank`)\n\t\t} else {\n\t\t\tsetPasswordError(\"\")\n\t\t}\n\n\t\tif (!validator.equals(confirm, password)) {\n\t\t\tvalid = false\n\t\t\tsetConfirmError(` - Must match password`)\n\t\t} else {\n\t\t\tsetConfirmError(\"\")\n\t\t}\n\n\t\tif (valid) {\n\t\t\tapi\n\t\t\t\t.post(\"/register\", { username, fname, lname, password })\n\t\t\t\t.then((data) => {\n\t\t\t\t\tsignin(username, password).then(() => {\n\t\t\t\t\t\tprops.history.push(\"/Jurne/dashboard\")\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t}\n\t}\n\n\treturn (\n\t\t<div id=\"register\">\n\t\t\t<Link to={\"/Jurne\"} className=\"logo\">\n\t\t\t\t<img src=\"/JurnEase-logo.png\" alt=\"Jurn(ease) logo\"></img>\n\t\t\t</Link>\n\t\t\t<Form onSubmit={handleRegister} className=\"registerDiv\">\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label className={usernameError ? \"error\" : \"\"} htmlFor=\"email\">\n\t\t\t\t\t\tEmail {usernameError && usernameError}\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\tclassName={usernameError ? \"errorBox\" : \"\"}\n\t\t\t\t\t\tonChange={(e) => setUsername(e.target.value)}\n\t\t\t\t\t\tplaceholder=\"johnsmith@email.com\"\n\t\t\t\t\t/>\n\t\t\t\t</Form.Field>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label className={fnameError ? \"error\" : \"\"} htmlFor=\"fname\">\n\t\t\t\t\t\tFirst Name {fnameError && fnameError}\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"fname\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={fname}\n\t\t\t\t\t\tclassName={fnameError ? \"errorBox\" : \"\"}\n\t\t\t\t\t\tonChange={(e) => setFname(e.target.value)}\n\t\t\t\t\t\tplaceholder=\"ex. John\"\n\t\t\t\t\t/>\n\t\t\t\t</Form.Field>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label className={lnameError ? \"error\" : \"\"} htmlFor=\"lname\">\n\t\t\t\t\t\tLast Name {lnameError && lnameError}\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"lname\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={lname}\n\t\t\t\t\t\tclassName={lnameError ? \"errorBox\" : \"\"}\n\t\t\t\t\t\tonChange={(e) => setLname(e.target.value)}\n\t\t\t\t\t\tplaceholder=\"ex. Smith\"\n\t\t\t\t\t/>\n\t\t\t\t</Form.Field>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label className={passwordError ? \"error\" : \"\"} htmlFor=\"password\">\n\t\t\t\t\t\tPassword {passwordError && passwordError}\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tclassName={passwordError ? \"errorBox\" : \"\"}\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\tplaceholder=\"Create a password\"\n\t\t\t\t\t/>\n\t\t\t\t</Form.Field>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<label className={confirmError ? \"error\" : \"\"} htmlFor=\"confirm\">\n\t\t\t\t\t\tConfirm Password {confirmError && confirmError}\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"confirm\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tvalue={confirm}\n\t\t\t\t\t\tclassName={confirmError ? \"errorBox\" : \"\"}\n\t\t\t\t\t\tonChange={(e) => setConfirm(e.target.value)}\n\t\t\t\t\t\tplaceholder=\"Re-enter password\"\n\t\t\t\t\t/>\n\t\t\t\t</Form.Field>\n\t\t\t\t<Button type=\"submit\">Register</Button>\n\t\t\t\t<div className=\"linkDiv\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tAlready a Jurn(<em>ease</em>) member?\n\t\t\t\t\t</p>\n\t\t\t\t\t<Link to=\"/login\">Click Here</Link>\n\t\t\t\t</div>\n\t\t\t</Form>\n\t\t</div>\n\t)\n}\n"],"sourceRoot":""}